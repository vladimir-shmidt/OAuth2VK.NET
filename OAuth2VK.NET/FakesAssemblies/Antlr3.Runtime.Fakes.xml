<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Antlr3.Runtime.Fakes</name>
    </assembly>
    <members>
        <member name="T:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener">
            <summary>Stub type of Antlr.Runtime.Debug.IDebugEventListener</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.#ctor">
            <summary>Initializes a new instance of type StubIDebugEventListener</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.AddChildObjectObject">
            <summary>Sets the stub of IDebugEventListener.AddChild(Object root, Object child)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#AddChild(System.Object,System.Object)">
            <summary>Sets the stub of IDebugEventListener.AddChild(Object root, Object child)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#BecomeRoot(System.Object,System.Object)">
            <summary>Sets the stub of IDebugEventListener.BecomeRoot(Object newRoot, Object oldRoot)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#BeginBacktrack(System.Int32)">
            <summary>Sets the stub of IDebugEventListener.BeginBacktrack(Int32 level)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#BeginResync">
            <summary>Sets the stub of IDebugEventListener.BeginResync()</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#Commence">
            <summary>Sets the stub of IDebugEventListener.Commence()</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#ConsumeHiddenToken(Antlr.Runtime.IToken)">
            <summary>Sets the stub of IDebugEventListener.ConsumeHiddenToken(IToken t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#ConsumeNode(System.Object)">
            <summary>Sets the stub of IDebugEventListener.ConsumeNode(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#ConsumeToken(Antlr.Runtime.IToken)">
            <summary>Sets the stub of IDebugEventListener.ConsumeToken(IToken t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#CreateNode(System.Object)">
            <summary>Sets the stub of IDebugEventListener.CreateNode(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#CreateNode(System.Object,Antlr.Runtime.IToken)">
            <summary>Sets the stub of IDebugEventListener.CreateNode(Object node, IToken token)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#EndBacktrack(System.Int32,System.Boolean)">
            <summary>Sets the stub of IDebugEventListener.EndBacktrack(Int32 level, Boolean successful)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#EndResync">
            <summary>Sets the stub of IDebugEventListener.EndResync()</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#EnterAlt(System.Int32)">
            <summary>Sets the stub of IDebugEventListener.EnterAlt(Int32 alt)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#EnterDecision(System.Int32,System.Boolean)">
            <summary>Sets the stub of IDebugEventListener.EnterDecision(Int32 decisionNumber, Boolean couldBacktrack)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#EnterRule(System.String,System.String)">
            <summary>Sets the stub of IDebugEventListener.EnterRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#EnterSubRule(System.Int32)">
            <summary>Sets the stub of IDebugEventListener.EnterSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#ErrorNode(System.Object)">
            <summary>Sets the stub of IDebugEventListener.ErrorNode(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#ExitDecision(System.Int32)">
            <summary>Sets the stub of IDebugEventListener.ExitDecision(Int32 decisionNumber)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#ExitRule(System.String,System.String)">
            <summary>Sets the stub of IDebugEventListener.ExitRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#ExitSubRule(System.Int32)">
            <summary>Sets the stub of IDebugEventListener.ExitSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#Initialize">
            <summary>Sets the stub of IDebugEventListener.Initialize()</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#LT(System.Int32,Antlr.Runtime.IToken)">
            <summary>Sets the stub of IDebugEventListener.LT(Int32 i, IToken t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#LT(System.Int32,System.Object)">
            <summary>Sets the stub of IDebugEventListener.LT(Int32 i, Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#Location(System.Int32,System.Int32)">
            <summary>Sets the stub of IDebugEventListener.Location(Int32 line, Int32 pos)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#Mark(System.Int32)">
            <summary>Sets the stub of IDebugEventListener.Mark(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#NilNode(System.Object)">
            <summary>Sets the stub of IDebugEventListener.NilNode(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#RecognitionException(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of IDebugEventListener.RecognitionException(RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#Rewind">
            <summary>Sets the stub of IDebugEventListener.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#Rewind(System.Int32)">
            <summary>Sets the stub of IDebugEventListener.Rewind(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#SemanticPredicate(System.Boolean,System.String)">
            <summary>Sets the stub of IDebugEventListener.SemanticPredicate(Boolean result, String predicate)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#SetTokenBoundaries(System.Object,System.Int32,System.Int32)">
            <summary>Sets the stub of IDebugEventListener.SetTokenBoundaries(Object t, Int32 tokenStartIndex, Int32 tokenStopIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.a3r::Antlr#Runtime#Debug#IDebugEventListener#Terminate">
            <summary>Sets the stub of IDebugEventListener.Terminate()</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.BecomeRootObjectObject">
            <summary>Sets the stub of IDebugEventListener.BecomeRoot(Object newRoot, Object oldRoot)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.BeginBacktrackInt32">
            <summary>Sets the stub of IDebugEventListener.BeginBacktrack(Int32 level)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.BeginResync">
            <summary>Sets the stub of IDebugEventListener.BeginResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.Commence">
            <summary>Sets the stub of IDebugEventListener.Commence()</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.ConsumeHiddenTokenIToken">
            <summary>Sets the stub of IDebugEventListener.ConsumeHiddenToken(IToken t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.ConsumeNodeObject">
            <summary>Sets the stub of IDebugEventListener.ConsumeNode(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.ConsumeTokenIToken">
            <summary>Sets the stub of IDebugEventListener.ConsumeToken(IToken t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.CreateNodeObject">
            <summary>Sets the stub of IDebugEventListener.CreateNode(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.CreateNodeObjectIToken">
            <summary>Sets the stub of IDebugEventListener.CreateNode(Object node, IToken token)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.EndBacktrackInt32Boolean">
            <summary>Sets the stub of IDebugEventListener.EndBacktrack(Int32 level, Boolean successful)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.EndResync">
            <summary>Sets the stub of IDebugEventListener.EndResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.EnterAltInt32">
            <summary>Sets the stub of IDebugEventListener.EnterAlt(Int32 alt)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.EnterDecisionInt32Boolean">
            <summary>Sets the stub of IDebugEventListener.EnterDecision(Int32 decisionNumber, Boolean couldBacktrack)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.EnterRuleStringString">
            <summary>Sets the stub of IDebugEventListener.EnterRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.EnterSubRuleInt32">
            <summary>Sets the stub of IDebugEventListener.EnterSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.ErrorNodeObject">
            <summary>Sets the stub of IDebugEventListener.ErrorNode(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.ExitDecisionInt32">
            <summary>Sets the stub of IDebugEventListener.ExitDecision(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.ExitRuleStringString">
            <summary>Sets the stub of IDebugEventListener.ExitRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.ExitSubRuleInt32">
            <summary>Sets the stub of IDebugEventListener.ExitSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.Initialize">
            <summary>Sets the stub of IDebugEventListener.Initialize()</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.LTInt32IToken">
            <summary>Sets the stub of IDebugEventListener.LT(Int32 i, IToken t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.LTInt32Object">
            <summary>Sets the stub of IDebugEventListener.LT(Int32 i, Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.LocationInt32Int32">
            <summary>Sets the stub of IDebugEventListener.Location(Int32 line, Int32 pos)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.MarkInt32">
            <summary>Sets the stub of IDebugEventListener.Mark(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.NilNodeObject">
            <summary>Sets the stub of IDebugEventListener.NilNode(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.RecognitionExceptionRecognitionException">
            <summary>Sets the stub of IDebugEventListener.RecognitionException(RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.Rewind">
            <summary>Sets the stub of IDebugEventListener.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.RewindInt32">
            <summary>Sets the stub of IDebugEventListener.Rewind(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.SemanticPredicateBooleanString">
            <summary>Sets the stub of IDebugEventListener.SemanticPredicate(Boolean result, String predicate)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.SetTokenBoundariesObjectInt32Int32">
            <summary>Sets the stub of IDebugEventListener.SetTokenBoundaries(Object t, Int32 tokenStartIndex, Int32 tokenStopIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Debug.Fakes.StubIDebugEventListener.Terminate">
            <summary>Sets the stub of IDebugEventListener.Terminate()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimANTLRFileStream">
            <summary>Shim type of Antlr.Runtime.ANTLRFileStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRFileStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRFileStream.#ctor(Antlr.Runtime.ANTLRFileStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRFileStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRFileStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRFileStream.Bind(Antlr.Runtime.ICharStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRFileStream.Bind(Antlr.Runtime.IIntStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRFileStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRFileStream.ConstructorString">
            <summary>Sets the shim of ANTLRFileStream.ANTLRFileStream(String fileName)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRFileStream.ConstructorStringEncoding">
            <summary>Sets the shim of ANTLRFileStream.ANTLRFileStream(String fileName, Encoding encoding)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRFileStream.LoadStringEncoding">
            <summary>Sets the shim of ANTLRFileStream.Load(String fileName, Encoding encoding)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRFileStream.SourceNameGet">
            <summary>Sets the shim of ANTLRFileStream.get_SourceName()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimANTLRFileStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRFileStream.AllInstances.LoadStringEncoding">
            <summary>Sets the shim of ANTLRFileStream.Load(String fileName, Encoding encoding)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRFileStream.AllInstances.SourceNameGet">
            <summary>Sets the shim of ANTLRFileStream.get_SourceName()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimANTLRInputStream">
            <summary>Shim type of Antlr.Runtime.ANTLRInputStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRInputStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRInputStream.#ctor(Antlr.Runtime.ANTLRInputStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRInputStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRInputStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRInputStream.Bind(Antlr.Runtime.ICharStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRInputStream.Bind(Antlr.Runtime.IIntStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRInputStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRInputStream.ConstructorStream">
            <summary>Sets the shim of ANTLRInputStream.ANTLRInputStream(Stream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRInputStream.ConstructorStreamEncoding">
            <summary>Sets the shim of ANTLRInputStream.ANTLRInputStream(Stream input, Encoding encoding)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRInputStream.ConstructorStreamInt32">
            <summary>Sets the shim of ANTLRInputStream.ANTLRInputStream(Stream input, Int32 size)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRInputStream.ConstructorStreamInt32Encoding">
            <summary>Sets the shim of ANTLRInputStream.ANTLRInputStream(Stream input, Int32 size, Encoding encoding)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRInputStream.ConstructorStreamInt32Int32Encoding">
            <summary>Sets the shim of ANTLRInputStream.ANTLRInputStream(Stream input, Int32 size, Int32 readBufferSize, Encoding encoding)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRInputStream.GetStreamReaderStreamEncoding">
            <summary>Sets the shim of ANTLRInputStream.GetStreamReader(Stream input, Encoding encoding)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimANTLRInputStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimANTLRReaderStream">
            <summary>Shim type of Antlr.Runtime.ANTLRReaderStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRReaderStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRReaderStream.#ctor(Antlr.Runtime.ANTLRReaderStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRReaderStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRReaderStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRReaderStream.Bind(Antlr.Runtime.ICharStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRReaderStream.Bind(Antlr.Runtime.IIntStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRReaderStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRReaderStream.ConstructorTextReader">
            <summary>Sets the shim of ANTLRReaderStream.ANTLRReaderStream(TextReader r)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRReaderStream.ConstructorTextReaderInt32">
            <summary>Sets the shim of ANTLRReaderStream.ANTLRReaderStream(TextReader r, Int32 size)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRReaderStream.ConstructorTextReaderInt32Int32">
            <summary>Sets the shim of ANTLRReaderStream.ANTLRReaderStream(TextReader r, Int32 size, Int32 readChunkSize)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRReaderStream.LoadTextReaderInt32Int32">
            <summary>Sets the shim of ANTLRReaderStream.Load(TextReader r, Int32 size, Int32 readChunkSize)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimANTLRReaderStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRReaderStream.AllInstances.LoadTextReaderInt32Int32">
            <summary>Sets the shim of ANTLRReaderStream.Load(TextReader r, Int32 size, Int32 readChunkSize)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimANTLRStringStream">
            <summary>Shim type of Antlr.Runtime.ANTLRStringStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRStringStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRStringStream.#ctor(Antlr.Runtime.ANTLRStringStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRStringStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRStringStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRStringStream.Bind(Antlr.Runtime.ICharStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimANTLRStringStream.Bind(Antlr.Runtime.IIntStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.CharPositionInLineGet">
            <summary>Sets the shim of ANTLRStringStream.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.CharPositionInLineSetInt32">
            <summary>Sets the shim of ANTLRStringStream.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.Constructor">
            <summary>Sets the shim of ANTLRStringStream.ANTLRStringStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.ConstructorCharArrayInt32">
            <summary>Sets the shim of ANTLRStringStream.ANTLRStringStream(Char[] data, Int32 numberOfActualCharsInArray)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.ConstructorCharArrayInt32String">
            <summary>Sets the shim of ANTLRStringStream.ANTLRStringStream(Char[] data, Int32 numberOfActualCharsInArray, String sourceName)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.ConstructorString">
            <summary>Sets the shim of ANTLRStringStream.ANTLRStringStream(String input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.ConstructorStringString">
            <summary>Sets the shim of ANTLRStringStream.ANTLRStringStream(String input, String sourceName)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.Consume">
            <summary>Sets the shim of ANTLRStringStream.Consume()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.CountGet">
            <summary>Sets the shim of ANTLRStringStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.IndexGet">
            <summary>Sets the shim of ANTLRStringStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.LAInt32">
            <summary>Sets the shim of ANTLRStringStream.LA(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.LTInt32">
            <summary>Sets the shim of ANTLRStringStream.LT(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.LineGet">
            <summary>Sets the shim of ANTLRStringStream.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.LineSetInt32">
            <summary>Sets the shim of ANTLRStringStream.set_Line(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.Mark">
            <summary>Sets the shim of ANTLRStringStream.Mark()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.ReleaseInt32">
            <summary>Sets the shim of ANTLRStringStream.Release(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.Reset">
            <summary>Sets the shim of ANTLRStringStream.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.Rewind">
            <summary>Sets the shim of ANTLRStringStream.Rewind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.RewindInt32">
            <summary>Sets the shim of ANTLRStringStream.Rewind(Int32 m)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.SeekInt32">
            <summary>Sets the shim of ANTLRStringStream.Seek(Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.SourceNameGet">
            <summary>Sets the shim of ANTLRStringStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.SubstringInt32Int32">
            <summary>Sets the shim of ANTLRStringStream.Substring(Int32 start, Int32 length)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.ToString">
            <summary>Sets the shim of ANTLRStringStream.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.CharPositionInLineGet">
            <summary>Sets the shim of ANTLRStringStream.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.CharPositionInLineSetInt32">
            <summary>Sets the shim of ANTLRStringStream.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.Consume">
            <summary>Sets the shim of ANTLRStringStream.Consume()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.CountGet">
            <summary>Sets the shim of ANTLRStringStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.IndexGet">
            <summary>Sets the shim of ANTLRStringStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.LAInt32">
            <summary>Sets the shim of ANTLRStringStream.LA(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.LTInt32">
            <summary>Sets the shim of ANTLRStringStream.LT(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.LineGet">
            <summary>Sets the shim of ANTLRStringStream.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.LineSetInt32">
            <summary>Sets the shim of ANTLRStringStream.set_Line(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.Mark">
            <summary>Sets the shim of ANTLRStringStream.Mark()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.ReleaseInt32">
            <summary>Sets the shim of ANTLRStringStream.Release(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.Reset">
            <summary>Sets the shim of ANTLRStringStream.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.Rewind">
            <summary>Sets the shim of ANTLRStringStream.Rewind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.RewindInt32">
            <summary>Sets the shim of ANTLRStringStream.Rewind(Int32 m)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.SeekInt32">
            <summary>Sets the shim of ANTLRStringStream.Seek(Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.SourceNameGet">
            <summary>Sets the shim of ANTLRStringStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.SubstringInt32Int32">
            <summary>Sets the shim of ANTLRStringStream.Substring(Int32 start, Int32 length)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimANTLRStringStream.AllInstances.ToString01">
            <summary>Sets the shim of ANTLRStringStream.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimBaseRecognizer">
            <summary>Shim type of Antlr.Runtime.BaseRecognizer</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimBaseRecognizer.#ctor(Antlr.Runtime.BaseRecognizer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimBaseRecognizer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimBaseRecognizer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AlreadyParsedRuleIIntStreamInt32">
            <summary>Sets the shim of BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.BacktrackingLevelGet">
            <summary>Sets the shim of BaseRecognizer.get_BacktrackingLevel()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.BacktrackingLevelSetInt32">
            <summary>Sets the shim of BaseRecognizer.set_BacktrackingLevel(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.BeginResync">
            <summary>Sets the shim of BaseRecognizer.BeginResync()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.CombineFollowsBoolean">
            <summary>Sets the shim of BaseRecognizer.CombineFollows(Boolean exact)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.ComputeContextSensitiveRuleFOLLOW">
            <summary>Sets the shim of BaseRecognizer.ComputeContextSensitiveRuleFOLLOW()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.ComputeErrorRecoverySet">
            <summary>Sets the shim of BaseRecognizer.ComputeErrorRecoverySet()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.Constructor">
            <summary>Sets the shim of BaseRecognizer.BaseRecognizer()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.ConstructorRecognizerSharedState">
            <summary>Sets the shim of BaseRecognizer.BaseRecognizer(RecognizerSharedState state)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.ConsumeUntilIIntStreamBitSet">
            <summary>Sets the shim of BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.ConsumeUntilIIntStreamInt32">
            <summary>Sets the shim of BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.DebugBeginBacktrackInt32">
            <summary>Sets the shim of BaseRecognizer.DebugBeginBacktrack(Int32 level)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.DebugEndBacktrackInt32Boolean">
            <summary>Sets the shim of BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.DebugEnterAltInt32">
            <summary>Sets the shim of BaseRecognizer.DebugEnterAlt(Int32 alt)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.DebugEnterDecisionInt32Boolean">
            <summary>Sets the shim of BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.DebugEnterRuleStringString">
            <summary>Sets the shim of BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.DebugEnterSubRuleInt32">
            <summary>Sets the shim of BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.DebugExitDecisionInt32">
            <summary>Sets the shim of BaseRecognizer.DebugExitDecision(Int32 decisionNumber)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.DebugExitRuleStringString">
            <summary>Sets the shim of BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.DebugExitSubRuleInt32">
            <summary>Sets the shim of BaseRecognizer.DebugExitSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.DebugListenerGet">
            <summary>Sets the shim of BaseRecognizer.get_DebugListener()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.DebugLocationInt32Int32">
            <summary>Sets the shim of BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.DebugRecognitionExceptionRecognitionException">
            <summary>Sets the shim of BaseRecognizer.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.DebugSemanticPredicateBooleanString">
            <summary>Sets the shim of BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.DisplayRecognitionErrorStringArrayRecognitionException">
            <summary>Sets the shim of BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.EmitErrorMessageString">
            <summary>Sets the shim of BaseRecognizer.EmitErrorMessage(String msg)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.EndResync">
            <summary>Sets the shim of BaseRecognizer.EndResync()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.FailedGet">
            <summary>Sets the shim of BaseRecognizer.get_Failed()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.GetCurrentInputSymbolIIntStream">
            <summary>Sets the shim of BaseRecognizer.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.GetErrorHeaderRecognitionException">
            <summary>Sets the shim of BaseRecognizer.GetErrorHeader(RecognitionException e)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.GetErrorMessageRecognitionExceptionStringArray">
            <summary>Sets the shim of BaseRecognizer.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.GetMissingSymbolIIntStreamRecognitionExceptionInt32BitSet">
            <summary>Sets the shim of BaseRecognizer.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.GetRuleInvocationStack">
            <summary>Sets the shim of BaseRecognizer.GetRuleInvocationStack()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.GetRuleInvocationStackStackTrace">
            <summary>Sets the shim of BaseRecognizer.GetRuleInvocationStack(StackTrace trace)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.GetRuleMemoizationCacheSize">
            <summary>Sets the shim of BaseRecognizer.GetRuleMemoizationCacheSize()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.GetRuleMemoizationInt32Int32">
            <summary>Sets the shim of BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.GetTokenErrorDisplayIToken">
            <summary>Sets the shim of BaseRecognizer.GetTokenErrorDisplay(IToken t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.GrammarFileNameGet">
            <summary>Sets the shim of BaseRecognizer.get_GrammarFileName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.InitDFAs">
            <summary>Sets the shim of BaseRecognizer.InitDFAs()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.MatchAnyIIntStream">
            <summary>Sets the shim of BaseRecognizer.MatchAny(IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.MatchIIntStreamInt32BitSet">
            <summary>Sets the shim of BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.MemoizeIIntStreamInt32Int32">
            <summary>Sets the shim of BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.MismatchIsMissingTokenIIntStreamBitSet">
            <summary>Sets the shim of BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.MismatchIsUnwantedTokenIIntStreamInt32">
            <summary>Sets the shim of BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.NumberOfSyntaxErrorsGet">
            <summary>Sets the shim of BaseRecognizer.get_NumberOfSyntaxErrors()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.PopFollow">
            <summary>Sets the shim of BaseRecognizer.PopFollow()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.PushFollowBitSet">
            <summary>Sets the shim of BaseRecognizer.PushFollow(BitSet fset)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.RecoverFromMismatchedSetIIntStreamRecognitionExceptionBitSet">
            <summary>Sets the shim of BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.RecoverFromMismatchedTokenIIntStreamInt32BitSet">
            <summary>Sets the shim of BaseRecognizer.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.RecoverIIntStreamRecognitionException">
            <summary>Sets the shim of BaseRecognizer.Recover(IIntStream input, RecognitionException re)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.ReportErrorRecognitionException">
            <summary>Sets the shim of BaseRecognizer.ReportError(RecognitionException e)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.Reset">
            <summary>Sets the shim of BaseRecognizer.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.ToStringsICollectionOfIToken">
            <summary>Sets the shim of BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.TokenNamesGet">
            <summary>Sets the shim of BaseRecognizer.get_TokenNames()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.TraceDestinationGet">
            <summary>Sets the shim of BaseRecognizer.get_TraceDestination()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.TraceDestinationSetTextWriter">
            <summary>Sets the shim of BaseRecognizer.set_TraceDestination(TextWriter value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.TraceInStringInt32Object">
            <summary>Sets the shim of BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.TraceOutStringInt32Object">
            <summary>Sets the shim of BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.AlreadyParsedRuleIIntStreamInt32">
            <summary>Sets the shim of BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.BacktrackingLevelGet">
            <summary>Sets the shim of BaseRecognizer.get_BacktrackingLevel()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.BacktrackingLevelSetInt32">
            <summary>Sets the shim of BaseRecognizer.set_BacktrackingLevel(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.BeginResync">
            <summary>Sets the shim of BaseRecognizer.BeginResync()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.CombineFollowsBoolean">
            <summary>Sets the shim of BaseRecognizer.CombineFollows(Boolean exact)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.ComputeContextSensitiveRuleFOLLOW">
            <summary>Sets the shim of BaseRecognizer.ComputeContextSensitiveRuleFOLLOW()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.ComputeErrorRecoverySet">
            <summary>Sets the shim of BaseRecognizer.ComputeErrorRecoverySet()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.ConsumeUntilIIntStreamBitSet">
            <summary>Sets the shim of BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.ConsumeUntilIIntStreamInt32">
            <summary>Sets the shim of BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.DebugBeginBacktrackInt32">
            <summary>Sets the shim of BaseRecognizer.DebugBeginBacktrack(Int32 level)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.DebugEndBacktrackInt32Boolean">
            <summary>Sets the shim of BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.DebugEnterAltInt32">
            <summary>Sets the shim of BaseRecognizer.DebugEnterAlt(Int32 alt)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.DebugEnterDecisionInt32Boolean">
            <summary>Sets the shim of BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.DebugEnterRuleStringString">
            <summary>Sets the shim of BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.DebugEnterSubRuleInt32">
            <summary>Sets the shim of BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.DebugExitDecisionInt32">
            <summary>Sets the shim of BaseRecognizer.DebugExitDecision(Int32 decisionNumber)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.DebugExitRuleStringString">
            <summary>Sets the shim of BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.DebugExitSubRuleInt32">
            <summary>Sets the shim of BaseRecognizer.DebugExitSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.DebugListenerGet">
            <summary>Sets the shim of BaseRecognizer.get_DebugListener()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.DebugLocationInt32Int32">
            <summary>Sets the shim of BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.DebugRecognitionExceptionRecognitionException">
            <summary>Sets the shim of BaseRecognizer.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.DebugSemanticPredicateBooleanString">
            <summary>Sets the shim of BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.DisplayRecognitionErrorStringArrayRecognitionException">
            <summary>Sets the shim of BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.EmitErrorMessageString">
            <summary>Sets the shim of BaseRecognizer.EmitErrorMessage(String msg)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.EndResync">
            <summary>Sets the shim of BaseRecognizer.EndResync()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.FailedGet">
            <summary>Sets the shim of BaseRecognizer.get_Failed()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.GetCurrentInputSymbolIIntStream">
            <summary>Sets the shim of BaseRecognizer.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.GetErrorHeaderRecognitionException">
            <summary>Sets the shim of BaseRecognizer.GetErrorHeader(RecognitionException e)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.GetErrorMessageRecognitionExceptionStringArray">
            <summary>Sets the shim of BaseRecognizer.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.GetMissingSymbolIIntStreamRecognitionExceptionInt32BitSet">
            <summary>Sets the shim of BaseRecognizer.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.GetRuleInvocationStack">
            <summary>Sets the shim of BaseRecognizer.GetRuleInvocationStack()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.GetRuleMemoizationCacheSize">
            <summary>Sets the shim of BaseRecognizer.GetRuleMemoizationCacheSize()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.GetRuleMemoizationInt32Int32">
            <summary>Sets the shim of BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.GetTokenErrorDisplayIToken">
            <summary>Sets the shim of BaseRecognizer.GetTokenErrorDisplay(IToken t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.GrammarFileNameGet">
            <summary>Sets the shim of BaseRecognizer.get_GrammarFileName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.InitDFAs">
            <summary>Sets the shim of BaseRecognizer.InitDFAs()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.MatchAnyIIntStream">
            <summary>Sets the shim of BaseRecognizer.MatchAny(IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.MatchIIntStreamInt32BitSet">
            <summary>Sets the shim of BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.MemoizeIIntStreamInt32Int32">
            <summary>Sets the shim of BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.MismatchIsMissingTokenIIntStreamBitSet">
            <summary>Sets the shim of BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.MismatchIsUnwantedTokenIIntStreamInt32">
            <summary>Sets the shim of BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.NumberOfSyntaxErrorsGet">
            <summary>Sets the shim of BaseRecognizer.get_NumberOfSyntaxErrors()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.PopFollow">
            <summary>Sets the shim of BaseRecognizer.PopFollow()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.PushFollowBitSet">
            <summary>Sets the shim of BaseRecognizer.PushFollow(BitSet fset)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.RecoverFromMismatchedSetIIntStreamRecognitionExceptionBitSet">
            <summary>Sets the shim of BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.RecoverFromMismatchedTokenIIntStreamInt32BitSet">
            <summary>Sets the shim of BaseRecognizer.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.RecoverIIntStreamRecognitionException">
            <summary>Sets the shim of BaseRecognizer.Recover(IIntStream input, RecognitionException re)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.ReportErrorRecognitionException">
            <summary>Sets the shim of BaseRecognizer.ReportError(RecognitionException e)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.Reset">
            <summary>Sets the shim of BaseRecognizer.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.ToStringsICollectionOfIToken">
            <summary>Sets the shim of BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.TokenNamesGet">
            <summary>Sets the shim of BaseRecognizer.get_TokenNames()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.TraceDestinationGet">
            <summary>Sets the shim of BaseRecognizer.get_TraceDestination()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.TraceDestinationSetTextWriter">
            <summary>Sets the shim of BaseRecognizer.set_TraceDestination(TextWriter value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.TraceInStringInt32Object">
            <summary>Sets the shim of BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBaseRecognizer.AllInstances.TraceOutStringInt32Object">
            <summary>Sets the shim of BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimBitSet">
            <summary>Shim type of Antlr.Runtime.BitSet</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimBitSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimBitSet.#ctor(Antlr.Runtime.BitSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimBitSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimBitSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimBitSet.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AddInt32">
            <summary>Sets the shim of BitSet.Add(Int32 el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.BitMaskInt32">
            <summary>Sets the shim of BitSet.BitMask(Int32 bitNumber)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.Clone">
            <summary>Sets the shim of BitSet.Clone()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.Constructor">
            <summary>Sets the shim of BitSet.BitSet()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.ConstructorIEnumerableOfInt32">
            <summary>Sets the shim of BitSet.BitSet(IEnumerable`1&lt;Int32&gt; items)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.ConstructorInt32">
            <summary>Sets the shim of BitSet.BitSet(Int32 nbits)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.ConstructorUInt64Array">
            <summary>Sets the shim of BitSet.BitSet(UInt64[] bits)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.EqualsObject">
            <summary>Sets the shim of BitSet.Equals(Object other)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.GetHashCode">
            <summary>Sets the shim of BitSet.GetHashCode()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.GrowToIncludeInt32">
            <summary>Sets the shim of BitSet.GrowToInclude(Int32 bit)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.IsNil">
            <summary>Sets the shim of BitSet.IsNil()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.LengthInLongWords">
            <summary>Sets the shim of BitSet.LengthInLongWords()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.MemberInt32">
            <summary>Sets the shim of BitSet.Member(Int32 el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.NumBits">
            <summary>Sets the shim of BitSet.NumBits()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.NumWordsToHoldInt32">
            <summary>Sets the shim of BitSet.NumWordsToHold(Int32 el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.OfInt32">
            <summary>Sets the shim of BitSet.Of(Int32 el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.OfInt32Int32">
            <summary>Sets the shim of BitSet.Of(Int32 a, Int32 b)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.OfInt32Int32Int32">
            <summary>Sets the shim of BitSet.Of(Int32 a, Int32 b, Int32 c)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.OfInt32Int32Int32Int32">
            <summary>Sets the shim of BitSet.Of(Int32 a, Int32 b, Int32 c, Int32 d)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.OrBitSet">
            <summary>Sets the shim of BitSet.Or(BitSet a)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.OrInPlaceBitSet">
            <summary>Sets the shim of BitSet.OrInPlace(BitSet a)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.RemoveInt32">
            <summary>Sets the shim of BitSet.Remove(Int32 el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.SetSizeInt32">
            <summary>Sets the shim of BitSet.SetSize(Int32 nwords)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.Size">
            <summary>Sets the shim of BitSet.Size()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.ToArray">
            <summary>Sets the shim of BitSet.ToArray()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.ToString">
            <summary>Sets the shim of BitSet.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.ToStringStringArray">
            <summary>Sets the shim of BitSet.ToString(String[] tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.WordNumberInt32">
            <summary>Sets the shim of BitSet.WordNumber(Int32 bit)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimBitSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.AddInt32">
            <summary>Sets the shim of BitSet.Add(Int32 el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.Clone">
            <summary>Sets the shim of BitSet.Clone()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.EqualsObject">
            <summary>Sets the shim of BitSet.Equals(Object other)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.GetHashCode01">
            <summary>Sets the shim of BitSet.GetHashCode()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.GrowToIncludeInt32">
            <summary>Sets the shim of BitSet.GrowToInclude(Int32 bit)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.IsNil">
            <summary>Sets the shim of BitSet.IsNil()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.LengthInLongWords">
            <summary>Sets the shim of BitSet.LengthInLongWords()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.MemberInt32">
            <summary>Sets the shim of BitSet.Member(Int32 el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.NumBits">
            <summary>Sets the shim of BitSet.NumBits()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.OrBitSet">
            <summary>Sets the shim of BitSet.Or(BitSet a)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.OrInPlaceBitSet">
            <summary>Sets the shim of BitSet.OrInPlace(BitSet a)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.RemoveInt32">
            <summary>Sets the shim of BitSet.Remove(Int32 el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.SetSizeInt32">
            <summary>Sets the shim of BitSet.SetSize(Int32 nwords)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.Size">
            <summary>Sets the shim of BitSet.Size()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.ToArray">
            <summary>Sets the shim of BitSet.ToArray()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.ToString01">
            <summary>Sets the shim of BitSet.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBitSet.AllInstances.ToStringStringArray">
            <summary>Sets the shim of BitSet.ToString(String[] tokenNames)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimBufferedTokenStream">
            <summary>Shim type of Antlr.Runtime.BufferedTokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimBufferedTokenStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimBufferedTokenStream.#ctor(Antlr.Runtime.BufferedTokenStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimBufferedTokenStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimBufferedTokenStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimBufferedTokenStream.Bind(Antlr.Runtime.IIntStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimBufferedTokenStream.Bind(Antlr.Runtime.ITokenStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimBufferedTokenStream.Bind(Antlr.Runtime.ITokenStreamInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.Constructor">
            <summary>Sets the shim of BufferedTokenStream.BufferedTokenStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.ConstructorITokenSource">
            <summary>Sets the shim of BufferedTokenStream.BufferedTokenStream(ITokenSource tokenSource)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.Consume">
            <summary>Sets the shim of BufferedTokenStream.Consume()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.CountGet">
            <summary>Sets the shim of BufferedTokenStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.FetchInt32">
            <summary>Sets the shim of BufferedTokenStream.Fetch(Int32 n)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.Fill">
            <summary>Sets the shim of BufferedTokenStream.Fill()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.GetInt32">
            <summary>Sets the shim of BufferedTokenStream.Get(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.GetTokens">
            <summary>Sets the shim of BufferedTokenStream.GetTokens()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.GetTokensInt32Int32">
            <summary>Sets the shim of BufferedTokenStream.GetTokens(Int32 start, Int32 stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.GetTokensInt32Int32BitSet">
            <summary>Sets the shim of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, BitSet types)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.GetTokensInt32Int32IEnumerableOfInt32">
            <summary>Sets the shim of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, IEnumerable`1&lt;Int32&gt; types)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.GetTokensInt32Int32Int32">
            <summary>Sets the shim of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.IndexGet">
            <summary>Sets the shim of BufferedTokenStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.LAInt32">
            <summary>Sets the shim of BufferedTokenStream.LA(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.LBInt32">
            <summary>Sets the shim of BufferedTokenStream.LB(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.LTInt32">
            <summary>Sets the shim of BufferedTokenStream.LT(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.LastRealTokenGet">
            <summary>Sets the shim of BufferedTokenStream.get_LastRealToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.LastTokenGet">
            <summary>Sets the shim of BufferedTokenStream.get_LastToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.Mark">
            <summary>Sets the shim of BufferedTokenStream.Mark()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.MaxLookBehindGet">
            <summary>Sets the shim of BufferedTokenStream.get_MaxLookBehind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.RangeGet">
            <summary>Sets the shim of BufferedTokenStream.get_Range()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.RangeSetInt32">
            <summary>Sets the shim of BufferedTokenStream.set_Range(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.ReleaseInt32">
            <summary>Sets the shim of BufferedTokenStream.Release(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.Reset">
            <summary>Sets the shim of BufferedTokenStream.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.Rewind">
            <summary>Sets the shim of BufferedTokenStream.Rewind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.RewindInt32">
            <summary>Sets the shim of BufferedTokenStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.SeekInt32">
            <summary>Sets the shim of BufferedTokenStream.Seek(Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.Setup">
            <summary>Sets the shim of BufferedTokenStream.Setup()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.SourceNameGet">
            <summary>Sets the shim of BufferedTokenStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.SyncInt32">
            <summary>Sets the shim of BufferedTokenStream.Sync(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.ToString">
            <summary>Sets the shim of BufferedTokenStream.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.ToStringITokenIToken">
            <summary>Sets the shim of BufferedTokenStream.ToString(IToken start, IToken stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.ToStringInt32Int32">
            <summary>Sets the shim of BufferedTokenStream.ToString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.TokenSourceGet">
            <summary>Sets the shim of BufferedTokenStream.get_TokenSource()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.TokenSourceSetITokenSource">
            <summary>Sets the shim of BufferedTokenStream.set_TokenSource(ITokenSource value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.Consume">
            <summary>Sets the shim of BufferedTokenStream.Consume()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.CountGet">
            <summary>Sets the shim of BufferedTokenStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.FetchInt32">
            <summary>Sets the shim of BufferedTokenStream.Fetch(Int32 n)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.Fill">
            <summary>Sets the shim of BufferedTokenStream.Fill()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.GetInt32">
            <summary>Sets the shim of BufferedTokenStream.Get(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.GetTokens">
            <summary>Sets the shim of BufferedTokenStream.GetTokens()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.GetTokensInt32Int32">
            <summary>Sets the shim of BufferedTokenStream.GetTokens(Int32 start, Int32 stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.GetTokensInt32Int32BitSet">
            <summary>Sets the shim of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, BitSet types)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.GetTokensInt32Int32IEnumerableOfInt32">
            <summary>Sets the shim of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, IEnumerable`1&lt;Int32&gt; types)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.GetTokensInt32Int32Int32">
            <summary>Sets the shim of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.IndexGet">
            <summary>Sets the shim of BufferedTokenStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.LAInt32">
            <summary>Sets the shim of BufferedTokenStream.LA(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.LBInt32">
            <summary>Sets the shim of BufferedTokenStream.LB(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.LTInt32">
            <summary>Sets the shim of BufferedTokenStream.LT(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.LastRealTokenGet">
            <summary>Sets the shim of BufferedTokenStream.get_LastRealToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.LastTokenGet">
            <summary>Sets the shim of BufferedTokenStream.get_LastToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.Mark">
            <summary>Sets the shim of BufferedTokenStream.Mark()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.MaxLookBehindGet">
            <summary>Sets the shim of BufferedTokenStream.get_MaxLookBehind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.RangeGet">
            <summary>Sets the shim of BufferedTokenStream.get_Range()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.RangeSetInt32">
            <summary>Sets the shim of BufferedTokenStream.set_Range(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.ReleaseInt32">
            <summary>Sets the shim of BufferedTokenStream.Release(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.Reset">
            <summary>Sets the shim of BufferedTokenStream.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.Rewind">
            <summary>Sets the shim of BufferedTokenStream.Rewind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.RewindInt32">
            <summary>Sets the shim of BufferedTokenStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.SeekInt32">
            <summary>Sets the shim of BufferedTokenStream.Seek(Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.Setup">
            <summary>Sets the shim of BufferedTokenStream.Setup()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.SourceNameGet">
            <summary>Sets the shim of BufferedTokenStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.SyncInt32">
            <summary>Sets the shim of BufferedTokenStream.Sync(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.ToString01">
            <summary>Sets the shim of BufferedTokenStream.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.ToStringITokenIToken">
            <summary>Sets the shim of BufferedTokenStream.ToString(IToken start, IToken stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.ToStringInt32Int32">
            <summary>Sets the shim of BufferedTokenStream.ToString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.TokenSourceGet">
            <summary>Sets the shim of BufferedTokenStream.get_TokenSource()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimBufferedTokenStream.AllInstances.TokenSourceSetITokenSource">
            <summary>Sets the shim of BufferedTokenStream.set_TokenSource(ITokenSource value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimCharStreamConstants">
            <summary>Shim type of Antlr.Runtime.CharStreamConstants</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCharStreamConstants.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCharStreamConstants.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCharStreamConstants.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCharStreamConstants.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimCharStreamState">
            <summary>Shim type of Antlr.Runtime.CharStreamState</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCharStreamState.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCharStreamState.#ctor(Antlr.Runtime.CharStreamState)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCharStreamState.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCharStreamState.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCharStreamState.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCharStreamState.Constructor">
            <summary>Sets the shim of CharStreamState.CharStreamState()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimCharStreamState.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimClassicToken">
            <summary>Shim type of Antlr.Runtime.ClassicToken</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimClassicToken.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimClassicToken.#ctor(Antlr.Runtime.ClassicToken)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimClassicToken.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimClassicToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimClassicToken.Bind(Antlr.Runtime.IToken)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.ChannelGet">
            <summary>Sets the shim of ClassicToken.get_Channel()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.ChannelSetInt32">
            <summary>Sets the shim of ClassicToken.set_Channel(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.CharPositionInLineGet">
            <summary>Sets the shim of ClassicToken.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.CharPositionInLineSetInt32">
            <summary>Sets the shim of ClassicToken.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.ConstructorIToken">
            <summary>Sets the shim of ClassicToken.ClassicToken(IToken oldToken)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.ConstructorInt32">
            <summary>Sets the shim of ClassicToken.ClassicToken(Int32 type)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.ConstructorInt32String">
            <summary>Sets the shim of ClassicToken.ClassicToken(Int32 type, String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.ConstructorInt32StringInt32">
            <summary>Sets the shim of ClassicToken.ClassicToken(Int32 type, String text, Int32 channel)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.InputStreamGet">
            <summary>Sets the shim of ClassicToken.get_InputStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.InputStreamSetICharStream">
            <summary>Sets the shim of ClassicToken.set_InputStream(ICharStream value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.LineGet">
            <summary>Sets the shim of ClassicToken.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.LineSetInt32">
            <summary>Sets the shim of ClassicToken.set_Line(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.StartIndexGet">
            <summary>Sets the shim of ClassicToken.get_StartIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.StartIndexSetInt32">
            <summary>Sets the shim of ClassicToken.set_StartIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.StopIndexGet">
            <summary>Sets the shim of ClassicToken.get_StopIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.StopIndexSetInt32">
            <summary>Sets the shim of ClassicToken.set_StopIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.TextGet">
            <summary>Sets the shim of ClassicToken.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.TextSetString">
            <summary>Sets the shim of ClassicToken.set_Text(String value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.ToString">
            <summary>Sets the shim of ClassicToken.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.TokenIndexGet">
            <summary>Sets the shim of ClassicToken.get_TokenIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.TokenIndexSetInt32">
            <summary>Sets the shim of ClassicToken.set_TokenIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.TypeGet">
            <summary>Sets the shim of ClassicToken.get_Type()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.TypeSetInt32">
            <summary>Sets the shim of ClassicToken.set_Type(Int32 value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.ChannelGet">
            <summary>Sets the shim of ClassicToken.get_Channel()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.ChannelSetInt32">
            <summary>Sets the shim of ClassicToken.set_Channel(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.CharPositionInLineGet">
            <summary>Sets the shim of ClassicToken.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.CharPositionInLineSetInt32">
            <summary>Sets the shim of ClassicToken.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.InputStreamGet">
            <summary>Sets the shim of ClassicToken.get_InputStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.InputStreamSetICharStream">
            <summary>Sets the shim of ClassicToken.set_InputStream(ICharStream value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.LineGet">
            <summary>Sets the shim of ClassicToken.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.LineSetInt32">
            <summary>Sets the shim of ClassicToken.set_Line(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.StartIndexGet">
            <summary>Sets the shim of ClassicToken.get_StartIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.StartIndexSetInt32">
            <summary>Sets the shim of ClassicToken.set_StartIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.StopIndexGet">
            <summary>Sets the shim of ClassicToken.get_StopIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.StopIndexSetInt32">
            <summary>Sets the shim of ClassicToken.set_StopIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.TextGet">
            <summary>Sets the shim of ClassicToken.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.TextSetString">
            <summary>Sets the shim of ClassicToken.set_Text(String value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.ToString01">
            <summary>Sets the shim of ClassicToken.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.TokenIndexGet">
            <summary>Sets the shim of ClassicToken.get_TokenIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.TokenIndexSetInt32">
            <summary>Sets the shim of ClassicToken.set_TokenIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.TypeGet">
            <summary>Sets the shim of ClassicToken.get_Type()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimClassicToken.AllInstances.TypeSetInt32">
            <summary>Sets the shim of ClassicToken.set_Type(Int32 value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimCommonToken">
            <summary>Shim type of Antlr.Runtime.CommonToken</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCommonToken.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCommonToken.#ctor(Antlr.Runtime.CommonToken)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCommonToken.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCommonToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCommonToken.Bind(Antlr.Runtime.IToken)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.ChannelGet">
            <summary>Sets the shim of CommonToken.get_Channel()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.ChannelSetInt32">
            <summary>Sets the shim of CommonToken.set_Channel(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.CharPositionInLineGet">
            <summary>Sets the shim of CommonToken.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.CharPositionInLineSetInt32">
            <summary>Sets the shim of CommonToken.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.Constructor">
            <summary>Sets the shim of CommonToken.CommonToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.ConstructorICharStreamInt32Int32Int32Int32">
            <summary>Sets the shim of CommonToken.CommonToken(ICharStream input, Int32 type, Int32 channel, Int32 start, Int32 stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.ConstructorIToken">
            <summary>Sets the shim of CommonToken.CommonToken(IToken oldToken)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.ConstructorInt32">
            <summary>Sets the shim of CommonToken.CommonToken(Int32 type)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.ConstructorInt32String">
            <summary>Sets the shim of CommonToken.CommonToken(Int32 type, String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.InputStreamGet">
            <summary>Sets the shim of CommonToken.get_InputStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.InputStreamSetICharStream">
            <summary>Sets the shim of CommonToken.set_InputStream(ICharStream value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.LineGet">
            <summary>Sets the shim of CommonToken.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.LineSetInt32">
            <summary>Sets the shim of CommonToken.set_Line(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.OnSerializingStreamingContext">
            <summary>Sets the shim of CommonToken.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.StartIndexGet">
            <summary>Sets the shim of CommonToken.get_StartIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.StartIndexSetInt32">
            <summary>Sets the shim of CommonToken.set_StartIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.StopIndexGet">
            <summary>Sets the shim of CommonToken.get_StopIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.StopIndexSetInt32">
            <summary>Sets the shim of CommonToken.set_StopIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.TextGet">
            <summary>Sets the shim of CommonToken.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.TextSetString">
            <summary>Sets the shim of CommonToken.set_Text(String value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.ToString">
            <summary>Sets the shim of CommonToken.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.TokenIndexGet">
            <summary>Sets the shim of CommonToken.get_TokenIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.TokenIndexSetInt32">
            <summary>Sets the shim of CommonToken.set_TokenIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.TypeGet">
            <summary>Sets the shim of CommonToken.get_Type()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.TypeSetInt32">
            <summary>Sets the shim of CommonToken.set_Type(Int32 value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.ChannelGet">
            <summary>Sets the shim of CommonToken.get_Channel()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.ChannelSetInt32">
            <summary>Sets the shim of CommonToken.set_Channel(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.CharPositionInLineGet">
            <summary>Sets the shim of CommonToken.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.CharPositionInLineSetInt32">
            <summary>Sets the shim of CommonToken.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.InputStreamGet">
            <summary>Sets the shim of CommonToken.get_InputStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.InputStreamSetICharStream">
            <summary>Sets the shim of CommonToken.set_InputStream(ICharStream value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.LineGet">
            <summary>Sets the shim of CommonToken.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.LineSetInt32">
            <summary>Sets the shim of CommonToken.set_Line(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.OnSerializingStreamingContext">
            <summary>Sets the shim of CommonToken.OnSerializing(StreamingContext context)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.StartIndexGet">
            <summary>Sets the shim of CommonToken.get_StartIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.StartIndexSetInt32">
            <summary>Sets the shim of CommonToken.set_StartIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.StopIndexGet">
            <summary>Sets the shim of CommonToken.get_StopIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.StopIndexSetInt32">
            <summary>Sets the shim of CommonToken.set_StopIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.TextGet">
            <summary>Sets the shim of CommonToken.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.TextSetString">
            <summary>Sets the shim of CommonToken.set_Text(String value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.ToString01">
            <summary>Sets the shim of CommonToken.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.TokenIndexGet">
            <summary>Sets the shim of CommonToken.get_TokenIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.TokenIndexSetInt32">
            <summary>Sets the shim of CommonToken.set_TokenIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.TypeGet">
            <summary>Sets the shim of CommonToken.get_Type()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonToken.AllInstances.TypeSetInt32">
            <summary>Sets the shim of CommonToken.set_Type(Int32 value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimCommonTokenStream">
            <summary>Shim type of Antlr.Runtime.CommonTokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCommonTokenStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCommonTokenStream.#ctor(Antlr.Runtime.CommonTokenStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCommonTokenStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCommonTokenStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCommonTokenStream.Bind(Antlr.Runtime.IIntStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCommonTokenStream.Bind(Antlr.Runtime.ITokenStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimCommonTokenStream.Bind(Antlr.Runtime.ITokenStreamInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.ChannelGet">
            <summary>Sets the shim of CommonTokenStream.get_Channel()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.Constructor">
            <summary>Sets the shim of CommonTokenStream.CommonTokenStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.ConstructorITokenSource">
            <summary>Sets the shim of CommonTokenStream.CommonTokenStream(ITokenSource tokenSource)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.ConstructorITokenSourceInt32">
            <summary>Sets the shim of CommonTokenStream.CommonTokenStream(ITokenSource tokenSource, Int32 channel)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.Consume">
            <summary>Sets the shim of CommonTokenStream.Consume()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.LBInt32">
            <summary>Sets the shim of CommonTokenStream.LB(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.LTInt32">
            <summary>Sets the shim of CommonTokenStream.LT(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.Setup">
            <summary>Sets the shim of CommonTokenStream.Setup()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.SkipOffTokenChannelsInt32">
            <summary>Sets the shim of CommonTokenStream.SkipOffTokenChannels(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.SkipOffTokenChannelsReverseInt32">
            <summary>Sets the shim of CommonTokenStream.SkipOffTokenChannelsReverse(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.TokenSourceGet">
            <summary>Sets the shim of CommonTokenStream.get_TokenSource()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.TokenSourceSetITokenSource">
            <summary>Sets the shim of CommonTokenStream.set_TokenSource(ITokenSource value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimCommonTokenStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.AllInstances.ChannelGet">
            <summary>Sets the shim of CommonTokenStream.get_Channel()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.AllInstances.Consume">
            <summary>Sets the shim of CommonTokenStream.Consume()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.AllInstances.LBInt32">
            <summary>Sets the shim of CommonTokenStream.LB(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.AllInstances.LTInt32">
            <summary>Sets the shim of CommonTokenStream.LT(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.AllInstances.Setup">
            <summary>Sets the shim of CommonTokenStream.Setup()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.AllInstances.SkipOffTokenChannelsInt32">
            <summary>Sets the shim of CommonTokenStream.SkipOffTokenChannels(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.AllInstances.SkipOffTokenChannelsReverseInt32">
            <summary>Sets the shim of CommonTokenStream.SkipOffTokenChannelsReverse(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.AllInstances.TokenSourceGet">
            <summary>Sets the shim of CommonTokenStream.get_TokenSource()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimCommonTokenStream.AllInstances.TokenSourceSetITokenSource">
            <summary>Sets the shim of CommonTokenStream.set_TokenSource(ITokenSource value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimDFA">
            <summary>Shim type of Antlr.Runtime.DFA</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimDFA.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimDFA.#ctor(Antlr.Runtime.DFA)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimDFA.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimDFA.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.Constructor">
            <summary>Sets the shim of DFA.DFA()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.ConstructorSpecialStateTransitionHandler">
            <summary>Sets the shim of DFA.DFA(SpecialStateTransitionHandler specialStateTransition)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.DebugRecognitionExceptionRecognitionException">
            <summary>Sets the shim of DFA.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.DescriptionGet">
            <summary>Sets the shim of DFA.get_Description()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.ErrorNoViableAltException">
            <summary>Sets the shim of DFA.Error(NoViableAltException nvae)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.NoViableAltInt32IIntStream">
            <summary>Sets the shim of DFA.NoViableAlt(Int32 s, IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.PredictIIntStream">
            <summary>Sets the shim of DFA.Predict(IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.SpecialStateTransitionDefaultDFAInt32IIntStream">
            <summary>Sets the shim of DFA.SpecialStateTransitionDefault(DFA dfa, Int32 s, IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.SpecialStateTransitionGet">
            <summary>Sets the shim of DFA.get_SpecialStateTransition()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.SpecialStateTransitionSetSpecialStateTransitionHandler">
            <summary>Sets the shim of DFA.set_SpecialStateTransition(SpecialStateTransitionHandler value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.UnpackEncodedStringString">
            <summary>Sets the shim of DFA.UnpackEncodedString(String encodedString)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.UnpackEncodedStringToUnsignedCharsString">
            <summary>Sets the shim of DFA.UnpackEncodedStringToUnsignedChars(String encodedString)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimDFA.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.AllInstances.DebugRecognitionExceptionRecognitionException">
            <summary>Sets the shim of DFA.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.AllInstances.DescriptionGet">
            <summary>Sets the shim of DFA.get_Description()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.AllInstances.ErrorNoViableAltException">
            <summary>Sets the shim of DFA.Error(NoViableAltException nvae)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.AllInstances.NoViableAltInt32IIntStream">
            <summary>Sets the shim of DFA.NoViableAlt(Int32 s, IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.AllInstances.PredictIIntStream">
            <summary>Sets the shim of DFA.Predict(IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.AllInstances.SpecialStateTransitionGet">
            <summary>Sets the shim of DFA.get_SpecialStateTransition()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimDFA.AllInstances.SpecialStateTransitionSetSpecialStateTransitionHandler">
            <summary>Sets the shim of DFA.set_SpecialStateTransition(SpecialStateTransitionHandler value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimEarlyExitException">
            <summary>Shim type of Antlr.Runtime.EarlyExitException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimEarlyExitException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimEarlyExitException.#ctor(Antlr.Runtime.EarlyExitException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimEarlyExitException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimEarlyExitException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimEarlyExitException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimEarlyExitException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimEarlyExitException.Constructor">
            <summary>Sets the shim of EarlyExitException.EarlyExitException()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimEarlyExitException.ConstructorInt32IIntStream">
            <summary>Sets the shim of EarlyExitException.EarlyExitException(Int32 decisionNumber, IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimEarlyExitException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of EarlyExitException.EarlyExitException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimEarlyExitException.ConstructorString">
            <summary>Sets the shim of EarlyExitException.EarlyExitException(String message)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimEarlyExitException.ConstructorStringException">
            <summary>Sets the shim of EarlyExitException.EarlyExitException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimEarlyExitException.ConstructorStringInt32IIntStream">
            <summary>Sets the shim of EarlyExitException.EarlyExitException(String message, Int32 decisionNumber, IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimEarlyExitException.ConstructorStringInt32IIntStreamException">
            <summary>Sets the shim of EarlyExitException.EarlyExitException(String message, Int32 decisionNumber, IIntStream input, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimEarlyExitException.DecisionNumberGet">
            <summary>Sets the shim of EarlyExitException.get_DecisionNumber()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimEarlyExitException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimEarlyExitException.AllInstances.DecisionNumberGet">
            <summary>Sets the shim of EarlyExitException.get_DecisionNumber()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimFailedPredicateException">
            <summary>Shim type of Antlr.Runtime.FailedPredicateException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimFailedPredicateException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimFailedPredicateException.#ctor(Antlr.Runtime.FailedPredicateException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimFailedPredicateException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimFailedPredicateException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimFailedPredicateException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimFailedPredicateException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimFailedPredicateException.Constructor">
            <summary>Sets the shim of FailedPredicateException.FailedPredicateException()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimFailedPredicateException.ConstructorIIntStreamStringString">
            <summary>Sets the shim of FailedPredicateException.FailedPredicateException(IIntStream input, String ruleName, String predicateText)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimFailedPredicateException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of FailedPredicateException.FailedPredicateException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimFailedPredicateException.ConstructorString">
            <summary>Sets the shim of FailedPredicateException.FailedPredicateException(String message)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimFailedPredicateException.ConstructorStringException">
            <summary>Sets the shim of FailedPredicateException.FailedPredicateException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimFailedPredicateException.ConstructorStringIIntStreamStringString">
            <summary>Sets the shim of FailedPredicateException.FailedPredicateException(String message, IIntStream input, String ruleName, String predicateText)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimFailedPredicateException.ConstructorStringIIntStreamStringStringException">
            <summary>Sets the shim of FailedPredicateException.FailedPredicateException(String message, IIntStream input, String ruleName, String predicateText, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimFailedPredicateException.PredicateTextGet">
            <summary>Sets the shim of FailedPredicateException.get_PredicateText()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimFailedPredicateException.RuleNameGet">
            <summary>Sets the shim of FailedPredicateException.get_RuleName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimFailedPredicateException.ToString">
            <summary>Sets the shim of FailedPredicateException.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimFailedPredicateException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimFailedPredicateException.AllInstances.PredicateTextGet">
            <summary>Sets the shim of FailedPredicateException.get_PredicateText()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimFailedPredicateException.AllInstances.RuleNameGet">
            <summary>Sets the shim of FailedPredicateException.get_RuleName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimFailedPredicateException.AllInstances.ToString01">
            <summary>Sets the shim of FailedPredicateException.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimGrammarRuleAttribute">
            <summary>Shim type of Antlr.Runtime.GrammarRuleAttribute</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimGrammarRuleAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimGrammarRuleAttribute.#ctor(Antlr.Runtime.GrammarRuleAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimGrammarRuleAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimGrammarRuleAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimGrammarRuleAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimGrammarRuleAttribute.ConstructorString">
            <summary>Sets the shim of GrammarRuleAttribute.GrammarRuleAttribute(String name)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimGrammarRuleAttribute.NameGet">
            <summary>Sets the shim of GrammarRuleAttribute.get_Name()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimGrammarRuleAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimGrammarRuleAttribute.AllInstances.NameGet">
            <summary>Sets the shim of GrammarRuleAttribute.get_Name()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream">
            <summary>Shim type of Antlr.Runtime.LegacyCommonTokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.#ctor(Antlr.Runtime.LegacyCommonTokenStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.Bind(Antlr.Runtime.IIntStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.Bind(Antlr.Runtime.ITokenStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.Constructor">
            <summary>Sets the shim of LegacyCommonTokenStream.LegacyCommonTokenStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.ConstructorITokenSource">
            <summary>Sets the shim of LegacyCommonTokenStream.LegacyCommonTokenStream(ITokenSource tokenSource)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.ConstructorITokenSourceInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.LegacyCommonTokenStream(ITokenSource tokenSource, Int32 channel)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.Consume">
            <summary>Sets the shim of LegacyCommonTokenStream.Consume()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.CountGet">
            <summary>Sets the shim of LegacyCommonTokenStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.DiscardTokenTypeInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.DiscardTokenType(Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.FillBuffer">
            <summary>Sets the shim of LegacyCommonTokenStream.FillBuffer()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.GetInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.Get(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.GetTokens">
            <summary>Sets the shim of LegacyCommonTokenStream.GetTokens()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.GetTokensInt32Int32">
            <summary>Sets the shim of LegacyCommonTokenStream.GetTokens(Int32 start, Int32 stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.GetTokensInt32Int32BitSet">
            <summary>Sets the shim of LegacyCommonTokenStream.GetTokens(Int32 start, Int32 stop, BitSet types)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.GetTokensInt32Int32IListOfInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.GetTokens(Int32 start, Int32 stop, IList`1&lt;Int32&gt; types)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.GetTokensInt32Int32Int32">
            <summary>Sets the shim of LegacyCommonTokenStream.GetTokens(Int32 start, Int32 stop, Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.IndexGet">
            <summary>Sets the shim of LegacyCommonTokenStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.LAInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.LA(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.LBInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.LB(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.LTInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.LT(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.Mark">
            <summary>Sets the shim of LegacyCommonTokenStream.Mark()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.RangeGet">
            <summary>Sets the shim of LegacyCommonTokenStream.get_Range()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.RangeSetInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.set_Range(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.ReleaseInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.Release(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.Reset">
            <summary>Sets the shim of LegacyCommonTokenStream.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.Rewind">
            <summary>Sets the shim of LegacyCommonTokenStream.Rewind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.RewindInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.SeekInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.Seek(Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.SetDiscardOffChannelTokensBoolean">
            <summary>Sets the shim of LegacyCommonTokenStream.SetDiscardOffChannelTokens(Boolean discardOffChannelTokens)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.SetTokenSourceITokenSource">
            <summary>Sets the shim of LegacyCommonTokenStream.SetTokenSource(ITokenSource tokenSource)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.SetTokenTypeChannelInt32Int32">
            <summary>Sets the shim of LegacyCommonTokenStream.SetTokenTypeChannel(Int32 ttype, Int32 channel)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.SkipOffTokenChannelsInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.SkipOffTokenChannels(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.SkipOffTokenChannelsReverseInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.SkipOffTokenChannelsReverse(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.SourceNameGet">
            <summary>Sets the shim of LegacyCommonTokenStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.ToString">
            <summary>Sets the shim of LegacyCommonTokenStream.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.ToStringITokenIToken">
            <summary>Sets the shim of LegacyCommonTokenStream.ToString(IToken start, IToken stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.ToStringInt32Int32">
            <summary>Sets the shim of LegacyCommonTokenStream.ToString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.TokenSourceGet">
            <summary>Sets the shim of LegacyCommonTokenStream.get_TokenSource()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.Consume">
            <summary>Sets the shim of LegacyCommonTokenStream.Consume()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.CountGet">
            <summary>Sets the shim of LegacyCommonTokenStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.DiscardTokenTypeInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.DiscardTokenType(Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.FillBuffer">
            <summary>Sets the shim of LegacyCommonTokenStream.FillBuffer()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.GetInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.Get(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.GetTokens">
            <summary>Sets the shim of LegacyCommonTokenStream.GetTokens()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.GetTokensInt32Int32">
            <summary>Sets the shim of LegacyCommonTokenStream.GetTokens(Int32 start, Int32 stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.GetTokensInt32Int32BitSet">
            <summary>Sets the shim of LegacyCommonTokenStream.GetTokens(Int32 start, Int32 stop, BitSet types)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.GetTokensInt32Int32IListOfInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.GetTokens(Int32 start, Int32 stop, IList`1&lt;Int32&gt; types)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.GetTokensInt32Int32Int32">
            <summary>Sets the shim of LegacyCommonTokenStream.GetTokens(Int32 start, Int32 stop, Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.IndexGet">
            <summary>Sets the shim of LegacyCommonTokenStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.LAInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.LA(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.LBInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.LB(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.LTInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.LT(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.Mark">
            <summary>Sets the shim of LegacyCommonTokenStream.Mark()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.RangeGet">
            <summary>Sets the shim of LegacyCommonTokenStream.get_Range()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.RangeSetInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.set_Range(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.ReleaseInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.Release(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.Reset">
            <summary>Sets the shim of LegacyCommonTokenStream.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.Rewind">
            <summary>Sets the shim of LegacyCommonTokenStream.Rewind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.RewindInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.SeekInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.Seek(Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.SetDiscardOffChannelTokensBoolean">
            <summary>Sets the shim of LegacyCommonTokenStream.SetDiscardOffChannelTokens(Boolean discardOffChannelTokens)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.SetTokenSourceITokenSource">
            <summary>Sets the shim of LegacyCommonTokenStream.SetTokenSource(ITokenSource tokenSource)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.SetTokenTypeChannelInt32Int32">
            <summary>Sets the shim of LegacyCommonTokenStream.SetTokenTypeChannel(Int32 ttype, Int32 channel)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.SkipOffTokenChannelsInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.SkipOffTokenChannels(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.SkipOffTokenChannelsReverseInt32">
            <summary>Sets the shim of LegacyCommonTokenStream.SkipOffTokenChannelsReverse(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.SourceNameGet">
            <summary>Sets the shim of LegacyCommonTokenStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.ToString01">
            <summary>Sets the shim of LegacyCommonTokenStream.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.ToStringITokenIToken">
            <summary>Sets the shim of LegacyCommonTokenStream.ToString(IToken start, IToken stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.ToStringInt32Int32">
            <summary>Sets the shim of LegacyCommonTokenStream.ToString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLegacyCommonTokenStream.AllInstances.TokenSourceGet">
            <summary>Sets the shim of LegacyCommonTokenStream.get_TokenSource()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimLexer">
            <summary>Shim type of Antlr.Runtime.Lexer</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimLexer.#ctor(Antlr.Runtime.Lexer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimLexer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimLexer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimLexer.Bind(Antlr.Runtime.ITokenSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.CharIndexGet">
            <summary>Sets the shim of Lexer.get_CharIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.CharPositionInLineGet">
            <summary>Sets the shim of Lexer.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.CharPositionInLineSetInt32">
            <summary>Sets the shim of Lexer.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.CharStreamGet">
            <summary>Sets the shim of Lexer.get_CharStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.CharStreamSetICharStream">
            <summary>Sets the shim of Lexer.set_CharStream(ICharStream value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.Constructor">
            <summary>Sets the shim of Lexer.Lexer()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.ConstructorICharStream">
            <summary>Sets the shim of Lexer.Lexer(ICharStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.ConstructorICharStreamRecognizerSharedState">
            <summary>Sets the shim of Lexer.Lexer(ICharStream input, RecognizerSharedState state)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.Emit">
            <summary>Sets the shim of Lexer.Emit()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.EmitIToken">
            <summary>Sets the shim of Lexer.Emit(IToken token)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.GetCharErrorDisplayInt32">
            <summary>Sets the shim of Lexer.GetCharErrorDisplay(Int32 c)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.GetErrorMessageRecognitionExceptionStringArray">
            <summary>Sets the shim of Lexer.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.LineGet">
            <summary>Sets the shim of Lexer.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.LineSetInt32">
            <summary>Sets the shim of Lexer.set_Line(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.MatchAny">
            <summary>Sets the shim of Lexer.MatchAny()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.MatchInt32">
            <summary>Sets the shim of Lexer.Match(Int32 c)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.MatchRangeInt32Int32">
            <summary>Sets the shim of Lexer.MatchRange(Int32 a, Int32 b)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.MatchString">
            <summary>Sets the shim of Lexer.Match(String s)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.NextToken">
            <summary>Sets the shim of Lexer.NextToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.RecoverRecognitionException">
            <summary>Sets the shim of Lexer.Recover(RecognitionException re)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.ReportErrorRecognitionException">
            <summary>Sets the shim of Lexer.ReportError(RecognitionException e)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.Reset">
            <summary>Sets the shim of Lexer.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.Skip">
            <summary>Sets the shim of Lexer.Skip()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.SourceNameGet">
            <summary>Sets the shim of Lexer.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.TextGet">
            <summary>Sets the shim of Lexer.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.TextSetString">
            <summary>Sets the shim of Lexer.set_Text(String value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.TraceInStringInt32">
            <summary>Sets the shim of Lexer.TraceIn(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.TraceOutStringInt32">
            <summary>Sets the shim of Lexer.TraceOut(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimLexer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.CharIndexGet">
            <summary>Sets the shim of Lexer.get_CharIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.CharPositionInLineGet">
            <summary>Sets the shim of Lexer.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.CharPositionInLineSetInt32">
            <summary>Sets the shim of Lexer.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.CharStreamGet">
            <summary>Sets the shim of Lexer.get_CharStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.CharStreamSetICharStream">
            <summary>Sets the shim of Lexer.set_CharStream(ICharStream value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.Emit">
            <summary>Sets the shim of Lexer.Emit()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.EmitIToken">
            <summary>Sets the shim of Lexer.Emit(IToken token)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.GetCharErrorDisplayInt32">
            <summary>Sets the shim of Lexer.GetCharErrorDisplay(Int32 c)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.GetErrorMessageRecognitionExceptionStringArray">
            <summary>Sets the shim of Lexer.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.LineGet">
            <summary>Sets the shim of Lexer.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.LineSetInt32">
            <summary>Sets the shim of Lexer.set_Line(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.MatchAny">
            <summary>Sets the shim of Lexer.MatchAny()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.MatchInt32">
            <summary>Sets the shim of Lexer.Match(Int32 c)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.MatchRangeInt32Int32">
            <summary>Sets the shim of Lexer.MatchRange(Int32 a, Int32 b)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.MatchString">
            <summary>Sets the shim of Lexer.Match(String s)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.NextToken">
            <summary>Sets the shim of Lexer.NextToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.RecoverRecognitionException">
            <summary>Sets the shim of Lexer.Recover(RecognitionException re)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.ReportErrorRecognitionException">
            <summary>Sets the shim of Lexer.ReportError(RecognitionException e)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.Reset">
            <summary>Sets the shim of Lexer.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.Skip">
            <summary>Sets the shim of Lexer.Skip()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.SourceNameGet">
            <summary>Sets the shim of Lexer.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.TextGet">
            <summary>Sets the shim of Lexer.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.TextSetString">
            <summary>Sets the shim of Lexer.set_Text(String value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.TraceInStringInt32">
            <summary>Sets the shim of Lexer.TraceIn(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimLexer.AllInstances.TraceOutStringInt32">
            <summary>Sets the shim of Lexer.TraceOut(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimMismatchedNotSetException">
            <summary>Shim type of Antlr.Runtime.MismatchedNotSetException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedNotSetException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedNotSetException.#ctor(Antlr.Runtime.MismatchedNotSetException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedNotSetException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedNotSetException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedNotSetException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedNotSetException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedNotSetException.Constructor">
            <summary>Sets the shim of MismatchedNotSetException.MismatchedNotSetException()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedNotSetException.ConstructorBitSetIIntStream">
            <summary>Sets the shim of MismatchedNotSetException.MismatchedNotSetException(BitSet expecting, IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedNotSetException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MismatchedNotSetException.MismatchedNotSetException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedNotSetException.ConstructorString">
            <summary>Sets the shim of MismatchedNotSetException.MismatchedNotSetException(String message)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedNotSetException.ConstructorStringBitSetIIntStream">
            <summary>Sets the shim of MismatchedNotSetException.MismatchedNotSetException(String message, BitSet expecting, IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedNotSetException.ConstructorStringBitSetIIntStreamException">
            <summary>Sets the shim of MismatchedNotSetException.MismatchedNotSetException(String message, BitSet expecting, IIntStream input, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedNotSetException.ConstructorStringException">
            <summary>Sets the shim of MismatchedNotSetException.MismatchedNotSetException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedNotSetException.ToString">
            <summary>Sets the shim of MismatchedNotSetException.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimMismatchedNotSetException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedNotSetException.AllInstances.ToString01">
            <summary>Sets the shim of MismatchedNotSetException.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimMismatchedRangeException">
            <summary>Shim type of Antlr.Runtime.MismatchedRangeException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedRangeException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedRangeException.#ctor(Antlr.Runtime.MismatchedRangeException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedRangeException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedRangeException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedRangeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedRangeException.AGet">
            <summary>Sets the shim of MismatchedRangeException.get_A()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedRangeException.BGet">
            <summary>Sets the shim of MismatchedRangeException.get_B()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedRangeException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedRangeException.Constructor">
            <summary>Sets the shim of MismatchedRangeException.MismatchedRangeException()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedRangeException.ConstructorInt32Int32IIntStream">
            <summary>Sets the shim of MismatchedRangeException.MismatchedRangeException(Int32 a, Int32 b, IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedRangeException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MismatchedRangeException.MismatchedRangeException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedRangeException.ConstructorString">
            <summary>Sets the shim of MismatchedRangeException.MismatchedRangeException(String message)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedRangeException.ConstructorStringException">
            <summary>Sets the shim of MismatchedRangeException.MismatchedRangeException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedRangeException.ConstructorStringInt32Int32IIntStream">
            <summary>Sets the shim of MismatchedRangeException.MismatchedRangeException(String message, Int32 a, Int32 b, IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedRangeException.ConstructorStringInt32Int32IIntStreamException">
            <summary>Sets the shim of MismatchedRangeException.MismatchedRangeException(String message, Int32 a, Int32 b, IIntStream input, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedRangeException.ToString">
            <summary>Sets the shim of MismatchedRangeException.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimMismatchedRangeException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedRangeException.AllInstances.AGet">
            <summary>Sets the shim of MismatchedRangeException.get_A()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedRangeException.AllInstances.BGet">
            <summary>Sets the shim of MismatchedRangeException.get_B()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedRangeException.AllInstances.ToString01">
            <summary>Sets the shim of MismatchedRangeException.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimMismatchedSetException">
            <summary>Shim type of Antlr.Runtime.MismatchedSetException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedSetException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedSetException.#ctor(Antlr.Runtime.MismatchedSetException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedSetException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedSetException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedSetException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedSetException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedSetException.Constructor">
            <summary>Sets the shim of MismatchedSetException.MismatchedSetException()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedSetException.ConstructorBitSetIIntStream">
            <summary>Sets the shim of MismatchedSetException.MismatchedSetException(BitSet expecting, IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedSetException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MismatchedSetException.MismatchedSetException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedSetException.ConstructorString">
            <summary>Sets the shim of MismatchedSetException.MismatchedSetException(String message)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedSetException.ConstructorStringBitSetIIntStream">
            <summary>Sets the shim of MismatchedSetException.MismatchedSetException(String message, BitSet expecting, IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedSetException.ConstructorStringBitSetIIntStreamException">
            <summary>Sets the shim of MismatchedSetException.MismatchedSetException(String message, BitSet expecting, IIntStream input, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedSetException.ConstructorStringException">
            <summary>Sets the shim of MismatchedSetException.MismatchedSetException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedSetException.ExpectingGet">
            <summary>Sets the shim of MismatchedSetException.get_Expecting()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedSetException.ToString">
            <summary>Sets the shim of MismatchedSetException.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimMismatchedSetException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedSetException.AllInstances.ExpectingGet">
            <summary>Sets the shim of MismatchedSetException.get_Expecting()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedSetException.AllInstances.ToString01">
            <summary>Sets the shim of MismatchedSetException.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimMismatchedTokenException">
            <summary>Shim type of Antlr.Runtime.MismatchedTokenException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedTokenException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedTokenException.#ctor(Antlr.Runtime.MismatchedTokenException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedTokenException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedTokenException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedTokenException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTokenException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTokenException.Constructor">
            <summary>Sets the shim of MismatchedTokenException.MismatchedTokenException()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTokenException.ConstructorInt32IIntStream">
            <summary>Sets the shim of MismatchedTokenException.MismatchedTokenException(Int32 expecting, IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTokenException.ConstructorInt32IIntStreamIListOfString">
            <summary>Sets the shim of MismatchedTokenException.MismatchedTokenException(Int32 expecting, IIntStream input, IList`1&lt;String&gt; tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTokenException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MismatchedTokenException.MismatchedTokenException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTokenException.ConstructorString">
            <summary>Sets the shim of MismatchedTokenException.MismatchedTokenException(String message)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTokenException.ConstructorStringException">
            <summary>Sets the shim of MismatchedTokenException.MismatchedTokenException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTokenException.ConstructorStringInt32IIntStreamIListOfString">
            <summary>Sets the shim of MismatchedTokenException.MismatchedTokenException(String message, Int32 expecting, IIntStream input, IList`1&lt;String&gt; tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTokenException.ConstructorStringInt32IIntStreamIListOfStringException">
            <summary>Sets the shim of MismatchedTokenException.MismatchedTokenException(String message, Int32 expecting, IIntStream input, IList`1&lt;String&gt; tokenNames, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTokenException.ExpectingGet">
            <summary>Sets the shim of MismatchedTokenException.get_Expecting()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTokenException.ToString">
            <summary>Sets the shim of MismatchedTokenException.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTokenException.TokenNamesGet">
            <summary>Sets the shim of MismatchedTokenException.get_TokenNames()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimMismatchedTokenException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTokenException.AllInstances.ExpectingGet">
            <summary>Sets the shim of MismatchedTokenException.get_Expecting()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTokenException.AllInstances.ToString01">
            <summary>Sets the shim of MismatchedTokenException.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTokenException.AllInstances.TokenNamesGet">
            <summary>Sets the shim of MismatchedTokenException.get_TokenNames()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException">
            <summary>Shim type of Antlr.Runtime.MismatchedTreeNodeException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.#ctor(Antlr.Runtime.MismatchedTreeNodeException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.Constructor">
            <summary>Sets the shim of MismatchedTreeNodeException.MismatchedTreeNodeException()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.ConstructorInt32ITreeNodeStream">
            <summary>Sets the shim of MismatchedTreeNodeException.MismatchedTreeNodeException(Int32 expecting, ITreeNodeStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MismatchedTreeNodeException.MismatchedTreeNodeException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.ConstructorString">
            <summary>Sets the shim of MismatchedTreeNodeException.MismatchedTreeNodeException(String message)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.ConstructorStringException">
            <summary>Sets the shim of MismatchedTreeNodeException.MismatchedTreeNodeException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.ConstructorStringInt32ITreeNodeStream">
            <summary>Sets the shim of MismatchedTreeNodeException.MismatchedTreeNodeException(String message, Int32 expecting, ITreeNodeStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.ConstructorStringInt32ITreeNodeStreamException">
            <summary>Sets the shim of MismatchedTreeNodeException.MismatchedTreeNodeException(String message, Int32 expecting, ITreeNodeStream input, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.ExpectingGet">
            <summary>Sets the shim of MismatchedTreeNodeException.get_Expecting()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.ToString">
            <summary>Sets the shim of MismatchedTreeNodeException.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.AllInstances.ExpectingGet">
            <summary>Sets the shim of MismatchedTreeNodeException.get_Expecting()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMismatchedTreeNodeException.AllInstances.ToString01">
            <summary>Sets the shim of MismatchedTreeNodeException.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimMissingTokenException">
            <summary>Shim type of Antlr.Runtime.MissingTokenException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMissingTokenException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMissingTokenException.#ctor(Antlr.Runtime.MissingTokenException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMissingTokenException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMissingTokenException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimMissingTokenException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMissingTokenException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMissingTokenException.Constructor">
            <summary>Sets the shim of MissingTokenException.MissingTokenException()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMissingTokenException.ConstructorInt32IIntStreamObject">
            <summary>Sets the shim of MissingTokenException.MissingTokenException(Int32 expecting, IIntStream input, Object inserted)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMissingTokenException.ConstructorInt32IIntStreamObjectIListOfString">
            <summary>Sets the shim of MissingTokenException.MissingTokenException(Int32 expecting, IIntStream input, Object inserted, IList`1&lt;String&gt; tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMissingTokenException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MissingTokenException.MissingTokenException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMissingTokenException.ConstructorString">
            <summary>Sets the shim of MissingTokenException.MissingTokenException(String message)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMissingTokenException.ConstructorStringException">
            <summary>Sets the shim of MissingTokenException.MissingTokenException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMissingTokenException.ConstructorStringInt32IIntStreamObjectIListOfString">
            <summary>Sets the shim of MissingTokenException.MissingTokenException(String message, Int32 expecting, IIntStream input, Object inserted, IList`1&lt;String&gt; tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMissingTokenException.ConstructorStringInt32IIntStreamObjectIListOfStringException">
            <summary>Sets the shim of MissingTokenException.MissingTokenException(String message, Int32 expecting, IIntStream input, Object inserted, IList`1&lt;String&gt; tokenNames, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMissingTokenException.MissingTypeGet">
            <summary>Sets the shim of MissingTokenException.get_MissingType()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMissingTokenException.ToString">
            <summary>Sets the shim of MissingTokenException.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimMissingTokenException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMissingTokenException.AllInstances.MissingTypeGet">
            <summary>Sets the shim of MissingTokenException.get_MissingType()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimMissingTokenException.AllInstances.ToString01">
            <summary>Sets the shim of MissingTokenException.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimNoViableAltException">
            <summary>Shim type of Antlr.Runtime.NoViableAltException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimNoViableAltException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimNoViableAltException.#ctor(Antlr.Runtime.NoViableAltException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimNoViableAltException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimNoViableAltException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimNoViableAltException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.Constructor">
            <summary>Sets the shim of NoViableAltException.NoViableAltException()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of NoViableAltException.NoViableAltException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.ConstructorString">
            <summary>Sets the shim of NoViableAltException.NoViableAltException(String grammarDecisionDescription)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.ConstructorStringInt32Int32IIntStream">
            <summary>Sets the shim of NoViableAltException.NoViableAltException(String grammarDecisionDescription, Int32 decisionNumber, Int32 stateNumber, IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.ConstructorStringString">
            <summary>Sets the shim of NoViableAltException.NoViableAltException(String message, String grammarDecisionDescription)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.ConstructorStringStringException">
            <summary>Sets the shim of NoViableAltException.NoViableAltException(String message, String grammarDecisionDescription, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.ConstructorStringStringInt32Int32IIntStream">
            <summary>Sets the shim of NoViableAltException.NoViableAltException(String message, String grammarDecisionDescription, Int32 decisionNumber, Int32 stateNumber, IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.ConstructorStringStringInt32Int32IIntStreamException">
            <summary>Sets the shim of NoViableAltException.NoViableAltException(String message, String grammarDecisionDescription, Int32 decisionNumber, Int32 stateNumber, IIntStream input, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.DecisionNumberGet">
            <summary>Sets the shim of NoViableAltException.get_DecisionNumber()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.GrammarDecisionDescriptionGet">
            <summary>Sets the shim of NoViableAltException.get_GrammarDecisionDescription()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.StateNumberGet">
            <summary>Sets the shim of NoViableAltException.get_StateNumber()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.ToString">
            <summary>Sets the shim of NoViableAltException.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimNoViableAltException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.AllInstances.DecisionNumberGet">
            <summary>Sets the shim of NoViableAltException.get_DecisionNumber()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.AllInstances.GrammarDecisionDescriptionGet">
            <summary>Sets the shim of NoViableAltException.get_GrammarDecisionDescription()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.AllInstances.StateNumberGet">
            <summary>Sets the shim of NoViableAltException.get_StateNumber()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimNoViableAltException.AllInstances.ToString01">
            <summary>Sets the shim of NoViableAltException.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimParser">
            <summary>Shim type of Antlr.Runtime.Parser</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimParser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimParser.#ctor(Antlr.Runtime.Parser)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimParser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimParser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.ConstructorITokenStream">
            <summary>Sets the shim of Parser.Parser(ITokenStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.ConstructorITokenStreamRecognizerSharedState">
            <summary>Sets the shim of Parser.Parser(ITokenStream input, RecognizerSharedState state)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.GetCurrentInputSymbolIIntStream">
            <summary>Sets the shim of Parser.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.GetMissingSymbolIIntStreamRecognitionExceptionInt32BitSet">
            <summary>Sets the shim of Parser.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.Reset">
            <summary>Sets the shim of Parser.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.SourceNameGet">
            <summary>Sets the shim of Parser.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.TokenStreamGet">
            <summary>Sets the shim of Parser.get_TokenStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.TokenStreamSetITokenStream">
            <summary>Sets the shim of Parser.set_TokenStream(ITokenStream value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.TraceInStringInt32">
            <summary>Sets the shim of Parser.TraceIn(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.TraceOutStringInt32">
            <summary>Sets the shim of Parser.TraceOut(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimParser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.AllInstances.GetCurrentInputSymbolIIntStream">
            <summary>Sets the shim of Parser.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.AllInstances.GetMissingSymbolIIntStreamRecognitionExceptionInt32BitSet">
            <summary>Sets the shim of Parser.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.AllInstances.Reset">
            <summary>Sets the shim of Parser.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.AllInstances.SourceNameGet">
            <summary>Sets the shim of Parser.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.AllInstances.TokenStreamGet">
            <summary>Sets the shim of Parser.get_TokenStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.AllInstances.TokenStreamSetITokenStream">
            <summary>Sets the shim of Parser.set_TokenStream(ITokenStream value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.AllInstances.TraceInStringInt32">
            <summary>Sets the shim of Parser.TraceIn(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParser.AllInstances.TraceOutStringInt32">
            <summary>Sets the shim of Parser.TraceOut(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1">
            <summary>Shim type of Antlr.Runtime.ParserRuleReturnScope`1</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.#ctor(Antlr.Runtime.ParserRuleReturnScope{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.Bind(Antlr.Runtime.IRuleReturnScope)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.Bind(Antlr.Runtime.IRuleReturnScope{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.Constructor">
            <summary>Sets the shim of ParserRuleReturnScope`1.ParserRuleReturnScope`1()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.StartAntlrRuntimeIRuleReturnScopeget">
            <summary>Sets the shim of ParserRuleReturnScope`1.Antlr.Runtime.IRuleReturnScope.get_Start()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.StartGet">
            <summary>Sets the shim of ParserRuleReturnScope`1.get_Start()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.StartSetT0">
            <summary>Sets the shim of ParserRuleReturnScope`1.set_Start(!0 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.StopAntlrRuntimeIRuleReturnScopeget">
            <summary>Sets the shim of ParserRuleReturnScope`1.Antlr.Runtime.IRuleReturnScope.get_Stop()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.StopGet">
            <summary>Sets the shim of ParserRuleReturnScope`1.get_Stop()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.StopSetT0">
            <summary>Sets the shim of ParserRuleReturnScope`1.set_Stop(!0 value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.AllInstances.StartAntlrRuntimeIRuleReturnScopeget">
            <summary>Sets the shim of ParserRuleReturnScope`1.Antlr.Runtime.IRuleReturnScope.get_Start()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.AllInstances.StartGet">
            <summary>Sets the shim of ParserRuleReturnScope`1.get_Start()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.AllInstances.StartSetT0">
            <summary>Sets the shim of ParserRuleReturnScope`1.set_Start(!0 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.AllInstances.StopAntlrRuntimeIRuleReturnScopeget">
            <summary>Sets the shim of ParserRuleReturnScope`1.Antlr.Runtime.IRuleReturnScope.get_Stop()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.AllInstances.StopGet">
            <summary>Sets the shim of ParserRuleReturnScope`1.get_Stop()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimParserRuleReturnScope`1.AllInstances.StopSetT0">
            <summary>Sets the shim of ParserRuleReturnScope`1.set_Stop(!0 value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimRecognitionException">
            <summary>Shim type of Antlr.Runtime.RecognitionException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimRecognitionException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimRecognitionException.#ctor(Antlr.Runtime.RecognitionException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimRecognitionException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimRecognitionException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimRecognitionException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.ApproximateLineInfoGet">
            <summary>Sets the shim of RecognitionException.get_ApproximateLineInfo()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.ApproximateLineInfoSetBoolean">
            <summary>Sets the shim of RecognitionException.set_ApproximateLineInfo(Boolean value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.CharPositionInLineGet">
            <summary>Sets the shim of RecognitionException.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.CharPositionInLineSetInt32">
            <summary>Sets the shim of RecognitionException.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.CharacterGet">
            <summary>Sets the shim of RecognitionException.get_Character()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.CharacterSetInt32">
            <summary>Sets the shim of RecognitionException.set_Character(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.Constructor">
            <summary>Sets the shim of RecognitionException.RecognitionException()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.ConstructorIIntStream">
            <summary>Sets the shim of RecognitionException.RecognitionException(IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of RecognitionException.RecognitionException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.ConstructorString">
            <summary>Sets the shim of RecognitionException.RecognitionException(String message)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.ConstructorStringException">
            <summary>Sets the shim of RecognitionException.RecognitionException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.ConstructorStringIIntStream">
            <summary>Sets the shim of RecognitionException.RecognitionException(String message, IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.ConstructorStringIIntStreamException">
            <summary>Sets the shim of RecognitionException.RecognitionException(String message, IIntStream input, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.ExtractInformationFromTreeNodeStreamITreeNodeStream">
            <summary>Sets the shim of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.IndexGet">
            <summary>Sets the shim of RecognitionException.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.IndexSetInt32">
            <summary>Sets the shim of RecognitionException.set_Index(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.InputGet">
            <summary>Sets the shim of RecognitionException.get_Input()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.InputSetIIntStream">
            <summary>Sets the shim of RecognitionException.set_Input(IIntStream value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.LineGet">
            <summary>Sets the shim of RecognitionException.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.LineSetInt32">
            <summary>Sets the shim of RecognitionException.set_Line(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.NodeGet">
            <summary>Sets the shim of RecognitionException.get_Node()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.NodeSetObject">
            <summary>Sets the shim of RecognitionException.set_Node(Object value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.TokenGet">
            <summary>Sets the shim of RecognitionException.get_Token()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.TokenSetIToken">
            <summary>Sets the shim of RecognitionException.set_Token(IToken value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.UnexpectedTypeGet">
            <summary>Sets the shim of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.ApproximateLineInfoGet">
            <summary>Sets the shim of RecognitionException.get_ApproximateLineInfo()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.ApproximateLineInfoSetBoolean">
            <summary>Sets the shim of RecognitionException.set_ApproximateLineInfo(Boolean value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.CharPositionInLineGet">
            <summary>Sets the shim of RecognitionException.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.CharPositionInLineSetInt32">
            <summary>Sets the shim of RecognitionException.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.CharacterGet">
            <summary>Sets the shim of RecognitionException.get_Character()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.CharacterSetInt32">
            <summary>Sets the shim of RecognitionException.set_Character(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.ExtractInformationFromTreeNodeStreamITreeNodeStream">
            <summary>Sets the shim of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.IndexGet">
            <summary>Sets the shim of RecognitionException.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.IndexSetInt32">
            <summary>Sets the shim of RecognitionException.set_Index(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.InputGet">
            <summary>Sets the shim of RecognitionException.get_Input()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.InputSetIIntStream">
            <summary>Sets the shim of RecognitionException.set_Input(IIntStream value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.LineGet">
            <summary>Sets the shim of RecognitionException.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.LineSetInt32">
            <summary>Sets the shim of RecognitionException.set_Line(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.NodeGet">
            <summary>Sets the shim of RecognitionException.get_Node()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.NodeSetObject">
            <summary>Sets the shim of RecognitionException.set_Node(Object value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.TokenGet">
            <summary>Sets the shim of RecognitionException.get_Token()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.TokenSetIToken">
            <summary>Sets the shim of RecognitionException.set_Token(IToken value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognitionException.AllInstances.UnexpectedTypeGet">
            <summary>Sets the shim of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimRecognizerSharedState">
            <summary>Shim type of Antlr.Runtime.RecognizerSharedState</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimRecognizerSharedState.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimRecognizerSharedState.#ctor(Antlr.Runtime.RecognizerSharedState)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimRecognizerSharedState.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimRecognizerSharedState.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognizerSharedState.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognizerSharedState.Constructor">
            <summary>Sets the shim of RecognizerSharedState.RecognizerSharedState()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimRecognizerSharedState.ConstructorRecognizerSharedState">
            <summary>Sets the shim of RecognizerSharedState.RecognizerSharedState(RecognizerSharedState state)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimRecognizerSharedState.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimTokenChannels">
            <summary>Shim type of Antlr.Runtime.TokenChannels</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokenChannels.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokenChannels.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokenChannels.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenChannels.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimTokenRewriteStream">
            <summary>Shim type of Antlr.Runtime.TokenRewriteStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokenRewriteStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokenRewriteStream.#ctor(Antlr.Runtime.TokenRewriteStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokenRewriteStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokenRewriteStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokenRewriteStream.Bind(Antlr.Runtime.IIntStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokenRewriteStream.Bind(Antlr.Runtime.ITokenStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokenRewriteStream.Bind(Antlr.Runtime.ITokenStreamInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.CatOpTextObjectObject">
            <summary>Sets the shim of TokenRewriteStream.CatOpText(Object a, Object b)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.Constructor">
            <summary>Sets the shim of TokenRewriteStream.TokenRewriteStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.ConstructorITokenSource">
            <summary>Sets the shim of TokenRewriteStream.TokenRewriteStream(ITokenSource tokenSource)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.ConstructorITokenSourceInt32">
            <summary>Sets the shim of TokenRewriteStream.TokenRewriteStream(ITokenSource tokenSource, Int32 channel)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.DeleteIToken">
            <summary>Sets the shim of TokenRewriteStream.Delete(IToken indexT)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.DeleteITokenIToken">
            <summary>Sets the shim of TokenRewriteStream.Delete(IToken from, IToken to)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.DeleteInt32">
            <summary>Sets the shim of TokenRewriteStream.Delete(Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.DeleteInt32Int32">
            <summary>Sets the shim of TokenRewriteStream.Delete(Int32 from, Int32 to)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.DeleteProgram">
            <summary>Sets the shim of TokenRewriteStream.DeleteProgram()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.DeleteProgramString">
            <summary>Sets the shim of TokenRewriteStream.DeleteProgram(String programName)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.DeleteStringITokenIToken">
            <summary>Sets the shim of TokenRewriteStream.Delete(String programName, IToken from, IToken to)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.DeleteStringInt32Int32">
            <summary>Sets the shim of TokenRewriteStream.Delete(String programName, Int32 from, Int32 to)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.GetLastRewriteTokenIndex">
            <summary>Sets the shim of TokenRewriteStream.GetLastRewriteTokenIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.GetLastRewriteTokenIndexString">
            <summary>Sets the shim of TokenRewriteStream.GetLastRewriteTokenIndex(String programName)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.Init">
            <summary>Sets the shim of TokenRewriteStream.Init()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.InsertAfterITokenObject">
            <summary>Sets the shim of TokenRewriteStream.InsertAfter(IToken t, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.InsertAfterInt32Object">
            <summary>Sets the shim of TokenRewriteStream.InsertAfter(Int32 index, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.InsertAfterStringITokenObject">
            <summary>Sets the shim of TokenRewriteStream.InsertAfter(String programName, IToken t, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.InsertAfterStringInt32Object">
            <summary>Sets the shim of TokenRewriteStream.InsertAfter(String programName, Int32 index, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.InsertBeforeITokenObject">
            <summary>Sets the shim of TokenRewriteStream.InsertBefore(IToken t, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.InsertBeforeInt32Object">
            <summary>Sets the shim of TokenRewriteStream.InsertBefore(Int32 index, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.InsertBeforeStringITokenObject">
            <summary>Sets the shim of TokenRewriteStream.InsertBefore(String programName, IToken t, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.InsertBeforeStringInt32Object">
            <summary>Sets the shim of TokenRewriteStream.InsertBefore(String programName, Int32 index, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.ReplaceITokenITokenObject">
            <summary>Sets the shim of TokenRewriteStream.Replace(IToken from, IToken to, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.ReplaceITokenObject">
            <summary>Sets the shim of TokenRewriteStream.Replace(IToken indexT, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.ReplaceInt32Int32Object">
            <summary>Sets the shim of TokenRewriteStream.Replace(Int32 from, Int32 to, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.ReplaceInt32Object">
            <summary>Sets the shim of TokenRewriteStream.Replace(Int32 index, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.ReplaceStringITokenITokenObject">
            <summary>Sets the shim of TokenRewriteStream.Replace(String programName, IToken from, IToken to, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.ReplaceStringInt32Int32Object">
            <summary>Sets the shim of TokenRewriteStream.Replace(String programName, Int32 from, Int32 to, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.RollbackInt32">
            <summary>Sets the shim of TokenRewriteStream.Rollback(Int32 instructionIndex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.RollbackStringInt32">
            <summary>Sets the shim of TokenRewriteStream.Rollback(String programName, Int32 instructionIndex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.SetLastRewriteTokenIndexStringInt32">
            <summary>Sets the shim of TokenRewriteStream.SetLastRewriteTokenIndex(String programName, Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.ToDebugString">
            <summary>Sets the shim of TokenRewriteStream.ToDebugString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.ToDebugStringInt32Int32">
            <summary>Sets the shim of TokenRewriteStream.ToDebugString(Int32 start, Int32 end)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.ToOriginalString">
            <summary>Sets the shim of TokenRewriteStream.ToOriginalString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.ToOriginalStringInt32Int32">
            <summary>Sets the shim of TokenRewriteStream.ToOriginalString(Int32 start, Int32 end)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.ToString">
            <summary>Sets the shim of TokenRewriteStream.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.ToStringInt32Int32">
            <summary>Sets the shim of TokenRewriteStream.ToString(Int32 start, Int32 end)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.ToStringString">
            <summary>Sets the shim of TokenRewriteStream.ToString(String programName)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.ToStringStringInt32Int32">
            <summary>Sets the shim of TokenRewriteStream.ToString(String programName, Int32 start, Int32 end)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.CatOpTextObjectObject">
            <summary>Sets the shim of TokenRewriteStream.CatOpText(Object a, Object b)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.DeleteIToken">
            <summary>Sets the shim of TokenRewriteStream.Delete(IToken indexT)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.DeleteITokenIToken">
            <summary>Sets the shim of TokenRewriteStream.Delete(IToken from, IToken to)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.DeleteInt32">
            <summary>Sets the shim of TokenRewriteStream.Delete(Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.DeleteInt32Int32">
            <summary>Sets the shim of TokenRewriteStream.Delete(Int32 from, Int32 to)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.DeleteProgram">
            <summary>Sets the shim of TokenRewriteStream.DeleteProgram()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.DeleteProgramString">
            <summary>Sets the shim of TokenRewriteStream.DeleteProgram(String programName)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.DeleteStringITokenIToken">
            <summary>Sets the shim of TokenRewriteStream.Delete(String programName, IToken from, IToken to)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.DeleteStringInt32Int32">
            <summary>Sets the shim of TokenRewriteStream.Delete(String programName, Int32 from, Int32 to)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.GetLastRewriteTokenIndex">
            <summary>Sets the shim of TokenRewriteStream.GetLastRewriteTokenIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.GetLastRewriteTokenIndexString">
            <summary>Sets the shim of TokenRewriteStream.GetLastRewriteTokenIndex(String programName)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.Init">
            <summary>Sets the shim of TokenRewriteStream.Init()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.InsertAfterITokenObject">
            <summary>Sets the shim of TokenRewriteStream.InsertAfter(IToken t, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.InsertAfterInt32Object">
            <summary>Sets the shim of TokenRewriteStream.InsertAfter(Int32 index, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.InsertAfterStringITokenObject">
            <summary>Sets the shim of TokenRewriteStream.InsertAfter(String programName, IToken t, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.InsertAfterStringInt32Object">
            <summary>Sets the shim of TokenRewriteStream.InsertAfter(String programName, Int32 index, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.InsertBeforeITokenObject">
            <summary>Sets the shim of TokenRewriteStream.InsertBefore(IToken t, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.InsertBeforeInt32Object">
            <summary>Sets the shim of TokenRewriteStream.InsertBefore(Int32 index, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.InsertBeforeStringITokenObject">
            <summary>Sets the shim of TokenRewriteStream.InsertBefore(String programName, IToken t, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.InsertBeforeStringInt32Object">
            <summary>Sets the shim of TokenRewriteStream.InsertBefore(String programName, Int32 index, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.ReplaceITokenITokenObject">
            <summary>Sets the shim of TokenRewriteStream.Replace(IToken from, IToken to, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.ReplaceITokenObject">
            <summary>Sets the shim of TokenRewriteStream.Replace(IToken indexT, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.ReplaceInt32Int32Object">
            <summary>Sets the shim of TokenRewriteStream.Replace(Int32 from, Int32 to, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.ReplaceInt32Object">
            <summary>Sets the shim of TokenRewriteStream.Replace(Int32 index, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.ReplaceStringITokenITokenObject">
            <summary>Sets the shim of TokenRewriteStream.Replace(String programName, IToken from, IToken to, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.ReplaceStringInt32Int32Object">
            <summary>Sets the shim of TokenRewriteStream.Replace(String programName, Int32 from, Int32 to, Object text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.RollbackInt32">
            <summary>Sets the shim of TokenRewriteStream.Rollback(Int32 instructionIndex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.RollbackStringInt32">
            <summary>Sets the shim of TokenRewriteStream.Rollback(String programName, Int32 instructionIndex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.SetLastRewriteTokenIndexStringInt32">
            <summary>Sets the shim of TokenRewriteStream.SetLastRewriteTokenIndex(String programName, Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.ToDebugString">
            <summary>Sets the shim of TokenRewriteStream.ToDebugString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.ToDebugStringInt32Int32">
            <summary>Sets the shim of TokenRewriteStream.ToDebugString(Int32 start, Int32 end)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.ToOriginalString">
            <summary>Sets the shim of TokenRewriteStream.ToOriginalString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.ToOriginalStringInt32Int32">
            <summary>Sets the shim of TokenRewriteStream.ToOriginalString(Int32 start, Int32 end)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.ToString01">
            <summary>Sets the shim of TokenRewriteStream.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.ToStringInt32Int32">
            <summary>Sets the shim of TokenRewriteStream.ToString(Int32 start, Int32 end)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.ToStringString">
            <summary>Sets the shim of TokenRewriteStream.ToString(String programName)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenRewriteStream.AllInstances.ToStringStringInt32Int32">
            <summary>Sets the shim of TokenRewriteStream.ToString(String programName, Int32 start, Int32 end)</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimTokenTypes">
            <summary>Shim type of Antlr.Runtime.TokenTypes</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokenTypes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokenTypes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokenTypes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokenTypes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimTokens">
            <summary>Shim type of Antlr.Runtime.Tokens</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokens.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokens.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokens.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokens.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokens.StaticConstructor">
            <summary>Sets the shim of Tokens.Tokens()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimTokens`1">
            <summary>Shim type of Antlr.Runtime.Tokens`1</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokens`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokens`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimTokens`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokens`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimTokens`1.StaticConstructor">
            <summary>Sets the shim of Tokens`1.Tokens`1()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream">
            <summary>Shim type of Antlr.Runtime.UnbufferedTokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.#ctor(Antlr.Runtime.UnbufferedTokenStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.Bind(Antlr.Runtime.IIntStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.Bind(Antlr.Runtime.ITokenStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.ConstructorITokenSource">
            <summary>Sets the shim of UnbufferedTokenStream.UnbufferedTokenStream(ITokenSource tokenSource)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.GetInt32">
            <summary>Sets the shim of UnbufferedTokenStream.Get(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.IsEndOfFileIToken">
            <summary>Sets the shim of UnbufferedTokenStream.IsEndOfFile(IToken o)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.LAInt32">
            <summary>Sets the shim of UnbufferedTokenStream.LA(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.NextElement">
            <summary>Sets the shim of UnbufferedTokenStream.NextElement()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.SourceNameGet">
            <summary>Sets the shim of UnbufferedTokenStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.ToStringITokenIToken">
            <summary>Sets the shim of UnbufferedTokenStream.ToString(IToken start, IToken stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.ToStringInt32Int32">
            <summary>Sets the shim of UnbufferedTokenStream.ToString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.TokenSourceGet">
            <summary>Sets the shim of UnbufferedTokenStream.get_TokenSource()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.AllInstances.GetInt32">
            <summary>Sets the shim of UnbufferedTokenStream.Get(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.AllInstances.IsEndOfFileIToken">
            <summary>Sets the shim of UnbufferedTokenStream.IsEndOfFile(IToken o)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.AllInstances.LAInt32">
            <summary>Sets the shim of UnbufferedTokenStream.LA(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.AllInstances.NextElement">
            <summary>Sets the shim of UnbufferedTokenStream.NextElement()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.AllInstances.SourceNameGet">
            <summary>Sets the shim of UnbufferedTokenStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.AllInstances.ToStringITokenIToken">
            <summary>Sets the shim of UnbufferedTokenStream.ToString(IToken start, IToken stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.AllInstances.ToStringInt32Int32">
            <summary>Sets the shim of UnbufferedTokenStream.ToString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnbufferedTokenStream.AllInstances.TokenSourceGet">
            <summary>Sets the shim of UnbufferedTokenStream.get_TokenSource()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimUnwantedTokenException">
            <summary>Shim type of Antlr.Runtime.UnwantedTokenException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimUnwantedTokenException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimUnwantedTokenException.#ctor(Antlr.Runtime.UnwantedTokenException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimUnwantedTokenException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimUnwantedTokenException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.ShimUnwantedTokenException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnwantedTokenException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnwantedTokenException.Constructor">
            <summary>Sets the shim of UnwantedTokenException.UnwantedTokenException()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnwantedTokenException.ConstructorInt32IIntStream">
            <summary>Sets the shim of UnwantedTokenException.UnwantedTokenException(Int32 expecting, IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnwantedTokenException.ConstructorInt32IIntStreamIListOfString">
            <summary>Sets the shim of UnwantedTokenException.UnwantedTokenException(Int32 expecting, IIntStream input, IList`1&lt;String&gt; tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnwantedTokenException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of UnwantedTokenException.UnwantedTokenException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnwantedTokenException.ConstructorString">
            <summary>Sets the shim of UnwantedTokenException.UnwantedTokenException(String message)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnwantedTokenException.ConstructorStringException">
            <summary>Sets the shim of UnwantedTokenException.UnwantedTokenException(String message, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnwantedTokenException.ConstructorStringInt32IIntStreamIListOfString">
            <summary>Sets the shim of UnwantedTokenException.UnwantedTokenException(String message, Int32 expecting, IIntStream input, IList`1&lt;String&gt; tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnwantedTokenException.ConstructorStringInt32IIntStreamIListOfStringException">
            <summary>Sets the shim of UnwantedTokenException.UnwantedTokenException(String message, Int32 expecting, IIntStream input, IList`1&lt;String&gt; tokenNames, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnwantedTokenException.ToString">
            <summary>Sets the shim of UnwantedTokenException.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnwantedTokenException.UnexpectedTokenGet">
            <summary>Sets the shim of UnwantedTokenException.get_UnexpectedToken()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.ShimUnwantedTokenException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnwantedTokenException.AllInstances.ToString01">
            <summary>Sets the shim of UnwantedTokenException.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.ShimUnwantedTokenException.AllInstances.UnexpectedTokenGet">
            <summary>Sets the shim of UnwantedTokenException.get_UnexpectedToken()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubANTLRFileStream">
            <summary>Stub type of Antlr.Runtime.ANTLRFileStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.#ctor(System.String,System.Text.Encoding)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.AttachBackingFieldToCharPositionInLine">
            <summary>Attaches delegates to emulate StubANTLRFileStream.CharPositionInLine as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.AttachBackingFieldToLine">
            <summary>Attaches delegates to emulate StubANTLRFileStream.Line as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.CharPositionInLineGet">
            <summary>Sets the stub of ANTLRStringStream.get_CharPositionInLine()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.CharPositionInLineSetInt32">
            <summary>Sets the stub of ANTLRStringStream.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.Consume">
            <summary>Sets the stub of ANTLRStringStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.Consume01">
            <summary>Sets the stub of ANTLRStringStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.CountGet">
            <summary>Sets the stub of ANTLRStringStream.get_Count()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.IndexGet">
            <summary>Sets the stub of ANTLRStringStream.get_Index()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.InitializeStub">
            <summary>Initializes a new instance of type StubANTLRFileStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.LA(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.LA(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.LAInt32">
            <summary>Sets the stub of ANTLRStringStream.LA(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.LT(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.LT(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.LTInt32">
            <summary>Sets the stub of ANTLRStringStream.LT(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.LineGet">
            <summary>Sets the stub of ANTLRStringStream.get_Line()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.LineSetInt32">
            <summary>Sets the stub of ANTLRStringStream.set_Line(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.Load(System.String,System.Text.Encoding)">
            <summary>Sets the stub of ANTLRFileStream.Load(String fileName, Encoding encoding)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.LoadStringEncoding">
            <summary>Sets the stub of ANTLRFileStream.Load(String fileName, Encoding encoding)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.Mark">
            <summary>Sets the stub of ANTLRStringStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.Mark01">
            <summary>Sets the stub of ANTLRStringStream.Mark()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.Release(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.Release(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.ReleaseInt32">
            <summary>Sets the stub of ANTLRStringStream.Release(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.Reset">
            <summary>Sets the stub of ANTLRStringStream.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.Reset01">
            <summary>Sets the stub of ANTLRStringStream.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.Rewind">
            <summary>Sets the stub of ANTLRStringStream.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.Rewind(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.Rewind(Int32 m)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.Rewind01">
            <summary>Sets the stub of ANTLRStringStream.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.RewindInt32">
            <summary>Sets the stub of ANTLRStringStream.Rewind(Int32 m)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.Seek(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.SeekInt32">
            <summary>Sets the stub of ANTLRStringStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.SourceNameGet">
            <summary>Sets the stub of ANTLRFileStream.get_SourceName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.Substring(System.Int32,System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.Substring(Int32 start, Int32 length)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.SubstringInt32Int32">
            <summary>Sets the stub of ANTLRStringStream.Substring(Int32 start, Int32 length)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRFileStream.ToString">
            <summary>Sets the stub of ANTLRStringStream.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRFileStream.ToString01">
            <summary>Sets the stub of ANTLRStringStream.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRFileStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRFileStream.CharPositionInLine">
            <summary>Sets the stub of ANTLRStringStream.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRFileStream.Count">
            <summary>Sets the stub of ANTLRStringStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRFileStream.Index">
            <summary>Sets the stub of ANTLRStringStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRFileStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRFileStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRFileStream.Line">
            <summary>Sets the stub of ANTLRStringStream.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRFileStream.SourceName">
            <summary>Sets the stub of ANTLRFileStream.get_SourceName()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubANTLRInputStream">
            <summary>Stub type of Antlr.Runtime.ANTLRInputStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.#ctor(System.IO.Stream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.#ctor(System.IO.Stream,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.#ctor(System.IO.Stream,System.Int32,System.Text.Encoding)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.#ctor(System.IO.Stream,System.Int32,System.Int32,System.Text.Encoding)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.AttachBackingFieldToCharPositionInLine">
            <summary>Attaches delegates to emulate StubANTLRInputStream.CharPositionInLine as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.AttachBackingFieldToLine">
            <summary>Attaches delegates to emulate StubANTLRInputStream.Line as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.CharPositionInLineGet">
            <summary>Sets the stub of ANTLRStringStream.get_CharPositionInLine()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.CharPositionInLineSetInt32">
            <summary>Sets the stub of ANTLRStringStream.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.Consume">
            <summary>Sets the stub of ANTLRStringStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.Consume01">
            <summary>Sets the stub of ANTLRStringStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.CountGet">
            <summary>Sets the stub of ANTLRStringStream.get_Count()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.IndexGet">
            <summary>Sets the stub of ANTLRStringStream.get_Index()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.InitializeStub">
            <summary>Initializes a new instance of type StubANTLRInputStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.LA(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.LA(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.LAInt32">
            <summary>Sets the stub of ANTLRStringStream.LA(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.LT(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.LT(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.LTInt32">
            <summary>Sets the stub of ANTLRStringStream.LT(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.LineGet">
            <summary>Sets the stub of ANTLRStringStream.get_Line()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.LineSetInt32">
            <summary>Sets the stub of ANTLRStringStream.set_Line(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.Load(System.IO.TextReader,System.Int32,System.Int32)">
            <summary>Sets the stub of ANTLRReaderStream.Load(TextReader r, Int32 size, Int32 readChunkSize)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.LoadTextReaderInt32Int32">
            <summary>Sets the stub of ANTLRReaderStream.Load(TextReader r, Int32 size, Int32 readChunkSize)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.Mark">
            <summary>Sets the stub of ANTLRStringStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.Mark01">
            <summary>Sets the stub of ANTLRStringStream.Mark()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.Release(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.Release(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.ReleaseInt32">
            <summary>Sets the stub of ANTLRStringStream.Release(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.Reset">
            <summary>Sets the stub of ANTLRStringStream.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.Reset01">
            <summary>Sets the stub of ANTLRStringStream.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.Rewind">
            <summary>Sets the stub of ANTLRStringStream.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.Rewind(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.Rewind(Int32 m)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.Rewind01">
            <summary>Sets the stub of ANTLRStringStream.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.RewindInt32">
            <summary>Sets the stub of ANTLRStringStream.Rewind(Int32 m)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.Seek(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.SeekInt32">
            <summary>Sets the stub of ANTLRStringStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.SourceNameGet">
            <summary>Sets the stub of ANTLRStringStream.get_SourceName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.Substring(System.Int32,System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.Substring(Int32 start, Int32 length)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.SubstringInt32Int32">
            <summary>Sets the stub of ANTLRStringStream.Substring(Int32 start, Int32 length)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRInputStream.ToString">
            <summary>Sets the stub of ANTLRStringStream.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRInputStream.ToString01">
            <summary>Sets the stub of ANTLRStringStream.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRInputStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRInputStream.CharPositionInLine">
            <summary>Sets the stub of ANTLRStringStream.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRInputStream.Count">
            <summary>Sets the stub of ANTLRStringStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRInputStream.Index">
            <summary>Sets the stub of ANTLRStringStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRInputStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRInputStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRInputStream.Line">
            <summary>Sets the stub of ANTLRStringStream.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRInputStream.SourceName">
            <summary>Sets the stub of ANTLRStringStream.get_SourceName()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubANTLRReaderStream">
            <summary>Stub type of Antlr.Runtime.ANTLRReaderStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.#ctor(System.IO.TextReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.#ctor(System.IO.TextReader,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.#ctor(System.IO.TextReader,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.AttachBackingFieldToCharPositionInLine">
            <summary>Attaches delegates to emulate StubANTLRReaderStream.CharPositionInLine as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.AttachBackingFieldToLine">
            <summary>Attaches delegates to emulate StubANTLRReaderStream.Line as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.CharPositionInLineGet">
            <summary>Sets the stub of ANTLRStringStream.get_CharPositionInLine()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.CharPositionInLineSetInt32">
            <summary>Sets the stub of ANTLRStringStream.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.Consume">
            <summary>Sets the stub of ANTLRStringStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.Consume01">
            <summary>Sets the stub of ANTLRStringStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.CountGet">
            <summary>Sets the stub of ANTLRStringStream.get_Count()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.IndexGet">
            <summary>Sets the stub of ANTLRStringStream.get_Index()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.InitializeStub">
            <summary>Initializes a new instance of type StubANTLRReaderStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.LA(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.LA(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.LAInt32">
            <summary>Sets the stub of ANTLRStringStream.LA(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.LT(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.LT(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.LTInt32">
            <summary>Sets the stub of ANTLRStringStream.LT(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.LineGet">
            <summary>Sets the stub of ANTLRStringStream.get_Line()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.LineSetInt32">
            <summary>Sets the stub of ANTLRStringStream.set_Line(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.Load(System.IO.TextReader,System.Int32,System.Int32)">
            <summary>Sets the stub of ANTLRReaderStream.Load(TextReader r, Int32 size, Int32 readChunkSize)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.LoadTextReaderInt32Int32">
            <summary>Sets the stub of ANTLRReaderStream.Load(TextReader r, Int32 size, Int32 readChunkSize)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.Mark">
            <summary>Sets the stub of ANTLRStringStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.Mark01">
            <summary>Sets the stub of ANTLRStringStream.Mark()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.Release(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.Release(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.ReleaseInt32">
            <summary>Sets the stub of ANTLRStringStream.Release(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.Reset">
            <summary>Sets the stub of ANTLRStringStream.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.Reset01">
            <summary>Sets the stub of ANTLRStringStream.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.Rewind">
            <summary>Sets the stub of ANTLRStringStream.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.Rewind(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.Rewind(Int32 m)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.Rewind01">
            <summary>Sets the stub of ANTLRStringStream.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.RewindInt32">
            <summary>Sets the stub of ANTLRStringStream.Rewind(Int32 m)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.Seek(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.SeekInt32">
            <summary>Sets the stub of ANTLRStringStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.SourceNameGet">
            <summary>Sets the stub of ANTLRStringStream.get_SourceName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.Substring(System.Int32,System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.Substring(Int32 start, Int32 length)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.SubstringInt32Int32">
            <summary>Sets the stub of ANTLRStringStream.Substring(Int32 start, Int32 length)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRReaderStream.ToString">
            <summary>Sets the stub of ANTLRStringStream.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRReaderStream.ToString01">
            <summary>Sets the stub of ANTLRStringStream.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRReaderStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRReaderStream.CharPositionInLine">
            <summary>Sets the stub of ANTLRStringStream.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRReaderStream.Count">
            <summary>Sets the stub of ANTLRStringStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRReaderStream.Index">
            <summary>Sets the stub of ANTLRStringStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRReaderStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRReaderStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRReaderStream.Line">
            <summary>Sets the stub of ANTLRStringStream.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRReaderStream.SourceName">
            <summary>Sets the stub of ANTLRStringStream.get_SourceName()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubANTLRStringStream">
            <summary>Stub type of Antlr.Runtime.ANTLRStringStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.#ctor(System.Char[],System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.#ctor(System.Char[],System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.AttachBackingFieldToCharPositionInLine">
            <summary>Attaches delegates to emulate StubANTLRStringStream.CharPositionInLine as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.AttachBackingFieldToLine">
            <summary>Attaches delegates to emulate StubANTLRStringStream.Line as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.CharPositionInLineGet">
            <summary>Sets the stub of ANTLRStringStream.get_CharPositionInLine()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.CharPositionInLineSetInt32">
            <summary>Sets the stub of ANTLRStringStream.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.Consume">
            <summary>Sets the stub of ANTLRStringStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.Consume01">
            <summary>Sets the stub of ANTLRStringStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.CountGet">
            <summary>Sets the stub of ANTLRStringStream.get_Count()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.IndexGet">
            <summary>Sets the stub of ANTLRStringStream.get_Index()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.InitializeStub">
            <summary>Initializes a new instance of type StubANTLRStringStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.LA(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.LA(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.LAInt32">
            <summary>Sets the stub of ANTLRStringStream.LA(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.LT(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.LT(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.LTInt32">
            <summary>Sets the stub of ANTLRStringStream.LT(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.LineGet">
            <summary>Sets the stub of ANTLRStringStream.get_Line()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.LineSetInt32">
            <summary>Sets the stub of ANTLRStringStream.set_Line(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.Mark">
            <summary>Sets the stub of ANTLRStringStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.Mark01">
            <summary>Sets the stub of ANTLRStringStream.Mark()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.Release(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.Release(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.ReleaseInt32">
            <summary>Sets the stub of ANTLRStringStream.Release(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.Reset">
            <summary>Sets the stub of ANTLRStringStream.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.Reset01">
            <summary>Sets the stub of ANTLRStringStream.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.Rewind">
            <summary>Sets the stub of ANTLRStringStream.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.Rewind(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.Rewind(Int32 m)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.Rewind01">
            <summary>Sets the stub of ANTLRStringStream.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.RewindInt32">
            <summary>Sets the stub of ANTLRStringStream.Rewind(Int32 m)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.Seek(System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.SeekInt32">
            <summary>Sets the stub of ANTLRStringStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.SourceNameGet">
            <summary>Sets the stub of ANTLRStringStream.get_SourceName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.Substring(System.Int32,System.Int32)">
            <summary>Sets the stub of ANTLRStringStream.Substring(Int32 start, Int32 length)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.SubstringInt32Int32">
            <summary>Sets the stub of ANTLRStringStream.Substring(Int32 start, Int32 length)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubANTLRStringStream.ToString">
            <summary>Sets the stub of ANTLRStringStream.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubANTLRStringStream.ToString01">
            <summary>Sets the stub of ANTLRStringStream.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRStringStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRStringStream.CharPositionInLine">
            <summary>Sets the stub of ANTLRStringStream.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRStringStream.Count">
            <summary>Sets the stub of ANTLRStringStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRStringStream.Index">
            <summary>Sets the stub of ANTLRStringStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRStringStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRStringStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRStringStream.Line">
            <summary>Sets the stub of ANTLRStringStream.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubANTLRStringStream.SourceName">
            <summary>Sets the stub of ANTLRStringStream.get_SourceName()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubBaseRecognizer">
            <summary>Stub type of Antlr.Runtime.BaseRecognizer</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.#ctor(Antlr.Runtime.RecognizerSharedState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.AlreadyParsedRule(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.AlreadyParsedRuleIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.AttachBackingFieldToBacktrackingLevel">
            <summary>Attaches delegates to emulate StubBaseRecognizer.BacktrackingLevel as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.BacktrackingLevelGet">
            <summary>Sets the stub of BaseRecognizer.get_BacktrackingLevel()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.BacktrackingLevelSetInt32">
            <summary>Sets the stub of BaseRecognizer.set_BacktrackingLevel(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.BeginResync">
            <summary>Sets the stub of BaseRecognizer.BeginResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.BeginResync01">
            <summary>Sets the stub of BaseRecognizer.BeginResync()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.CombineFollows(System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.CombineFollows(Boolean exact)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.CombineFollowsBoolean">
            <summary>Sets the stub of BaseRecognizer.CombineFollows(Boolean exact)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.ComputeContextSensitiveRuleFOLLOW">
            <summary>Sets the stub of BaseRecognizer.ComputeContextSensitiveRuleFOLLOW()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.ComputeContextSensitiveRuleFOLLOW01">
            <summary>Sets the stub of BaseRecognizer.ComputeContextSensitiveRuleFOLLOW()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.ComputeErrorRecoverySet">
            <summary>Sets the stub of BaseRecognizer.ComputeErrorRecoverySet()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.ComputeErrorRecoverySet01">
            <summary>Sets the stub of BaseRecognizer.ComputeErrorRecoverySet()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.ConsumeUntil(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.ConsumeUntil(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.ConsumeUntilIIntStreamBitSet">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.ConsumeUntilIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugBeginBacktrack(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugBeginBacktrack(Int32 level)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugBeginBacktrackInt32">
            <summary>Sets the stub of BaseRecognizer.DebugBeginBacktrack(Int32 level)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugEndBacktrack(System.Int32,System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugEndBacktrackInt32Boolean">
            <summary>Sets the stub of BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugEnterAlt(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterAlt(Int32 alt)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugEnterAltInt32">
            <summary>Sets the stub of BaseRecognizer.DebugEnterAlt(Int32 alt)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugEnterDecision(System.Int32,System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugEnterDecisionInt32Boolean">
            <summary>Sets the stub of BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugEnterRule(System.String,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugEnterRuleStringString">
            <summary>Sets the stub of BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugEnterSubRule(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugEnterSubRuleInt32">
            <summary>Sets the stub of BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugExitDecision(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugExitDecision(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugExitDecisionInt32">
            <summary>Sets the stub of BaseRecognizer.DebugExitDecision(Int32 decisionNumber)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugExitRule(System.String,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugExitRuleStringString">
            <summary>Sets the stub of BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugExitSubRule(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugExitSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugExitSubRuleInt32">
            <summary>Sets the stub of BaseRecognizer.DebugExitSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugListenerGet">
            <summary>Sets the stub of BaseRecognizer.get_DebugListener()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugLocation(System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugLocationInt32Int32">
            <summary>Sets the stub of BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugRecognitionException(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugRecognitionExceptionRecognitionException">
            <summary>Sets the stub of BaseRecognizer.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugSemanticPredicate(System.Boolean,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugSemanticPredicateBooleanString">
            <summary>Sets the stub of BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.DisplayRecognitionError(System.String[],Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.DisplayRecognitionErrorStringArrayRecognitionException">
            <summary>Sets the stub of BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.EmitErrorMessage(System.String)">
            <summary>Sets the stub of BaseRecognizer.EmitErrorMessage(String msg)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.EmitErrorMessageString">
            <summary>Sets the stub of BaseRecognizer.EmitErrorMessage(String msg)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.EndResync">
            <summary>Sets the stub of BaseRecognizer.EndResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.EndResync01">
            <summary>Sets the stub of BaseRecognizer.EndResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.FailedGet">
            <summary>Sets the stub of BaseRecognizer.get_Failed()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.GetCurrentInputSymbol(Antlr.Runtime.IIntStream)">
            <summary>Sets the stub of BaseRecognizer.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.GetCurrentInputSymbolIIntStream">
            <summary>Sets the stub of BaseRecognizer.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.GetErrorHeader(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.GetErrorHeader(RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.GetErrorHeaderRecognitionException">
            <summary>Sets the stub of BaseRecognizer.GetErrorHeader(RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.GetErrorMessage(Antlr.Runtime.RecognitionException,System.String[])">
            <summary>Sets the stub of BaseRecognizer.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.GetErrorMessageRecognitionExceptionStringArray">
            <summary>Sets the stub of BaseRecognizer.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.GetMissingSymbol(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.GetMissingSymbolIIntStreamRecognitionExceptionInt32BitSet">
            <summary>Sets the stub of BaseRecognizer.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.GetRuleMemoization(System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.GetRuleMemoizationCacheSize">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoizationCacheSize()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.GetRuleMemoizationCacheSize01">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoizationCacheSize()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.GetRuleMemoizationInt32Int32">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.GetTokenErrorDisplay(Antlr.Runtime.IToken)">
            <summary>Sets the stub of BaseRecognizer.GetTokenErrorDisplay(IToken t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.GetTokenErrorDisplayIToken">
            <summary>Sets the stub of BaseRecognizer.GetTokenErrorDisplay(IToken t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.GrammarFileNameGet">
            <summary>Sets the stub of BaseRecognizer.get_GrammarFileName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.InitDFAs">
            <summary>Sets the stub of BaseRecognizer.InitDFAs()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.InitDFAs01">
            <summary>Sets the stub of BaseRecognizer.InitDFAs()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.InitializeStub">
            <summary>Initializes a new instance of type StubBaseRecognizer</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.Match(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.MatchAny(Antlr.Runtime.IIntStream)">
            <summary>Sets the stub of BaseRecognizer.MatchAny(IIntStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.MatchAnyIIntStream">
            <summary>Sets the stub of BaseRecognizer.MatchAny(IIntStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.MatchIIntStreamInt32BitSet">
            <summary>Sets the stub of BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.Memoize(Antlr.Runtime.IIntStream,System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.MemoizeIIntStreamInt32Int32">
            <summary>Sets the stub of BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.MismatchIsMissingToken(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.MismatchIsMissingTokenIIntStreamBitSet">
            <summary>Sets the stub of BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.MismatchIsUnwantedToken(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.MismatchIsUnwantedTokenIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.NumberOfSyntaxErrorsGet">
            <summary>Sets the stub of BaseRecognizer.get_NumberOfSyntaxErrors()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.Recover(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.Recover(IIntStream input, RecognitionException re)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.RecoverFromMismatchedSet(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.RecoverFromMismatchedSetIIntStreamRecognitionExceptionBitSet">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.RecoverFromMismatchedToken(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.RecoverFromMismatchedTokenIIntStreamInt32BitSet">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.RecoverIIntStreamRecognitionException">
            <summary>Sets the stub of BaseRecognizer.Recover(IIntStream input, RecognitionException re)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.ReportError(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.ReportError(RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.ReportErrorRecognitionException">
            <summary>Sets the stub of BaseRecognizer.ReportError(RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.Reset">
            <summary>Sets the stub of BaseRecognizer.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.Reset01">
            <summary>Sets the stub of BaseRecognizer.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.SourceNameGet">
            <summary>Sets the stub of BaseRecognizer.get_SourceName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.ToStrings(System.Collections.Generic.ICollection{Antlr.Runtime.IToken})">
            <summary>Sets the stub of BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.ToStringsICollectionOfIToken">
            <summary>Sets the stub of BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.TokenNamesGet">
            <summary>Sets the stub of BaseRecognizer.get_TokenNames()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.TraceIn(System.String,System.Int32,System.Object)">
            <summary>Sets the stub of BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.TraceInStringInt32Object">
            <summary>Sets the stub of BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBaseRecognizer.TraceOut(System.String,System.Int32,System.Object)">
            <summary>Sets the stub of BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBaseRecognizer.TraceOutStringInt32Object">
            <summary>Sets the stub of BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBaseRecognizer.BacktrackingLevel">
            <summary>Sets the stub of BaseRecognizer.get_BacktrackingLevel()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBaseRecognizer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBaseRecognizer.DebugListener">
            <summary>Sets the stub of BaseRecognizer.get_DebugListener()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBaseRecognizer.Failed">
            <summary>Sets the stub of BaseRecognizer.get_Failed()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBaseRecognizer.GrammarFileName">
            <summary>Sets the stub of BaseRecognizer.get_GrammarFileName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBaseRecognizer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBaseRecognizer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBaseRecognizer.NumberOfSyntaxErrors">
            <summary>Sets the stub of BaseRecognizer.get_NumberOfSyntaxErrors()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBaseRecognizer.SourceName">
            <summary>Sets the stub of BaseRecognizer.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBaseRecognizer.TokenNames">
            <summary>Sets the stub of BaseRecognizer.get_TokenNames()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubBufferedTokenStream">
            <summary>Stub type of Antlr.Runtime.BufferedTokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.#ctor(Antlr.Runtime.ITokenSource)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.AttachBackingFieldToRange">
            <summary>Attaches delegates to emulate StubBufferedTokenStream.Range as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.AttachBackingFieldToTokenSource">
            <summary>Attaches delegates to emulate StubBufferedTokenStream.TokenSource as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.Consume">
            <summary>Sets the stub of BufferedTokenStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.Consume01">
            <summary>Sets the stub of BufferedTokenStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.CountGet">
            <summary>Sets the stub of BufferedTokenStream.get_Count()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.Fetch(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Fetch(Int32 n)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.FetchInt32">
            <summary>Sets the stub of BufferedTokenStream.Fetch(Int32 n)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.Fill">
            <summary>Sets the stub of BufferedTokenStream.Fill()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.Fill01">
            <summary>Sets the stub of BufferedTokenStream.Fill()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.Get(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Get(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.GetInt32">
            <summary>Sets the stub of BufferedTokenStream.Get(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.GetTokens">
            <summary>Sets the stub of BufferedTokenStream.GetTokens()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.GetTokens(System.Int32,System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.GetTokens(System.Int32,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, BitSet types)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.GetTokens(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, IEnumerable`1&lt;Int32&gt; types)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.GetTokens(System.Int32,System.Int32,System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.GetTokens01">
            <summary>Sets the stub of BufferedTokenStream.GetTokens()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.GetTokensInt32Int32">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.GetTokensInt32Int32BitSet">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, BitSet types)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.GetTokensInt32Int32IEnumerableOfInt32">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, IEnumerable`1&lt;Int32&gt; types)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.GetTokensInt32Int32Int32">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.IndexGet">
            <summary>Sets the stub of BufferedTokenStream.get_Index()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.InitializeStub">
            <summary>Initializes a new instance of type StubBufferedTokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.LA(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.LA(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.LAInt32">
            <summary>Sets the stub of BufferedTokenStream.LA(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.LB(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.LB(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.LBInt32">
            <summary>Sets the stub of BufferedTokenStream.LB(Int32 k)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.LT(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.LT(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.LTInt32">
            <summary>Sets the stub of BufferedTokenStream.LT(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.LastRealTokenGet">
            <summary>Sets the stub of BufferedTokenStream.get_LastRealToken()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.LastTokenGet">
            <summary>Sets the stub of BufferedTokenStream.get_LastToken()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.Mark">
            <summary>Sets the stub of BufferedTokenStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.Mark01">
            <summary>Sets the stub of BufferedTokenStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.MaxLookBehindGet">
            <summary>Sets the stub of BufferedTokenStream.get_MaxLookBehind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.RangeGet">
            <summary>Sets the stub of BufferedTokenStream.get_Range()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.RangeSetInt32">
            <summary>Sets the stub of BufferedTokenStream.set_Range(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.Release(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Release(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.ReleaseInt32">
            <summary>Sets the stub of BufferedTokenStream.Release(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.Reset">
            <summary>Sets the stub of BufferedTokenStream.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.Reset01">
            <summary>Sets the stub of BufferedTokenStream.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.Rewind">
            <summary>Sets the stub of BufferedTokenStream.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.Rewind(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.Rewind01">
            <summary>Sets the stub of BufferedTokenStream.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.RewindInt32">
            <summary>Sets the stub of BufferedTokenStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.Seek(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.SeekInt32">
            <summary>Sets the stub of BufferedTokenStream.Seek(Int32 index)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.Setup">
            <summary>Sets the stub of BufferedTokenStream.Setup()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.Setup01">
            <summary>Sets the stub of BufferedTokenStream.Setup()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.SourceNameGet">
            <summary>Sets the stub of BufferedTokenStream.get_SourceName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.Sync(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Sync(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.SyncInt32">
            <summary>Sets the stub of BufferedTokenStream.Sync(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.ToString">
            <summary>Sets the stub of BufferedTokenStream.ToString()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.ToString(System.Int32,System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.ToString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubBufferedTokenStream.ToString(Antlr.Runtime.IToken,Antlr.Runtime.IToken)">
            <summary>Sets the stub of BufferedTokenStream.ToString(IToken start, IToken stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.ToString01">
            <summary>Sets the stub of BufferedTokenStream.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.ToStringITokenIToken">
            <summary>Sets the stub of BufferedTokenStream.ToString(IToken start, IToken stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.ToStringInt32Int32">
            <summary>Sets the stub of BufferedTokenStream.ToString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.TokenSourceGet">
            <summary>Sets the stub of BufferedTokenStream.get_TokenSource()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubBufferedTokenStream.TokenSourceSetITokenSource">
            <summary>Sets the stub of BufferedTokenStream.set_TokenSource(ITokenSource value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBufferedTokenStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBufferedTokenStream.Count">
            <summary>Sets the stub of BufferedTokenStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBufferedTokenStream.Index">
            <summary>Sets the stub of BufferedTokenStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBufferedTokenStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBufferedTokenStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBufferedTokenStream.LastRealToken">
            <summary>Sets the stub of BufferedTokenStream.get_LastRealToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBufferedTokenStream.LastToken">
            <summary>Sets the stub of BufferedTokenStream.get_LastToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBufferedTokenStream.MaxLookBehind">
            <summary>Sets the stub of BufferedTokenStream.get_MaxLookBehind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBufferedTokenStream.Range">
            <summary>Sets the stub of BufferedTokenStream.get_Range()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBufferedTokenStream.SourceName">
            <summary>Sets the stub of BufferedTokenStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubBufferedTokenStream.TokenSource">
            <summary>Sets the stub of BufferedTokenStream.get_TokenSource()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubCharStreamState">
            <summary>Stub type of Antlr.Runtime.CharStreamState</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCharStreamState.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCharStreamState.InitializeStub">
            <summary>Initializes a new instance of type StubCharStreamState</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCharStreamState.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCharStreamState.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCharStreamState.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubClassicToken">
            <summary>Stub type of Antlr.Runtime.ClassicToken</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubClassicToken.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubClassicToken.#ctor(Antlr.Runtime.IToken)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubClassicToken.#ctor(System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubClassicToken.#ctor(System.Int32,System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubClassicToken.InitializeStub">
            <summary>Initializes a new instance of type StubClassicToken</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubClassicToken.ToString">
            <summary>Sets the stub of ClassicToken.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubClassicToken.ToString01">
            <summary>Sets the stub of ClassicToken.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubClassicToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubClassicToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubClassicToken.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubCommonToken">
            <summary>Stub type of Antlr.Runtime.CommonToken</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonToken.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonToken.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonToken.#ctor(Antlr.Runtime.IToken)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonToken.#ctor(System.Int32,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonToken.#ctor(Antlr.Runtime.ICharStream,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonToken.InitializeStub">
            <summary>Initializes a new instance of type StubCommonToken</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonToken.ToString">
            <summary>Sets the stub of CommonToken.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonToken.ToString01">
            <summary>Sets the stub of CommonToken.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCommonToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCommonToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCommonToken.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubCommonTokenStream">
            <summary>Stub type of Antlr.Runtime.CommonTokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.#ctor(Antlr.Runtime.ITokenSource)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.#ctor(Antlr.Runtime.ITokenSource,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.AttachBackingFieldToRange">
            <summary>Attaches delegates to emulate StubCommonTokenStream.Range as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.AttachBackingFieldToTokenSource">
            <summary>Attaches delegates to emulate StubCommonTokenStream.TokenSource as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.Consume">
            <summary>Sets the stub of CommonTokenStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.Consume01">
            <summary>Sets the stub of CommonTokenStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.CountGet">
            <summary>Sets the stub of BufferedTokenStream.get_Count()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.Fetch(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Fetch(Int32 n)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.FetchInt32">
            <summary>Sets the stub of BufferedTokenStream.Fetch(Int32 n)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.Fill">
            <summary>Sets the stub of BufferedTokenStream.Fill()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.Fill01">
            <summary>Sets the stub of BufferedTokenStream.Fill()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.Get(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Get(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.GetInt32">
            <summary>Sets the stub of BufferedTokenStream.Get(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.GetTokens">
            <summary>Sets the stub of BufferedTokenStream.GetTokens()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.GetTokens(System.Int32,System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.GetTokens(System.Int32,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, BitSet types)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.GetTokens(System.Int32,System.Int32,System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, Int32 ttype)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.GetTokens(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, IEnumerable`1&lt;Int32&gt; types)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.GetTokens01">
            <summary>Sets the stub of BufferedTokenStream.GetTokens()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.GetTokensInt32Int32">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.GetTokensInt32Int32BitSet">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, BitSet types)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.GetTokensInt32Int32IEnumerableOfInt32">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, IEnumerable`1&lt;Int32&gt; types)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.GetTokensInt32Int32Int32">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.IndexGet">
            <summary>Sets the stub of BufferedTokenStream.get_Index()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.InitializeStub">
            <summary>Initializes a new instance of type StubCommonTokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.LA(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.LA(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.LAInt32">
            <summary>Sets the stub of BufferedTokenStream.LA(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.LB(System.Int32)">
            <summary>Sets the stub of CommonTokenStream.LB(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.LBInt32">
            <summary>Sets the stub of CommonTokenStream.LB(Int32 k)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.LT(System.Int32)">
            <summary>Sets the stub of CommonTokenStream.LT(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.LTInt32">
            <summary>Sets the stub of CommonTokenStream.LT(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.LastRealTokenGet">
            <summary>Sets the stub of BufferedTokenStream.get_LastRealToken()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.LastTokenGet">
            <summary>Sets the stub of BufferedTokenStream.get_LastToken()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.Mark">
            <summary>Sets the stub of BufferedTokenStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.Mark01">
            <summary>Sets the stub of BufferedTokenStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.MaxLookBehindGet">
            <summary>Sets the stub of BufferedTokenStream.get_MaxLookBehind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.RangeGet">
            <summary>Sets the stub of BufferedTokenStream.get_Range()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.RangeSetInt32">
            <summary>Sets the stub of BufferedTokenStream.set_Range(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.Release(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Release(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.ReleaseInt32">
            <summary>Sets the stub of BufferedTokenStream.Release(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.Reset">
            <summary>Sets the stub of BufferedTokenStream.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.Reset01">
            <summary>Sets the stub of BufferedTokenStream.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.Rewind">
            <summary>Sets the stub of BufferedTokenStream.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.Rewind(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.Rewind01">
            <summary>Sets the stub of BufferedTokenStream.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.RewindInt32">
            <summary>Sets the stub of BufferedTokenStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.Seek(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.SeekInt32">
            <summary>Sets the stub of BufferedTokenStream.Seek(Int32 index)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.Setup">
            <summary>Sets the stub of CommonTokenStream.Setup()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.Setup01">
            <summary>Sets the stub of CommonTokenStream.Setup()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.SkipOffTokenChannels(System.Int32)">
            <summary>Sets the stub of CommonTokenStream.SkipOffTokenChannels(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.SkipOffTokenChannelsInt32">
            <summary>Sets the stub of CommonTokenStream.SkipOffTokenChannels(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.SkipOffTokenChannelsReverse(System.Int32)">
            <summary>Sets the stub of CommonTokenStream.SkipOffTokenChannelsReverse(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.SkipOffTokenChannelsReverseInt32">
            <summary>Sets the stub of CommonTokenStream.SkipOffTokenChannelsReverse(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.SourceNameGet">
            <summary>Sets the stub of BufferedTokenStream.get_SourceName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.Sync(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Sync(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.SyncInt32">
            <summary>Sets the stub of BufferedTokenStream.Sync(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.ToString">
            <summary>Sets the stub of BufferedTokenStream.ToString()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.ToString(System.Int32,System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.ToString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubCommonTokenStream.ToString(Antlr.Runtime.IToken,Antlr.Runtime.IToken)">
            <summary>Sets the stub of BufferedTokenStream.ToString(IToken start, IToken stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.ToString01">
            <summary>Sets the stub of BufferedTokenStream.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.ToStringITokenIToken">
            <summary>Sets the stub of BufferedTokenStream.ToString(IToken start, IToken stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.ToStringInt32Int32">
            <summary>Sets the stub of BufferedTokenStream.ToString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.TokenSourceGet">
            <summary>Sets the stub of CommonTokenStream.get_TokenSource()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubCommonTokenStream.TokenSourceSetITokenSource">
            <summary>Sets the stub of CommonTokenStream.set_TokenSource(ITokenSource value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCommonTokenStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCommonTokenStream.Count">
            <summary>Sets the stub of BufferedTokenStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCommonTokenStream.Index">
            <summary>Sets the stub of BufferedTokenStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCommonTokenStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCommonTokenStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCommonTokenStream.LastRealToken">
            <summary>Sets the stub of BufferedTokenStream.get_LastRealToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCommonTokenStream.LastToken">
            <summary>Sets the stub of BufferedTokenStream.get_LastToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCommonTokenStream.MaxLookBehind">
            <summary>Sets the stub of BufferedTokenStream.get_MaxLookBehind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCommonTokenStream.Range">
            <summary>Sets the stub of BufferedTokenStream.get_Range()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCommonTokenStream.SourceName">
            <summary>Sets the stub of BufferedTokenStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubCommonTokenStream.TokenSource">
            <summary>Sets the stub of CommonTokenStream.get_TokenSource()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubDFA">
            <summary>Stub type of Antlr.Runtime.DFA</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubDFA.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubDFA.#ctor(Antlr.Runtime.SpecialStateTransitionHandler)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubDFA.DebugRecognitionException(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of DFA.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubDFA.DebugRecognitionExceptionRecognitionException">
            <summary>Sets the stub of DFA.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubDFA.DescriptionGet">
            <summary>Sets the stub of DFA.get_Description()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubDFA.Error(Antlr.Runtime.NoViableAltException)">
            <summary>Sets the stub of DFA.Error(NoViableAltException nvae)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubDFA.ErrorNoViableAltException">
            <summary>Sets the stub of DFA.Error(NoViableAltException nvae)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubDFA.InitializeStub">
            <summary>Initializes a new instance of type StubDFA</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubDFA.NoViableAlt(System.Int32,Antlr.Runtime.IIntStream)">
            <summary>Sets the stub of DFA.NoViableAlt(Int32 s, IIntStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubDFA.NoViableAltInt32IIntStream">
            <summary>Sets the stub of DFA.NoViableAlt(Int32 s, IIntStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubDFA.Predict(Antlr.Runtime.IIntStream)">
            <summary>Sets the stub of DFA.Predict(IIntStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubDFA.PredictIIntStream">
            <summary>Sets the stub of DFA.Predict(IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubDFA.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubDFA.Description">
            <summary>Sets the stub of DFA.get_Description()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubDFA.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubDFA.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubEarlyExitException">
            <summary>Stub type of Antlr.Runtime.EarlyExitException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubEarlyExitException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubEarlyExitException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubEarlyExitException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubEarlyExitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubEarlyExitException.#ctor(System.Int32,Antlr.Runtime.IIntStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubEarlyExitException.#ctor(System.String,System.Int32,Antlr.Runtime.IIntStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubEarlyExitException.#ctor(System.String,System.Int32,Antlr.Runtime.IIntStream,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubEarlyExitException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubEarlyExitException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubEarlyExitException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubEarlyExitException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubEarlyExitException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubEarlyExitException.ExtractInformationFromTreeNodeStream(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubEarlyExitException.ExtractInformationFromTreeNodeStreamITreeNodeStream">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubEarlyExitException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubEarlyExitException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubEarlyExitException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubEarlyExitException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubEarlyExitException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubEarlyExitException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubEarlyExitException.InitializeStub">
            <summary>Initializes a new instance of type StubEarlyExitException</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubEarlyExitException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubEarlyExitException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubEarlyExitException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubEarlyExitException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubEarlyExitException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubEarlyExitException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubEarlyExitException.UnexpectedTypeGet">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubEarlyExitException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubEarlyExitException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubEarlyExitException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubEarlyExitException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubEarlyExitException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubEarlyExitException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubEarlyExitException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubEarlyExitException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubEarlyExitException.UnexpectedType">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubFailedPredicateException">
            <summary>Stub type of Antlr.Runtime.FailedPredicateException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubFailedPredicateException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubFailedPredicateException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubFailedPredicateException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubFailedPredicateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubFailedPredicateException.#ctor(Antlr.Runtime.IIntStream,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubFailedPredicateException.#ctor(System.String,Antlr.Runtime.IIntStream,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubFailedPredicateException.#ctor(System.String,Antlr.Runtime.IIntStream,System.String,System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubFailedPredicateException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubFailedPredicateException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubFailedPredicateException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubFailedPredicateException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubFailedPredicateException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubFailedPredicateException.ExtractInformationFromTreeNodeStream(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubFailedPredicateException.ExtractInformationFromTreeNodeStreamITreeNodeStream">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubFailedPredicateException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubFailedPredicateException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubFailedPredicateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubFailedPredicateException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubFailedPredicateException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubFailedPredicateException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubFailedPredicateException.InitializeStub">
            <summary>Initializes a new instance of type StubFailedPredicateException</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubFailedPredicateException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubFailedPredicateException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubFailedPredicateException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubFailedPredicateException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubFailedPredicateException.ToString">
            <summary>Sets the stub of FailedPredicateException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubFailedPredicateException.ToString01">
            <summary>Sets the stub of FailedPredicateException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubFailedPredicateException.UnexpectedTypeGet">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubFailedPredicateException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubFailedPredicateException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubFailedPredicateException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubFailedPredicateException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubFailedPredicateException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubFailedPredicateException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubFailedPredicateException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubFailedPredicateException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubFailedPredicateException.UnexpectedType">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubIAstRuleReturnScope">
            <summary>Stub type of Antlr.Runtime.IAstRuleReturnScope</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIAstRuleReturnScope.#ctor">
            <summary>Initializes a new instance of type StubIAstRuleReturnScope</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIAstRuleReturnScope.StartGet">
            <summary>Sets the stub of IRuleReturnScope.get_Start()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIAstRuleReturnScope.StopGet">
            <summary>Sets the stub of IRuleReturnScope.get_Stop()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIAstRuleReturnScope.TreeGet">
            <summary>Sets the stub of IAstRuleReturnScope.get_Tree()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIAstRuleReturnScope.a3r::Antlr#Runtime#IRuleReturnScope#Start">
            <summary>Sets the stub of IRuleReturnScope.get_Start()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIAstRuleReturnScope.a3r::Antlr#Runtime#IRuleReturnScope#Stop">
            <summary>Sets the stub of IRuleReturnScope.get_Stop()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIAstRuleReturnScope.a3r::Antlr#Runtime#IAstRuleReturnScope#Tree">
            <summary>Sets the stub of IAstRuleReturnScope.get_Tree()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubIAstRuleReturnScope`1">
            <summary>Stub type of Antlr.Runtime.IAstRuleReturnScope`1</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIAstRuleReturnScope`1.#ctor">
            <summary>Initializes a new instance of type StubIAstRuleReturnScope</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIAstRuleReturnScope`1.StartGet">
            <summary>Sets the stub of IRuleReturnScope.get_Start()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIAstRuleReturnScope`1.StopGet">
            <summary>Sets the stub of IRuleReturnScope.get_Stop()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIAstRuleReturnScope`1.TreeGet">
            <summary>Sets the stub of IAstRuleReturnScope`1.get_Tree()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIAstRuleReturnScope`1.TreeGet01">
            <summary>Sets the stub of IAstRuleReturnScope.get_Tree()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIAstRuleReturnScope`1.a3r::Antlr#Runtime#IRuleReturnScope#Start">
            <summary>Sets the stub of IRuleReturnScope.get_Start()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIAstRuleReturnScope`1.a3r::Antlr#Runtime#IRuleReturnScope#Stop">
            <summary>Sets the stub of IRuleReturnScope.get_Stop()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIAstRuleReturnScope`1.a3r::Antlr#Runtime#IAstRuleReturnScope#Tree">
            <summary>Sets the stub of IAstRuleReturnScope.get_Tree()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIAstRuleReturnScope`1.a3r::Antlr#Runtime#IAstRuleReturnScope{TAstLabel}#Tree">
            <summary>Sets the stub of IAstRuleReturnScope`1.get_Tree()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubICharStream">
            <summary>Stub type of Antlr.Runtime.ICharStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubICharStream.#ctor">
            <summary>Initializes a new instance of type StubICharStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubICharStream.a3r::Antlr#Runtime#ICharStream#LT(System.Int32)">
            <summary>Sets the stub of ICharStream.LT(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubICharStream.a3r::Antlr#Runtime#ICharStream#Substring(System.Int32,System.Int32)">
            <summary>Sets the stub of ICharStream.Substring(Int32 start, Int32 length)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubICharStream.a3r::Antlr#Runtime#IIntStream#Consume">
            <summary>Sets the stub of IIntStream.Consume()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubICharStream.a3r::Antlr#Runtime#IIntStream#LA(System.Int32)">
            <summary>Sets the stub of IIntStream.LA(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubICharStream.a3r::Antlr#Runtime#IIntStream#Mark">
            <summary>Sets the stub of IIntStream.Mark()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubICharStream.a3r::Antlr#Runtime#IIntStream#Release(System.Int32)">
            <summary>Sets the stub of IIntStream.Release(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubICharStream.a3r::Antlr#Runtime#IIntStream#Rewind">
            <summary>Sets the stub of IIntStream.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubICharStream.a3r::Antlr#Runtime#IIntStream#Rewind(System.Int32)">
            <summary>Sets the stub of IIntStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubICharStream.a3r::Antlr#Runtime#IIntStream#Seek(System.Int32)">
            <summary>Sets the stub of IIntStream.Seek(Int32 index)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubICharStream.AttachBackingFieldToCharPositionInLine">
            <summary>Attaches delegates to emulate StubICharStream.CharPositionInLine as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubICharStream.AttachBackingFieldToLine">
            <summary>Attaches delegates to emulate StubICharStream.Line as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubICharStream.CharPositionInLineGet">
            <summary>Sets the stub of ICharStream.get_CharPositionInLine()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubICharStream.CharPositionInLineSetInt32">
            <summary>Sets the stub of ICharStream.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubICharStream.Consume">
            <summary>Sets the stub of IIntStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubICharStream.CountGet">
            <summary>Sets the stub of IIntStream.get_Count()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubICharStream.IndexGet">
            <summary>Sets the stub of IIntStream.get_Index()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubICharStream.LAInt32">
            <summary>Sets the stub of IIntStream.LA(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubICharStream.LTInt32">
            <summary>Sets the stub of ICharStream.LT(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubICharStream.LineGet">
            <summary>Sets the stub of ICharStream.get_Line()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubICharStream.LineSetInt32">
            <summary>Sets the stub of ICharStream.set_Line(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubICharStream.Mark">
            <summary>Sets the stub of IIntStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubICharStream.ReleaseInt32">
            <summary>Sets the stub of IIntStream.Release(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubICharStream.Rewind">
            <summary>Sets the stub of IIntStream.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubICharStream.RewindInt32">
            <summary>Sets the stub of IIntStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubICharStream.SeekInt32">
            <summary>Sets the stub of IIntStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubICharStream.SourceNameGet">
            <summary>Sets the stub of IIntStream.get_SourceName()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubICharStream.SubstringInt32Int32">
            <summary>Sets the stub of ICharStream.Substring(Int32 start, Int32 length)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubICharStream.a3r::Antlr#Runtime#ICharStream#CharPositionInLine">
            <summary>Sets the stub of ICharStream.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubICharStream.a3r::Antlr#Runtime#IIntStream#Count">
            <summary>Sets the stub of IIntStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubICharStream.a3r::Antlr#Runtime#IIntStream#Index">
            <summary>Sets the stub of IIntStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubICharStream.a3r::Antlr#Runtime#ICharStream#Line">
            <summary>Sets the stub of ICharStream.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubICharStream.a3r::Antlr#Runtime#IIntStream#SourceName">
            <summary>Sets the stub of IIntStream.get_SourceName()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubIIntStream">
            <summary>Stub type of Antlr.Runtime.IIntStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIIntStream.#ctor">
            <summary>Initializes a new instance of type StubIIntStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIIntStream.a3r::Antlr#Runtime#IIntStream#Consume">
            <summary>Sets the stub of IIntStream.Consume()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIIntStream.a3r::Antlr#Runtime#IIntStream#LA(System.Int32)">
            <summary>Sets the stub of IIntStream.LA(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIIntStream.a3r::Antlr#Runtime#IIntStream#Mark">
            <summary>Sets the stub of IIntStream.Mark()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIIntStream.a3r::Antlr#Runtime#IIntStream#Release(System.Int32)">
            <summary>Sets the stub of IIntStream.Release(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIIntStream.a3r::Antlr#Runtime#IIntStream#Rewind">
            <summary>Sets the stub of IIntStream.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIIntStream.a3r::Antlr#Runtime#IIntStream#Rewind(System.Int32)">
            <summary>Sets the stub of IIntStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIIntStream.a3r::Antlr#Runtime#IIntStream#Seek(System.Int32)">
            <summary>Sets the stub of IIntStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIIntStream.Consume">
            <summary>Sets the stub of IIntStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIIntStream.CountGet">
            <summary>Sets the stub of IIntStream.get_Count()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIIntStream.IndexGet">
            <summary>Sets the stub of IIntStream.get_Index()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIIntStream.LAInt32">
            <summary>Sets the stub of IIntStream.LA(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIIntStream.Mark">
            <summary>Sets the stub of IIntStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIIntStream.ReleaseInt32">
            <summary>Sets the stub of IIntStream.Release(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIIntStream.Rewind">
            <summary>Sets the stub of IIntStream.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIIntStream.RewindInt32">
            <summary>Sets the stub of IIntStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIIntStream.SeekInt32">
            <summary>Sets the stub of IIntStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIIntStream.SourceNameGet">
            <summary>Sets the stub of IIntStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIIntStream.a3r::Antlr#Runtime#IIntStream#Count">
            <summary>Sets the stub of IIntStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIIntStream.a3r::Antlr#Runtime#IIntStream#Index">
            <summary>Sets the stub of IIntStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIIntStream.a3r::Antlr#Runtime#IIntStream#SourceName">
            <summary>Sets the stub of IIntStream.get_SourceName()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubIRuleReturnScope">
            <summary>Stub type of Antlr.Runtime.IRuleReturnScope</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIRuleReturnScope.#ctor">
            <summary>Initializes a new instance of type StubIRuleReturnScope</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIRuleReturnScope.StartGet">
            <summary>Sets the stub of IRuleReturnScope.get_Start()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIRuleReturnScope.StopGet">
            <summary>Sets the stub of IRuleReturnScope.get_Stop()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIRuleReturnScope.a3r::Antlr#Runtime#IRuleReturnScope#Start">
            <summary>Sets the stub of IRuleReturnScope.get_Start()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIRuleReturnScope.a3r::Antlr#Runtime#IRuleReturnScope#Stop">
            <summary>Sets the stub of IRuleReturnScope.get_Stop()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubIRuleReturnScope`1">
            <summary>Stub type of Antlr.Runtime.IRuleReturnScope`1</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIRuleReturnScope`1.#ctor">
            <summary>Initializes a new instance of type StubIRuleReturnScope</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIRuleReturnScope`1.StartGet">
            <summary>Sets the stub of IRuleReturnScope`1.get_Start()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIRuleReturnScope`1.StartGet01">
            <summary>Sets the stub of IRuleReturnScope.get_Start()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIRuleReturnScope`1.StopGet">
            <summary>Sets the stub of IRuleReturnScope`1.get_Stop()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIRuleReturnScope`1.StopGet01">
            <summary>Sets the stub of IRuleReturnScope.get_Stop()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIRuleReturnScope`1.a3r::Antlr#Runtime#IRuleReturnScope{TLabel}#Start">
            <summary>Sets the stub of IRuleReturnScope`1.get_Start()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIRuleReturnScope`1.a3r::Antlr#Runtime#IRuleReturnScope#Start">
            <summary>Sets the stub of IRuleReturnScope.get_Start()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIRuleReturnScope`1.a3r::Antlr#Runtime#IRuleReturnScope#Stop">
            <summary>Sets the stub of IRuleReturnScope.get_Stop()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIRuleReturnScope`1.a3r::Antlr#Runtime#IRuleReturnScope{TLabel}#Stop">
            <summary>Sets the stub of IRuleReturnScope`1.get_Stop()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubIToken">
            <summary>Stub type of Antlr.Runtime.IToken</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIToken.#ctor">
            <summary>Initializes a new instance of type StubIToken</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIToken.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubIToken.Channel as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIToken.AttachBackingFieldToCharPositionInLine">
            <summary>Attaches delegates to emulate StubIToken.CharPositionInLine as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIToken.AttachBackingFieldToInputStream">
            <summary>Attaches delegates to emulate StubIToken.InputStream as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIToken.AttachBackingFieldToLine">
            <summary>Attaches delegates to emulate StubIToken.Line as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIToken.AttachBackingFieldToStartIndex">
            <summary>Attaches delegates to emulate StubIToken.StartIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIToken.AttachBackingFieldToStopIndex">
            <summary>Attaches delegates to emulate StubIToken.StopIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIToken.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubIToken.Text as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIToken.AttachBackingFieldToTokenIndex">
            <summary>Attaches delegates to emulate StubIToken.TokenIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubIToken.AttachBackingFieldToType">
            <summary>Attaches delegates to emulate StubIToken.Type as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.ChannelGet">
            <summary>Sets the stub of IToken.get_Channel()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.ChannelSetInt32">
            <summary>Sets the stub of IToken.set_Channel(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.CharPositionInLineGet">
            <summary>Sets the stub of IToken.get_CharPositionInLine()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.CharPositionInLineSetInt32">
            <summary>Sets the stub of IToken.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.InputStreamGet">
            <summary>Sets the stub of IToken.get_InputStream()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.InputStreamSetICharStream">
            <summary>Sets the stub of IToken.set_InputStream(ICharStream value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.LineGet">
            <summary>Sets the stub of IToken.get_Line()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.LineSetInt32">
            <summary>Sets the stub of IToken.set_Line(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.StartIndexGet">
            <summary>Sets the stub of IToken.get_StartIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.StartIndexSetInt32">
            <summary>Sets the stub of IToken.set_StartIndex(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.StopIndexGet">
            <summary>Sets the stub of IToken.get_StopIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.StopIndexSetInt32">
            <summary>Sets the stub of IToken.set_StopIndex(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.TextGet">
            <summary>Sets the stub of IToken.get_Text()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.TextSetString">
            <summary>Sets the stub of IToken.set_Text(String value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.TokenIndexGet">
            <summary>Sets the stub of IToken.get_TokenIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.TokenIndexSetInt32">
            <summary>Sets the stub of IToken.set_TokenIndex(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.TypeGet">
            <summary>Sets the stub of IToken.get_Type()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubIToken.TypeSetInt32">
            <summary>Sets the stub of IToken.set_Type(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIToken.a3r::Antlr#Runtime#IToken#Channel">
            <summary>Sets the stub of IToken.get_Channel()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIToken.a3r::Antlr#Runtime#IToken#CharPositionInLine">
            <summary>Sets the stub of IToken.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIToken.a3r::Antlr#Runtime#IToken#InputStream">
            <summary>Sets the stub of IToken.get_InputStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIToken.a3r::Antlr#Runtime#IToken#Line">
            <summary>Sets the stub of IToken.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIToken.a3r::Antlr#Runtime#IToken#StartIndex">
            <summary>Sets the stub of IToken.get_StartIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIToken.a3r::Antlr#Runtime#IToken#StopIndex">
            <summary>Sets the stub of IToken.get_StopIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIToken.a3r::Antlr#Runtime#IToken#Text">
            <summary>Sets the stub of IToken.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIToken.a3r::Antlr#Runtime#IToken#TokenIndex">
            <summary>Sets the stub of IToken.get_TokenIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubIToken.a3r::Antlr#Runtime#IToken#Type">
            <summary>Sets the stub of IToken.get_Type()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubITokenSource">
            <summary>Stub type of Antlr.Runtime.ITokenSource</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubITokenSource.#ctor">
            <summary>Initializes a new instance of type StubITokenSource</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubITokenSource.a3r::Antlr#Runtime#ITokenSource#NextToken">
            <summary>Sets the stub of ITokenSource.NextToken()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenSource.NextToken">
            <summary>Sets the stub of ITokenSource.NextToken()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenSource.SourceNameGet">
            <summary>Sets the stub of ITokenSource.get_SourceName()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenSource.TokenNamesGet">
            <summary>Sets the stub of ITokenSource.get_TokenNames()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubITokenSource.a3r::Antlr#Runtime#ITokenSource#SourceName">
            <summary>Sets the stub of ITokenSource.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubITokenSource.a3r::Antlr#Runtime#ITokenSource#TokenNames">
            <summary>Sets the stub of ITokenSource.get_TokenNames()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubITokenStream">
            <summary>Stub type of Antlr.Runtime.ITokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubITokenStream.#ctor">
            <summary>Initializes a new instance of type StubITokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubITokenStream.a3r::Antlr#Runtime#IIntStream#Consume">
            <summary>Sets the stub of IIntStream.Consume()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubITokenStream.a3r::Antlr#Runtime#IIntStream#LA(System.Int32)">
            <summary>Sets the stub of IIntStream.LA(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubITokenStream.a3r::Antlr#Runtime#IIntStream#Mark">
            <summary>Sets the stub of IIntStream.Mark()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubITokenStream.a3r::Antlr#Runtime#IIntStream#Release(System.Int32)">
            <summary>Sets the stub of IIntStream.Release(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubITokenStream.a3r::Antlr#Runtime#IIntStream#Rewind">
            <summary>Sets the stub of IIntStream.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubITokenStream.a3r::Antlr#Runtime#IIntStream#Rewind(System.Int32)">
            <summary>Sets the stub of IIntStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubITokenStream.a3r::Antlr#Runtime#IIntStream#Seek(System.Int32)">
            <summary>Sets the stub of IIntStream.Seek(Int32 index)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubITokenStream.a3r::Antlr#Runtime#ITokenStream#Get(System.Int32)">
            <summary>Sets the stub of ITokenStream.Get(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubITokenStream.a3r::Antlr#Runtime#ITokenStream#LT(System.Int32)">
            <summary>Sets the stub of ITokenStream.LT(Int32 k)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubITokenStream.a3r::Antlr#Runtime#ITokenStream#ToString(Antlr.Runtime.IToken,Antlr.Runtime.IToken)">
            <summary>Sets the stub of ITokenStream.ToString(IToken start, IToken stop)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubITokenStream.a3r::Antlr#Runtime#ITokenStream#ToString(System.Int32,System.Int32)">
            <summary>Sets the stub of ITokenStream.ToString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStream.Consume">
            <summary>Sets the stub of IIntStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStream.CountGet">
            <summary>Sets the stub of IIntStream.get_Count()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStream.GetInt32">
            <summary>Sets the stub of ITokenStream.Get(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStream.IndexGet">
            <summary>Sets the stub of IIntStream.get_Index()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStream.LAInt32">
            <summary>Sets the stub of IIntStream.LA(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStream.LTInt32">
            <summary>Sets the stub of ITokenStream.LT(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStream.Mark">
            <summary>Sets the stub of IIntStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStream.RangeGet">
            <summary>Sets the stub of ITokenStream.get_Range()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStream.ReleaseInt32">
            <summary>Sets the stub of IIntStream.Release(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStream.Rewind">
            <summary>Sets the stub of IIntStream.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStream.RewindInt32">
            <summary>Sets the stub of IIntStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStream.SeekInt32">
            <summary>Sets the stub of IIntStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStream.SourceNameGet">
            <summary>Sets the stub of IIntStream.get_SourceName()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStream.ToStringITokenIToken">
            <summary>Sets the stub of ITokenStream.ToString(IToken start, IToken stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStream.ToStringInt32Int32">
            <summary>Sets the stub of ITokenStream.ToString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStream.TokenSourceGet">
            <summary>Sets the stub of ITokenStream.get_TokenSource()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubITokenStream.a3r::Antlr#Runtime#IIntStream#Count">
            <summary>Sets the stub of IIntStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubITokenStream.a3r::Antlr#Runtime#IIntStream#Index">
            <summary>Sets the stub of IIntStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubITokenStream.a3r::Antlr#Runtime#ITokenStream#Range">
            <summary>Sets the stub of ITokenStream.get_Range()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubITokenStream.a3r::Antlr#Runtime#IIntStream#SourceName">
            <summary>Sets the stub of IIntStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubITokenStream.a3r::Antlr#Runtime#ITokenStream#TokenSource">
            <summary>Sets the stub of ITokenStream.get_TokenSource()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubITokenStreamInformation">
            <summary>Stub type of Antlr.Runtime.ITokenStreamInformation</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubITokenStreamInformation.#ctor">
            <summary>Initializes a new instance of type StubITokenStreamInformation</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStreamInformation.LastRealTokenGet">
            <summary>Sets the stub of ITokenStreamInformation.get_LastRealToken()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStreamInformation.LastTokenGet">
            <summary>Sets the stub of ITokenStreamInformation.get_LastToken()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubITokenStreamInformation.MaxLookBehindGet">
            <summary>Sets the stub of ITokenStreamInformation.get_MaxLookBehind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubITokenStreamInformation.a3r::Antlr#Runtime#ITokenStreamInformation#LastRealToken">
            <summary>Sets the stub of ITokenStreamInformation.get_LastRealToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubITokenStreamInformation.a3r::Antlr#Runtime#ITokenStreamInformation#LastToken">
            <summary>Sets the stub of ITokenStreamInformation.get_LastToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubITokenStreamInformation.a3r::Antlr#Runtime#ITokenStreamInformation#MaxLookBehind">
            <summary>Sets the stub of ITokenStreamInformation.get_MaxLookBehind()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream">
            <summary>Stub type of Antlr.Runtime.LegacyCommonTokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.#ctor(Antlr.Runtime.ITokenSource)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.#ctor(Antlr.Runtime.ITokenSource,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.AttachBackingFieldToRange">
            <summary>Attaches delegates to emulate StubLegacyCommonTokenStream.Range as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.Consume">
            <summary>Sets the stub of LegacyCommonTokenStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.Consume01">
            <summary>Sets the stub of LegacyCommonTokenStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.CountGet">
            <summary>Sets the stub of LegacyCommonTokenStream.get_Count()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.DiscardTokenType(System.Int32)">
            <summary>Sets the stub of LegacyCommonTokenStream.DiscardTokenType(Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.DiscardTokenTypeInt32">
            <summary>Sets the stub of LegacyCommonTokenStream.DiscardTokenType(Int32 ttype)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.FillBuffer">
            <summary>Sets the stub of LegacyCommonTokenStream.FillBuffer()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.FillBuffer01">
            <summary>Sets the stub of LegacyCommonTokenStream.FillBuffer()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.Get(System.Int32)">
            <summary>Sets the stub of LegacyCommonTokenStream.Get(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.GetInt32">
            <summary>Sets the stub of LegacyCommonTokenStream.Get(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.GetTokens">
            <summary>Sets the stub of LegacyCommonTokenStream.GetTokens()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.GetTokens(System.Int32,System.Int32)">
            <summary>Sets the stub of LegacyCommonTokenStream.GetTokens(Int32 start, Int32 stop)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.GetTokens(System.Int32,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of LegacyCommonTokenStream.GetTokens(Int32 start, Int32 stop, BitSet types)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.GetTokens(System.Int32,System.Int32,System.Collections.Generic.IList{System.Int32})">
            <summary>Sets the stub of LegacyCommonTokenStream.GetTokens(Int32 start, Int32 stop, IList`1&lt;Int32&gt; types)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.GetTokens(System.Int32,System.Int32,System.Int32)">
            <summary>Sets the stub of LegacyCommonTokenStream.GetTokens(Int32 start, Int32 stop, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.GetTokens01">
            <summary>Sets the stub of LegacyCommonTokenStream.GetTokens()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.GetTokensInt32Int32">
            <summary>Sets the stub of LegacyCommonTokenStream.GetTokens(Int32 start, Int32 stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.GetTokensInt32Int32BitSet">
            <summary>Sets the stub of LegacyCommonTokenStream.GetTokens(Int32 start, Int32 stop, BitSet types)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.GetTokensInt32Int32IListOfInt32">
            <summary>Sets the stub of LegacyCommonTokenStream.GetTokens(Int32 start, Int32 stop, IList`1&lt;Int32&gt; types)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.GetTokensInt32Int32Int32">
            <summary>Sets the stub of LegacyCommonTokenStream.GetTokens(Int32 start, Int32 stop, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.IndexGet">
            <summary>Sets the stub of LegacyCommonTokenStream.get_Index()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.InitializeStub">
            <summary>Initializes a new instance of type StubLegacyCommonTokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.LA(System.Int32)">
            <summary>Sets the stub of LegacyCommonTokenStream.LA(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.LAInt32">
            <summary>Sets the stub of LegacyCommonTokenStream.LA(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.LB(System.Int32)">
            <summary>Sets the stub of LegacyCommonTokenStream.LB(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.LBInt32">
            <summary>Sets the stub of LegacyCommonTokenStream.LB(Int32 k)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.LT(System.Int32)">
            <summary>Sets the stub of LegacyCommonTokenStream.LT(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.LTInt32">
            <summary>Sets the stub of LegacyCommonTokenStream.LT(Int32 k)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.Mark">
            <summary>Sets the stub of LegacyCommonTokenStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.Mark01">
            <summary>Sets the stub of LegacyCommonTokenStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.RangeGet">
            <summary>Sets the stub of LegacyCommonTokenStream.get_Range()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.RangeSetInt32">
            <summary>Sets the stub of LegacyCommonTokenStream.set_Range(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.Release(System.Int32)">
            <summary>Sets the stub of LegacyCommonTokenStream.Release(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.ReleaseInt32">
            <summary>Sets the stub of LegacyCommonTokenStream.Release(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.Reset">
            <summary>Sets the stub of LegacyCommonTokenStream.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.Reset01">
            <summary>Sets the stub of LegacyCommonTokenStream.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.Rewind">
            <summary>Sets the stub of LegacyCommonTokenStream.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.Rewind(System.Int32)">
            <summary>Sets the stub of LegacyCommonTokenStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.Rewind01">
            <summary>Sets the stub of LegacyCommonTokenStream.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.RewindInt32">
            <summary>Sets the stub of LegacyCommonTokenStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.Seek(System.Int32)">
            <summary>Sets the stub of LegacyCommonTokenStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.SeekInt32">
            <summary>Sets the stub of LegacyCommonTokenStream.Seek(Int32 index)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.SetDiscardOffChannelTokens(System.Boolean)">
            <summary>Sets the stub of LegacyCommonTokenStream.SetDiscardOffChannelTokens(Boolean discardOffChannelTokens)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.SetDiscardOffChannelTokensBoolean">
            <summary>Sets the stub of LegacyCommonTokenStream.SetDiscardOffChannelTokens(Boolean discardOffChannelTokens)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.SetTokenSource(Antlr.Runtime.ITokenSource)">
            <summary>Sets the stub of LegacyCommonTokenStream.SetTokenSource(ITokenSource tokenSource)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.SetTokenSourceITokenSource">
            <summary>Sets the stub of LegacyCommonTokenStream.SetTokenSource(ITokenSource tokenSource)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.SetTokenTypeChannel(System.Int32,System.Int32)">
            <summary>Sets the stub of LegacyCommonTokenStream.SetTokenTypeChannel(Int32 ttype, Int32 channel)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.SetTokenTypeChannelInt32Int32">
            <summary>Sets the stub of LegacyCommonTokenStream.SetTokenTypeChannel(Int32 ttype, Int32 channel)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.SkipOffTokenChannels(System.Int32)">
            <summary>Sets the stub of LegacyCommonTokenStream.SkipOffTokenChannels(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.SkipOffTokenChannelsInt32">
            <summary>Sets the stub of LegacyCommonTokenStream.SkipOffTokenChannels(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.SkipOffTokenChannelsReverse(System.Int32)">
            <summary>Sets the stub of LegacyCommonTokenStream.SkipOffTokenChannelsReverse(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.SkipOffTokenChannelsReverseInt32">
            <summary>Sets the stub of LegacyCommonTokenStream.SkipOffTokenChannelsReverse(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.SourceNameGet">
            <summary>Sets the stub of LegacyCommonTokenStream.get_SourceName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.ToString">
            <summary>Sets the stub of LegacyCommonTokenStream.ToString()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.ToString(Antlr.Runtime.IToken,Antlr.Runtime.IToken)">
            <summary>Sets the stub of LegacyCommonTokenStream.ToString(IToken start, IToken stop)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.ToString(System.Int32,System.Int32)">
            <summary>Sets the stub of LegacyCommonTokenStream.ToString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.ToString01">
            <summary>Sets the stub of LegacyCommonTokenStream.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.ToStringITokenIToken">
            <summary>Sets the stub of LegacyCommonTokenStream.ToString(IToken start, IToken stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.ToStringInt32Int32">
            <summary>Sets the stub of LegacyCommonTokenStream.ToString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.TokenSourceGet">
            <summary>Sets the stub of LegacyCommonTokenStream.get_TokenSource()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.Count">
            <summary>Sets the stub of LegacyCommonTokenStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.Index">
            <summary>Sets the stub of LegacyCommonTokenStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.Range">
            <summary>Sets the stub of LegacyCommonTokenStream.get_Range()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.SourceName">
            <summary>Sets the stub of LegacyCommonTokenStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLegacyCommonTokenStream.TokenSource">
            <summary>Sets the stub of LegacyCommonTokenStream.get_TokenSource()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubLexer">
            <summary>Stub type of Antlr.Runtime.Lexer</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.#ctor(Antlr.Runtime.ICharStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.#ctor(Antlr.Runtime.ICharStream,Antlr.Runtime.RecognizerSharedState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.AlreadyParsedRule(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.AlreadyParsedRuleIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.AttachBackingFieldToBacktrackingLevel">
            <summary>Attaches delegates to emulate StubLexer.BacktrackingLevel as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.AttachBackingFieldToCharStream">
            <summary>Attaches delegates to emulate StubLexer.CharStream as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.BacktrackingLevelGet">
            <summary>Sets the stub of BaseRecognizer.get_BacktrackingLevel()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.BacktrackingLevelSetInt32">
            <summary>Sets the stub of BaseRecognizer.set_BacktrackingLevel(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.BeginResync">
            <summary>Sets the stub of BaseRecognizer.BeginResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.BeginResync01">
            <summary>Sets the stub of BaseRecognizer.BeginResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.CharIndexGet">
            <summary>Sets the stub of Lexer.get_CharIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.CharStreamGet">
            <summary>Sets the stub of Lexer.get_CharStream()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.CharStreamSetICharStream">
            <summary>Sets the stub of Lexer.set_CharStream(ICharStream value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.CombineFollows(System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.CombineFollows(Boolean exact)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.CombineFollowsBoolean">
            <summary>Sets the stub of BaseRecognizer.CombineFollows(Boolean exact)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.ComputeContextSensitiveRuleFOLLOW">
            <summary>Sets the stub of BaseRecognizer.ComputeContextSensitiveRuleFOLLOW()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.ComputeContextSensitiveRuleFOLLOW01">
            <summary>Sets the stub of BaseRecognizer.ComputeContextSensitiveRuleFOLLOW()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.ComputeErrorRecoverySet">
            <summary>Sets the stub of BaseRecognizer.ComputeErrorRecoverySet()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.ComputeErrorRecoverySet01">
            <summary>Sets the stub of BaseRecognizer.ComputeErrorRecoverySet()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.ConsumeUntil(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.ConsumeUntil(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.ConsumeUntilIIntStreamBitSet">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.ConsumeUntilIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.DebugBeginBacktrack(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugBeginBacktrack(Int32 level)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.DebugBeginBacktrackInt32">
            <summary>Sets the stub of BaseRecognizer.DebugBeginBacktrack(Int32 level)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.DebugEndBacktrack(System.Int32,System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.DebugEndBacktrackInt32Boolean">
            <summary>Sets the stub of BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.DebugEnterAlt(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterAlt(Int32 alt)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.DebugEnterAltInt32">
            <summary>Sets the stub of BaseRecognizer.DebugEnterAlt(Int32 alt)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.DebugEnterDecision(System.Int32,System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.DebugEnterDecisionInt32Boolean">
            <summary>Sets the stub of BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.DebugEnterRule(System.String,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.DebugEnterRuleStringString">
            <summary>Sets the stub of BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.DebugEnterSubRule(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.DebugEnterSubRuleInt32">
            <summary>Sets the stub of BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.DebugExitDecision(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugExitDecision(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.DebugExitDecisionInt32">
            <summary>Sets the stub of BaseRecognizer.DebugExitDecision(Int32 decisionNumber)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.DebugExitRule(System.String,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.DebugExitRuleStringString">
            <summary>Sets the stub of BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.DebugExitSubRule(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugExitSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.DebugExitSubRuleInt32">
            <summary>Sets the stub of BaseRecognizer.DebugExitSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.DebugListenerGet">
            <summary>Sets the stub of BaseRecognizer.get_DebugListener()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.DebugLocation(System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.DebugLocationInt32Int32">
            <summary>Sets the stub of BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.DebugRecognitionException(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.DebugRecognitionExceptionRecognitionException">
            <summary>Sets the stub of BaseRecognizer.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.DebugSemanticPredicate(System.Boolean,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.DebugSemanticPredicateBooleanString">
            <summary>Sets the stub of BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.DisplayRecognitionError(System.String[],Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.DisplayRecognitionErrorStringArrayRecognitionException">
            <summary>Sets the stub of BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.Emit(Antlr.Runtime.IToken)">
            <summary>Sets the stub of Lexer.Emit(IToken token)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.Emit">
            <summary>Sets the stub of Lexer.Emit()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.Emit01">
            <summary>Sets the stub of Lexer.Emit()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.EmitErrorMessage(System.String)">
            <summary>Sets the stub of BaseRecognizer.EmitErrorMessage(String msg)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.EmitErrorMessageString">
            <summary>Sets the stub of BaseRecognizer.EmitErrorMessage(String msg)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.EmitIToken">
            <summary>Sets the stub of Lexer.Emit(IToken token)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.EndResync">
            <summary>Sets the stub of BaseRecognizer.EndResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.EndResync01">
            <summary>Sets the stub of BaseRecognizer.EndResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.FailedGet">
            <summary>Sets the stub of BaseRecognizer.get_Failed()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.GetCharErrorDisplay(System.Int32)">
            <summary>Sets the stub of Lexer.GetCharErrorDisplay(Int32 c)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.GetCharErrorDisplayInt32">
            <summary>Sets the stub of Lexer.GetCharErrorDisplay(Int32 c)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.GetCurrentInputSymbol(Antlr.Runtime.IIntStream)">
            <summary>Sets the stub of BaseRecognizer.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.GetCurrentInputSymbolIIntStream">
            <summary>Sets the stub of BaseRecognizer.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.GetErrorHeader(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.GetErrorHeader(RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.GetErrorHeaderRecognitionException">
            <summary>Sets the stub of BaseRecognizer.GetErrorHeader(RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.GetErrorMessage(Antlr.Runtime.RecognitionException,System.String[])">
            <summary>Sets the stub of Lexer.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.GetErrorMessageRecognitionExceptionStringArray">
            <summary>Sets the stub of Lexer.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.GetMissingSymbol(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.GetMissingSymbolIIntStreamRecognitionExceptionInt32BitSet">
            <summary>Sets the stub of BaseRecognizer.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.GetRuleMemoization(System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.GetRuleMemoizationCacheSize">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoizationCacheSize()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.GetRuleMemoizationCacheSize01">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoizationCacheSize()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.GetRuleMemoizationInt32Int32">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.GetTokenErrorDisplay(Antlr.Runtime.IToken)">
            <summary>Sets the stub of BaseRecognizer.GetTokenErrorDisplay(IToken t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.GetTokenErrorDisplayIToken">
            <summary>Sets the stub of BaseRecognizer.GetTokenErrorDisplay(IToken t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.GrammarFileNameGet">
            <summary>Sets the stub of BaseRecognizer.get_GrammarFileName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.InitDFAs">
            <summary>Sets the stub of BaseRecognizer.InitDFAs()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.InitDFAs01">
            <summary>Sets the stub of BaseRecognizer.InitDFAs()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.InitializeStub">
            <summary>Initializes a new instance of type StubLexer</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.MTokens">
            <summary>Sets the stub of Lexer.mTokens()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.Match(System.String)">
            <summary>Sets the stub of Lexer.Match(String s)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.Match(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.Match(System.Int32)">
            <summary>Sets the stub of Lexer.Match(Int32 c)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.MatchAny">
            <summary>Sets the stub of Lexer.MatchAny()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.MatchAny(Antlr.Runtime.IIntStream)">
            <summary>Sets the stub of BaseRecognizer.MatchAny(IIntStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.MatchAny01">
            <summary>Sets the stub of Lexer.MatchAny()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.MatchAnyIIntStream">
            <summary>Sets the stub of BaseRecognizer.MatchAny(IIntStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.MatchIIntStreamInt32BitSet">
            <summary>Sets the stub of BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.MatchInt32">
            <summary>Sets the stub of Lexer.Match(Int32 c)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.MatchRange(System.Int32,System.Int32)">
            <summary>Sets the stub of Lexer.MatchRange(Int32 a, Int32 b)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.MatchRangeInt32Int32">
            <summary>Sets the stub of Lexer.MatchRange(Int32 a, Int32 b)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.MatchString">
            <summary>Sets the stub of Lexer.Match(String s)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.Memoize(Antlr.Runtime.IIntStream,System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.MemoizeIIntStreamInt32Int32">
            <summary>Sets the stub of BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.MismatchIsMissingToken(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.MismatchIsMissingTokenIIntStreamBitSet">
            <summary>Sets the stub of BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.MismatchIsUnwantedToken(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.MismatchIsUnwantedTokenIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.NextToken">
            <summary>Sets the stub of Lexer.NextToken()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.NextToken01">
            <summary>Sets the stub of Lexer.NextToken()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.NumberOfSyntaxErrorsGet">
            <summary>Sets the stub of BaseRecognizer.get_NumberOfSyntaxErrors()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.Recover(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of Lexer.Recover(RecognitionException re)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.Recover(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.Recover(IIntStream input, RecognitionException re)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.RecoverFromMismatchedSet(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.RecoverFromMismatchedSetIIntStreamRecognitionExceptionBitSet">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.RecoverFromMismatchedToken(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.RecoverFromMismatchedTokenIIntStreamInt32BitSet">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.RecoverIIntStreamRecognitionException">
            <summary>Sets the stub of BaseRecognizer.Recover(IIntStream input, RecognitionException re)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.RecoverRecognitionException">
            <summary>Sets the stub of Lexer.Recover(RecognitionException re)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.ReportError(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of Lexer.ReportError(RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.ReportErrorRecognitionException">
            <summary>Sets the stub of Lexer.ReportError(RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.Reset">
            <summary>Sets the stub of Lexer.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.Reset01">
            <summary>Sets the stub of Lexer.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.Skip">
            <summary>Sets the stub of Lexer.Skip()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.Skip01">
            <summary>Sets the stub of Lexer.Skip()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.SourceNameGet">
            <summary>Sets the stub of Lexer.get_SourceName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.ToStrings(System.Collections.Generic.ICollection{Antlr.Runtime.IToken})">
            <summary>Sets the stub of BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.ToStringsICollectionOfIToken">
            <summary>Sets the stub of BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.TokenNamesGet">
            <summary>Sets the stub of BaseRecognizer.get_TokenNames()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.TraceIn(System.String,System.Int32)">
            <summary>Sets the stub of Lexer.TraceIn(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.TraceIn(System.String,System.Int32,System.Object)">
            <summary>Sets the stub of BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.TraceInStringInt32">
            <summary>Sets the stub of Lexer.TraceIn(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.TraceInStringInt32Object">
            <summary>Sets the stub of BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.TraceOut(System.String,System.Int32)">
            <summary>Sets the stub of Lexer.TraceOut(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.TraceOut(System.String,System.Int32,System.Object)">
            <summary>Sets the stub of BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.TraceOutStringInt32">
            <summary>Sets the stub of Lexer.TraceOut(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubLexer.TraceOutStringInt32Object">
            <summary>Sets the stub of BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubLexer.mTokens">
            <summary>Sets the stub of Lexer.mTokens()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLexer.BacktrackingLevel">
            <summary>Sets the stub of BaseRecognizer.get_BacktrackingLevel()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLexer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLexer.CharIndex">
            <summary>Sets the stub of Lexer.get_CharIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLexer.CharStream">
            <summary>Sets the stub of Lexer.get_CharStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLexer.DebugListener">
            <summary>Sets the stub of BaseRecognizer.get_DebugListener()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLexer.Failed">
            <summary>Sets the stub of BaseRecognizer.get_Failed()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLexer.GrammarFileName">
            <summary>Sets the stub of BaseRecognizer.get_GrammarFileName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLexer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLexer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLexer.NumberOfSyntaxErrors">
            <summary>Sets the stub of BaseRecognizer.get_NumberOfSyntaxErrors()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLexer.SourceName">
            <summary>Sets the stub of Lexer.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubLexer.TokenNames">
            <summary>Sets the stub of BaseRecognizer.get_TokenNames()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubMismatchedNotSetException">
            <summary>Stub type of Antlr.Runtime.MismatchedNotSetException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedNotSetException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedNotSetException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedNotSetException.#ctor(Antlr.Runtime.BitSet,Antlr.Runtime.IIntStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedNotSetException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedNotSetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedNotSetException.#ctor(System.String,Antlr.Runtime.BitSet,Antlr.Runtime.IIntStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedNotSetException.#ctor(System.String,Antlr.Runtime.BitSet,Antlr.Runtime.IIntStream,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedNotSetException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubMismatchedNotSetException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedNotSetException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubMismatchedNotSetException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedNotSetException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedNotSetException.ExtractInformationFromTreeNodeStream(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedNotSetException.ExtractInformationFromTreeNodeStreamITreeNodeStream">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedNotSetException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedNotSetException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedNotSetException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedNotSetException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedNotSetException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedNotSetException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedNotSetException.InitializeStub">
            <summary>Initializes a new instance of type StubMismatchedNotSetException</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedNotSetException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedNotSetException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedNotSetException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedNotSetException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedNotSetException.ToString">
            <summary>Sets the stub of MismatchedNotSetException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedNotSetException.ToString01">
            <summary>Sets the stub of MismatchedNotSetException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedNotSetException.UnexpectedTypeGet">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedNotSetException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedNotSetException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedNotSetException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedNotSetException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedNotSetException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedNotSetException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedNotSetException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedNotSetException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedNotSetException.UnexpectedType">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubMismatchedRangeException">
            <summary>Stub type of Antlr.Runtime.MismatchedRangeException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedRangeException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedRangeException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedRangeException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedRangeException.#ctor(System.Int32,System.Int32,Antlr.Runtime.IIntStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedRangeException.#ctor(System.String,System.Int32,System.Int32,Antlr.Runtime.IIntStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedRangeException.#ctor(System.String,System.Int32,System.Int32,Antlr.Runtime.IIntStream,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedRangeException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubMismatchedRangeException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedRangeException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubMismatchedRangeException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedRangeException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedRangeException.ExtractInformationFromTreeNodeStream(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedRangeException.ExtractInformationFromTreeNodeStreamITreeNodeStream">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedRangeException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedRangeException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedRangeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedRangeException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedRangeException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedRangeException.InitializeStub">
            <summary>Initializes a new instance of type StubMismatchedRangeException</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedRangeException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedRangeException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedRangeException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedRangeException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedRangeException.ToString">
            <summary>Sets the stub of MismatchedRangeException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedRangeException.ToString01">
            <summary>Sets the stub of MismatchedRangeException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedRangeException.UnexpectedTypeGet">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedRangeException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedRangeException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedRangeException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedRangeException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedRangeException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedRangeException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedRangeException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedRangeException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedRangeException.UnexpectedType">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubMismatchedSetException">
            <summary>Stub type of Antlr.Runtime.MismatchedSetException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedSetException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedSetException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedSetException.#ctor(Antlr.Runtime.BitSet,Antlr.Runtime.IIntStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedSetException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedSetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedSetException.#ctor(System.String,Antlr.Runtime.BitSet,Antlr.Runtime.IIntStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedSetException.#ctor(System.String,Antlr.Runtime.BitSet,Antlr.Runtime.IIntStream,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedSetException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubMismatchedSetException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedSetException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubMismatchedSetException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedSetException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedSetException.ExtractInformationFromTreeNodeStream(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedSetException.ExtractInformationFromTreeNodeStreamITreeNodeStream">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedSetException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedSetException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedSetException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedSetException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedSetException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedSetException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedSetException.InitializeStub">
            <summary>Initializes a new instance of type StubMismatchedSetException</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedSetException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedSetException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedSetException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedSetException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedSetException.ToString">
            <summary>Sets the stub of MismatchedSetException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedSetException.ToString01">
            <summary>Sets the stub of MismatchedSetException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedSetException.UnexpectedTypeGet">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedSetException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedSetException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedSetException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedSetException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedSetException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedSetException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedSetException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedSetException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedSetException.UnexpectedType">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubMismatchedTokenException">
            <summary>Stub type of Antlr.Runtime.MismatchedTokenException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTokenException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTokenException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTokenException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTokenException.#ctor(System.Int32,Antlr.Runtime.IIntStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTokenException.#ctor(System.Int32,Antlr.Runtime.IIntStream,System.Collections.Generic.IList{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTokenException.#ctor(System.String,System.Int32,Antlr.Runtime.IIntStream,System.Collections.Generic.IList{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTokenException.#ctor(System.String,System.Int32,Antlr.Runtime.IIntStream,System.Collections.Generic.IList{System.String},System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTokenException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubMismatchedTokenException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTokenException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubMismatchedTokenException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTokenException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTokenException.ExtractInformationFromTreeNodeStream(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTokenException.ExtractInformationFromTreeNodeStreamITreeNodeStream">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTokenException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTokenException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTokenException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTokenException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTokenException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTokenException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTokenException.InitializeStub">
            <summary>Initializes a new instance of type StubMismatchedTokenException</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTokenException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTokenException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTokenException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTokenException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTokenException.ToString">
            <summary>Sets the stub of MismatchedTokenException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTokenException.ToString01">
            <summary>Sets the stub of MismatchedTokenException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTokenException.UnexpectedTypeGet">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTokenException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTokenException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTokenException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTokenException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTokenException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTokenException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTokenException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTokenException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTokenException.UnexpectedType">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException">
            <summary>Stub type of Antlr.Runtime.MismatchedTreeNodeException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.#ctor(System.Int32,Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.#ctor(System.String,System.Int32,Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.#ctor(System.String,System.Int32,Antlr.Runtime.Tree.ITreeNodeStream,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubMismatchedTreeNodeException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubMismatchedTreeNodeException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.ExtractInformationFromTreeNodeStream(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.ExtractInformationFromTreeNodeStreamITreeNodeStream">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.InitializeStub">
            <summary>Initializes a new instance of type StubMismatchedTreeNodeException</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.ToString">
            <summary>Sets the stub of MismatchedTreeNodeException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.ToString01">
            <summary>Sets the stub of MismatchedTreeNodeException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.UnexpectedTypeGet">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMismatchedTreeNodeException.UnexpectedType">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubMissingTokenException">
            <summary>Stub type of Antlr.Runtime.MissingTokenException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMissingTokenException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMissingTokenException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMissingTokenException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMissingTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMissingTokenException.#ctor(System.Int32,Antlr.Runtime.IIntStream,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMissingTokenException.#ctor(System.Int32,Antlr.Runtime.IIntStream,System.Object,System.Collections.Generic.IList{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMissingTokenException.#ctor(System.String,System.Int32,Antlr.Runtime.IIntStream,System.Object,System.Collections.Generic.IList{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMissingTokenException.#ctor(System.String,System.Int32,Antlr.Runtime.IIntStream,System.Object,System.Collections.Generic.IList{System.String},System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMissingTokenException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubMissingTokenException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMissingTokenException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubMissingTokenException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMissingTokenException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMissingTokenException.ExtractInformationFromTreeNodeStream(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMissingTokenException.ExtractInformationFromTreeNodeStreamITreeNodeStream">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMissingTokenException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMissingTokenException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMissingTokenException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMissingTokenException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMissingTokenException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMissingTokenException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMissingTokenException.InitializeStub">
            <summary>Initializes a new instance of type StubMissingTokenException</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMissingTokenException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMissingTokenException.MissingTypeGet">
            <summary>Sets the stub of MissingTokenException.get_MissingType()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMissingTokenException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMissingTokenException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMissingTokenException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubMissingTokenException.ToString">
            <summary>Sets the stub of MissingTokenException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMissingTokenException.ToString01">
            <summary>Sets the stub of MissingTokenException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubMissingTokenException.UnexpectedTypeGet">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMissingTokenException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMissingTokenException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMissingTokenException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMissingTokenException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMissingTokenException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMissingTokenException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMissingTokenException.MissingType">
            <summary>Sets the stub of MissingTokenException.get_MissingType()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMissingTokenException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMissingTokenException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubMissingTokenException.UnexpectedType">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubNoViableAltException">
            <summary>Stub type of Antlr.Runtime.NoViableAltException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubNoViableAltException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubNoViableAltException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubNoViableAltException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubNoViableAltException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubNoViableAltException.#ctor(System.String,System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubNoViableAltException.#ctor(System.String,System.Int32,System.Int32,Antlr.Runtime.IIntStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubNoViableAltException.#ctor(System.String,System.String,System.Int32,System.Int32,Antlr.Runtime.IIntStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubNoViableAltException.#ctor(System.String,System.String,System.Int32,System.Int32,Antlr.Runtime.IIntStream,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubNoViableAltException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubNoViableAltException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubNoViableAltException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubNoViableAltException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubNoViableAltException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubNoViableAltException.ExtractInformationFromTreeNodeStream(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubNoViableAltException.ExtractInformationFromTreeNodeStreamITreeNodeStream">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubNoViableAltException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubNoViableAltException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubNoViableAltException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubNoViableAltException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubNoViableAltException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubNoViableAltException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubNoViableAltException.InitializeStub">
            <summary>Initializes a new instance of type StubNoViableAltException</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubNoViableAltException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubNoViableAltException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubNoViableAltException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubNoViableAltException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubNoViableAltException.ToString">
            <summary>Sets the stub of NoViableAltException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubNoViableAltException.ToString01">
            <summary>Sets the stub of NoViableAltException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubNoViableAltException.UnexpectedTypeGet">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubNoViableAltException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubNoViableAltException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubNoViableAltException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubNoViableAltException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubNoViableAltException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubNoViableAltException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubNoViableAltException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubNoViableAltException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubNoViableAltException.UnexpectedType">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubParser">
            <summary>Stub type of Antlr.Runtime.Parser</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.#ctor(Antlr.Runtime.ITokenStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.#ctor(Antlr.Runtime.ITokenStream,Antlr.Runtime.RecognizerSharedState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.AlreadyParsedRule(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.AlreadyParsedRuleIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.AttachBackingFieldToBacktrackingLevel">
            <summary>Attaches delegates to emulate StubParser.BacktrackingLevel as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.AttachBackingFieldToTokenStream">
            <summary>Attaches delegates to emulate StubParser.TokenStream as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.BacktrackingLevelGet">
            <summary>Sets the stub of BaseRecognizer.get_BacktrackingLevel()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.BacktrackingLevelSetInt32">
            <summary>Sets the stub of BaseRecognizer.set_BacktrackingLevel(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.BeginResync">
            <summary>Sets the stub of BaseRecognizer.BeginResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.BeginResync01">
            <summary>Sets the stub of BaseRecognizer.BeginResync()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.CombineFollows(System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.CombineFollows(Boolean exact)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.CombineFollowsBoolean">
            <summary>Sets the stub of BaseRecognizer.CombineFollows(Boolean exact)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.ComputeContextSensitiveRuleFOLLOW">
            <summary>Sets the stub of BaseRecognizer.ComputeContextSensitiveRuleFOLLOW()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.ComputeContextSensitiveRuleFOLLOW01">
            <summary>Sets the stub of BaseRecognizer.ComputeContextSensitiveRuleFOLLOW()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.ComputeErrorRecoverySet">
            <summary>Sets the stub of BaseRecognizer.ComputeErrorRecoverySet()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.ComputeErrorRecoverySet01">
            <summary>Sets the stub of BaseRecognizer.ComputeErrorRecoverySet()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.ConsumeUntil(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.ConsumeUntil(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.ConsumeUntilIIntStreamBitSet">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.ConsumeUntilIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.DebugBeginBacktrack(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugBeginBacktrack(Int32 level)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.DebugBeginBacktrackInt32">
            <summary>Sets the stub of BaseRecognizer.DebugBeginBacktrack(Int32 level)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.DebugEndBacktrack(System.Int32,System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.DebugEndBacktrackInt32Boolean">
            <summary>Sets the stub of BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.DebugEnterAlt(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterAlt(Int32 alt)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.DebugEnterAltInt32">
            <summary>Sets the stub of BaseRecognizer.DebugEnterAlt(Int32 alt)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.DebugEnterDecision(System.Int32,System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.DebugEnterDecisionInt32Boolean">
            <summary>Sets the stub of BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.DebugEnterRule(System.String,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.DebugEnterRuleStringString">
            <summary>Sets the stub of BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.DebugEnterSubRule(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.DebugEnterSubRuleInt32">
            <summary>Sets the stub of BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.DebugExitDecision(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugExitDecision(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.DebugExitDecisionInt32">
            <summary>Sets the stub of BaseRecognizer.DebugExitDecision(Int32 decisionNumber)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.DebugExitRule(System.String,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.DebugExitRuleStringString">
            <summary>Sets the stub of BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.DebugExitSubRule(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugExitSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.DebugExitSubRuleInt32">
            <summary>Sets the stub of BaseRecognizer.DebugExitSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.DebugListenerGet">
            <summary>Sets the stub of BaseRecognizer.get_DebugListener()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.DebugLocation(System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.DebugLocationInt32Int32">
            <summary>Sets the stub of BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.DebugRecognitionException(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.DebugRecognitionExceptionRecognitionException">
            <summary>Sets the stub of BaseRecognizer.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.DebugSemanticPredicate(System.Boolean,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.DebugSemanticPredicateBooleanString">
            <summary>Sets the stub of BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.DisplayRecognitionError(System.String[],Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.DisplayRecognitionErrorStringArrayRecognitionException">
            <summary>Sets the stub of BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.EmitErrorMessage(System.String)">
            <summary>Sets the stub of BaseRecognizer.EmitErrorMessage(String msg)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.EmitErrorMessageString">
            <summary>Sets the stub of BaseRecognizer.EmitErrorMessage(String msg)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.EndResync">
            <summary>Sets the stub of BaseRecognizer.EndResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.EndResync01">
            <summary>Sets the stub of BaseRecognizer.EndResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.FailedGet">
            <summary>Sets the stub of BaseRecognizer.get_Failed()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.GetCurrentInputSymbol(Antlr.Runtime.IIntStream)">
            <summary>Sets the stub of Parser.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.GetCurrentInputSymbolIIntStream">
            <summary>Sets the stub of Parser.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.GetErrorHeader(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.GetErrorHeader(RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.GetErrorHeaderRecognitionException">
            <summary>Sets the stub of BaseRecognizer.GetErrorHeader(RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.GetErrorMessage(Antlr.Runtime.RecognitionException,System.String[])">
            <summary>Sets the stub of BaseRecognizer.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.GetErrorMessageRecognitionExceptionStringArray">
            <summary>Sets the stub of BaseRecognizer.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.GetMissingSymbol(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of Parser.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.GetMissingSymbolIIntStreamRecognitionExceptionInt32BitSet">
            <summary>Sets the stub of Parser.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.GetRuleMemoization(System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.GetRuleMemoizationCacheSize">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoizationCacheSize()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.GetRuleMemoizationCacheSize01">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoizationCacheSize()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.GetRuleMemoizationInt32Int32">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.GetTokenErrorDisplay(Antlr.Runtime.IToken)">
            <summary>Sets the stub of BaseRecognizer.GetTokenErrorDisplay(IToken t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.GetTokenErrorDisplayIToken">
            <summary>Sets the stub of BaseRecognizer.GetTokenErrorDisplay(IToken t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.GrammarFileNameGet">
            <summary>Sets the stub of BaseRecognizer.get_GrammarFileName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.InitDFAs">
            <summary>Sets the stub of BaseRecognizer.InitDFAs()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.InitDFAs01">
            <summary>Sets the stub of BaseRecognizer.InitDFAs()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.InitializeStub">
            <summary>Initializes a new instance of type StubParser</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.Match(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.MatchAny(Antlr.Runtime.IIntStream)">
            <summary>Sets the stub of BaseRecognizer.MatchAny(IIntStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.MatchAnyIIntStream">
            <summary>Sets the stub of BaseRecognizer.MatchAny(IIntStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.MatchIIntStreamInt32BitSet">
            <summary>Sets the stub of BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.Memoize(Antlr.Runtime.IIntStream,System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.MemoizeIIntStreamInt32Int32">
            <summary>Sets the stub of BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.MismatchIsMissingToken(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.MismatchIsMissingTokenIIntStreamBitSet">
            <summary>Sets the stub of BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.MismatchIsUnwantedToken(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.MismatchIsUnwantedTokenIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.NumberOfSyntaxErrorsGet">
            <summary>Sets the stub of BaseRecognizer.get_NumberOfSyntaxErrors()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.Recover(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.Recover(IIntStream input, RecognitionException re)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.RecoverFromMismatchedSet(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.RecoverFromMismatchedSetIIntStreamRecognitionExceptionBitSet">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.RecoverFromMismatchedToken(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.RecoverFromMismatchedTokenIIntStreamInt32BitSet">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.RecoverIIntStreamRecognitionException">
            <summary>Sets the stub of BaseRecognizer.Recover(IIntStream input, RecognitionException re)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.ReportError(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.ReportError(RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.ReportErrorRecognitionException">
            <summary>Sets the stub of BaseRecognizer.ReportError(RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.Reset">
            <summary>Sets the stub of Parser.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.Reset01">
            <summary>Sets the stub of Parser.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.SourceNameGet">
            <summary>Sets the stub of Parser.get_SourceName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.ToStrings(System.Collections.Generic.ICollection{Antlr.Runtime.IToken})">
            <summary>Sets the stub of BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.ToStringsICollectionOfIToken">
            <summary>Sets the stub of BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.TokenNamesGet">
            <summary>Sets the stub of BaseRecognizer.get_TokenNames()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.TokenStreamGet">
            <summary>Sets the stub of Parser.get_TokenStream()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.TokenStreamSetITokenStream">
            <summary>Sets the stub of Parser.set_TokenStream(ITokenStream value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.TraceIn(System.String,System.Int32)">
            <summary>Sets the stub of Parser.TraceIn(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.TraceIn(System.String,System.Int32,System.Object)">
            <summary>Sets the stub of BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.TraceInStringInt32">
            <summary>Sets the stub of Parser.TraceIn(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.TraceInStringInt32Object">
            <summary>Sets the stub of BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.TraceOut(System.String,System.Int32)">
            <summary>Sets the stub of Parser.TraceOut(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParser.TraceOut(System.String,System.Int32,System.Object)">
            <summary>Sets the stub of BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.TraceOutStringInt32">
            <summary>Sets the stub of Parser.TraceOut(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubParser.TraceOutStringInt32Object">
            <summary>Sets the stub of BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubParser.BacktrackingLevel">
            <summary>Sets the stub of BaseRecognizer.get_BacktrackingLevel()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubParser.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubParser.DebugListener">
            <summary>Sets the stub of BaseRecognizer.get_DebugListener()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubParser.Failed">
            <summary>Sets the stub of BaseRecognizer.get_Failed()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubParser.GrammarFileName">
            <summary>Sets the stub of BaseRecognizer.get_GrammarFileName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubParser.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubParser.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubParser.NumberOfSyntaxErrors">
            <summary>Sets the stub of BaseRecognizer.get_NumberOfSyntaxErrors()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubParser.SourceName">
            <summary>Sets the stub of Parser.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubParser.TokenNames">
            <summary>Sets the stub of BaseRecognizer.get_TokenNames()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubParser.TokenStream">
            <summary>Sets the stub of Parser.get_TokenStream()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubParserRuleReturnScope`1">
            <summary>Stub type of Antlr.Runtime.ParserRuleReturnScope`1</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParserRuleReturnScope`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubParserRuleReturnScope`1.InitializeStub">
            <summary>Initializes a new instance of type StubParserRuleReturnScope</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubParserRuleReturnScope`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubParserRuleReturnScope`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubParserRuleReturnScope`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubRecognitionException">
            <summary>Stub type of Antlr.Runtime.RecognitionException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognitionException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognitionException.#ctor(Antlr.Runtime.IIntStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognitionException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognitionException.#ctor(System.String,Antlr.Runtime.IIntStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognitionException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognitionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognitionException.#ctor(System.String,Antlr.Runtime.IIntStream,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognitionException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubRecognitionException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognitionException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubRecognitionException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubRecognitionException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognitionException.ExtractInformationFromTreeNodeStream(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubRecognitionException.ExtractInformationFromTreeNodeStreamITreeNodeStream">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognitionException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubRecognitionException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognitionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubRecognitionException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubRecognitionException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubRecognitionException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognitionException.InitializeStub">
            <summary>Initializes a new instance of type StubRecognitionException</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubRecognitionException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubRecognitionException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubRecognitionException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubRecognitionException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognitionException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubRecognitionException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubRecognitionException.UnexpectedTypeGet">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubRecognitionException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubRecognitionException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubRecognitionException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubRecognitionException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubRecognitionException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubRecognitionException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubRecognitionException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubRecognitionException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubRecognitionException.UnexpectedType">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubRecognizerSharedState">
            <summary>Stub type of Antlr.Runtime.RecognizerSharedState</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognizerSharedState.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognizerSharedState.#ctor(Antlr.Runtime.RecognizerSharedState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubRecognizerSharedState.InitializeStub">
            <summary>Initializes a new instance of type StubRecognizerSharedState</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubRecognizerSharedState.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubRecognizerSharedState.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubRecognizerSharedState.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubTokenRewriteStream">
            <summary>Stub type of Antlr.Runtime.TokenRewriteStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.#ctor(Antlr.Runtime.ITokenSource)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.#ctor(Antlr.Runtime.ITokenSource,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.AttachBackingFieldToRange">
            <summary>Attaches delegates to emulate StubTokenRewriteStream.Range as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.AttachBackingFieldToTokenSource">
            <summary>Attaches delegates to emulate StubTokenRewriteStream.TokenSource as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.CatOpText(System.Object,System.Object)">
            <summary>Sets the stub of TokenRewriteStream.CatOpText(Object a, Object b)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.CatOpTextObjectObject">
            <summary>Sets the stub of TokenRewriteStream.CatOpText(Object a, Object b)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Consume">
            <summary>Sets the stub of CommonTokenStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.Consume01">
            <summary>Sets the stub of CommonTokenStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.CountGet">
            <summary>Sets the stub of BufferedTokenStream.get_Count()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Delete(Antlr.Runtime.IToken)">
            <summary>Sets the stub of TokenRewriteStream.Delete(IToken indexT)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Delete(System.Int32)">
            <summary>Sets the stub of TokenRewriteStream.Delete(Int32 index)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Delete(Antlr.Runtime.IToken,Antlr.Runtime.IToken)">
            <summary>Sets the stub of TokenRewriteStream.Delete(IToken from, IToken to)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Delete(System.Int32,System.Int32)">
            <summary>Sets the stub of TokenRewriteStream.Delete(Int32 from, Int32 to)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Delete(System.String,System.Int32,System.Int32)">
            <summary>Sets the stub of TokenRewriteStream.Delete(String programName, Int32 from, Int32 to)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Delete(System.String,Antlr.Runtime.IToken,Antlr.Runtime.IToken)">
            <summary>Sets the stub of TokenRewriteStream.Delete(String programName, IToken from, IToken to)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.DeleteIToken">
            <summary>Sets the stub of TokenRewriteStream.Delete(IToken indexT)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.DeleteITokenIToken">
            <summary>Sets the stub of TokenRewriteStream.Delete(IToken from, IToken to)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.DeleteInt32">
            <summary>Sets the stub of TokenRewriteStream.Delete(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.DeleteInt32Int32">
            <summary>Sets the stub of TokenRewriteStream.Delete(Int32 from, Int32 to)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.DeleteProgram">
            <summary>Sets the stub of TokenRewriteStream.DeleteProgram()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.DeleteProgram(System.String)">
            <summary>Sets the stub of TokenRewriteStream.DeleteProgram(String programName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.DeleteProgram01">
            <summary>Sets the stub of TokenRewriteStream.DeleteProgram()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.DeleteProgramString">
            <summary>Sets the stub of TokenRewriteStream.DeleteProgram(String programName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.DeleteStringITokenIToken">
            <summary>Sets the stub of TokenRewriteStream.Delete(String programName, IToken from, IToken to)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.DeleteStringInt32Int32">
            <summary>Sets the stub of TokenRewriteStream.Delete(String programName, Int32 from, Int32 to)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Fetch(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Fetch(Int32 n)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.FetchInt32">
            <summary>Sets the stub of BufferedTokenStream.Fetch(Int32 n)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Fill">
            <summary>Sets the stub of BufferedTokenStream.Fill()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.Fill01">
            <summary>Sets the stub of BufferedTokenStream.Fill()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Get(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Get(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetInt32">
            <summary>Sets the stub of BufferedTokenStream.Get(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetKindOfOps(System.Collections.Generic.IList{Antlr.Runtime.TokenRewriteStream.RewriteOperation},System.Type)">
            <summary>Sets the stub of TokenRewriteStream.GetKindOfOps(IList`1&lt;RewriteOperation&gt; rewrites, Type kind)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetKindOfOps(System.Collections.Generic.IList{Antlr.Runtime.TokenRewriteStream.RewriteOperation},System.Type,System.Int32)">
            <summary>Sets the stub of TokenRewriteStream.GetKindOfOps(IList`1&lt;RewriteOperation&gt; rewrites, Type kind, Int32 before)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetKindOfOpsIListOfTokenRewriteStreamRewriteOperationType">
            <summary>Sets the stub of TokenRewriteStream.GetKindOfOps(IList`1&lt;RewriteOperation&gt; rewrites, Type kind)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetKindOfOpsIListOfTokenRewriteStreamRewriteOperationTypeInt32">
            <summary>Sets the stub of TokenRewriteStream.GetKindOfOps(IList`1&lt;RewriteOperation&gt; rewrites, Type kind, Int32 before)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetLastRewriteTokenIndex">
            <summary>Sets the stub of TokenRewriteStream.GetLastRewriteTokenIndex()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetLastRewriteTokenIndex(System.String)">
            <summary>Sets the stub of TokenRewriteStream.GetLastRewriteTokenIndex(String programName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetLastRewriteTokenIndex01">
            <summary>Sets the stub of TokenRewriteStream.GetLastRewriteTokenIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetLastRewriteTokenIndexString">
            <summary>Sets the stub of TokenRewriteStream.GetLastRewriteTokenIndex(String programName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetProgram(System.String)">
            <summary>Sets the stub of TokenRewriteStream.GetProgram(String name)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetProgramString">
            <summary>Sets the stub of TokenRewriteStream.GetProgram(String name)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetTokens">
            <summary>Sets the stub of BufferedTokenStream.GetTokens()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetTokens(System.Int32,System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetTokens(System.Int32,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, BitSet types)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetTokens(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, IEnumerable`1&lt;Int32&gt; types)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetTokens(System.Int32,System.Int32,System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetTokens01">
            <summary>Sets the stub of BufferedTokenStream.GetTokens()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetTokensInt32Int32">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetTokensInt32Int32BitSet">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, BitSet types)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetTokensInt32Int32IEnumerableOfInt32">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, IEnumerable`1&lt;Int32&gt; types)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.GetTokensInt32Int32Int32">
            <summary>Sets the stub of BufferedTokenStream.GetTokens(Int32 start, Int32 stop, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.IndexGet">
            <summary>Sets the stub of BufferedTokenStream.get_Index()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.InitializeStub">
            <summary>Initializes a new instance of type StubTokenRewriteStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.InsertAfter(Antlr.Runtime.IToken,System.Object)">
            <summary>Sets the stub of TokenRewriteStream.InsertAfter(IToken t, Object text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.InsertAfter(System.Int32,System.Object)">
            <summary>Sets the stub of TokenRewriteStream.InsertAfter(Int32 index, Object text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.InsertAfter(System.String,System.Int32,System.Object)">
            <summary>Sets the stub of TokenRewriteStream.InsertAfter(String programName, Int32 index, Object text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.InsertAfter(System.String,Antlr.Runtime.IToken,System.Object)">
            <summary>Sets the stub of TokenRewriteStream.InsertAfter(String programName, IToken t, Object text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.InsertAfterITokenObject">
            <summary>Sets the stub of TokenRewriteStream.InsertAfter(IToken t, Object text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.InsertAfterInt32Object">
            <summary>Sets the stub of TokenRewriteStream.InsertAfter(Int32 index, Object text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.InsertAfterStringITokenObject">
            <summary>Sets the stub of TokenRewriteStream.InsertAfter(String programName, IToken t, Object text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.InsertAfterStringInt32Object">
            <summary>Sets the stub of TokenRewriteStream.InsertAfter(String programName, Int32 index, Object text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.InsertBefore(System.Int32,System.Object)">
            <summary>Sets the stub of TokenRewriteStream.InsertBefore(Int32 index, Object text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.InsertBefore(Antlr.Runtime.IToken,System.Object)">
            <summary>Sets the stub of TokenRewriteStream.InsertBefore(IToken t, Object text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.InsertBefore(System.String,Antlr.Runtime.IToken,System.Object)">
            <summary>Sets the stub of TokenRewriteStream.InsertBefore(String programName, IToken t, Object text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.InsertBefore(System.String,System.Int32,System.Object)">
            <summary>Sets the stub of TokenRewriteStream.InsertBefore(String programName, Int32 index, Object text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.InsertBeforeITokenObject">
            <summary>Sets the stub of TokenRewriteStream.InsertBefore(IToken t, Object text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.InsertBeforeInt32Object">
            <summary>Sets the stub of TokenRewriteStream.InsertBefore(Int32 index, Object text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.InsertBeforeStringITokenObject">
            <summary>Sets the stub of TokenRewriteStream.InsertBefore(String programName, IToken t, Object text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.InsertBeforeStringInt32Object">
            <summary>Sets the stub of TokenRewriteStream.InsertBefore(String programName, Int32 index, Object text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.LA(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.LA(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.LAInt32">
            <summary>Sets the stub of BufferedTokenStream.LA(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.LB(System.Int32)">
            <summary>Sets the stub of CommonTokenStream.LB(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.LBInt32">
            <summary>Sets the stub of CommonTokenStream.LB(Int32 k)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.LT(System.Int32)">
            <summary>Sets the stub of CommonTokenStream.LT(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.LTInt32">
            <summary>Sets the stub of CommonTokenStream.LT(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.LastRealTokenGet">
            <summary>Sets the stub of BufferedTokenStream.get_LastRealToken()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.LastTokenGet">
            <summary>Sets the stub of BufferedTokenStream.get_LastToken()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Mark">
            <summary>Sets the stub of BufferedTokenStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.Mark01">
            <summary>Sets the stub of BufferedTokenStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.MaxLookBehindGet">
            <summary>Sets the stub of BufferedTokenStream.get_MaxLookBehind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.RangeGet">
            <summary>Sets the stub of BufferedTokenStream.get_Range()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.RangeSetInt32">
            <summary>Sets the stub of BufferedTokenStream.set_Range(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.ReduceToSingleOperationPerIndex(System.Collections.Generic.IList{Antlr.Runtime.TokenRewriteStream.RewriteOperation})">
            <summary>Sets the stub of TokenRewriteStream.ReduceToSingleOperationPerIndex(IList`1&lt;RewriteOperation&gt; rewrites)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ReduceToSingleOperationPerIndexIListOfTokenRewriteStreamRewriteOperation">
            <summary>Sets the stub of TokenRewriteStream.ReduceToSingleOperationPerIndex(IList`1&lt;RewriteOperation&gt; rewrites)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Release(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Release(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ReleaseInt32">
            <summary>Sets the stub of BufferedTokenStream.Release(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Replace(Antlr.Runtime.IToken,System.Object)">
            <summary>Sets the stub of TokenRewriteStream.Replace(IToken indexT, Object text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Replace(System.Int32,System.Object)">
            <summary>Sets the stub of TokenRewriteStream.Replace(Int32 index, Object text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Replace(Antlr.Runtime.IToken,Antlr.Runtime.IToken,System.Object)">
            <summary>Sets the stub of TokenRewriteStream.Replace(IToken from, IToken to, Object text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Replace(System.Int32,System.Int32,System.Object)">
            <summary>Sets the stub of TokenRewriteStream.Replace(Int32 from, Int32 to, Object text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Replace(System.String,Antlr.Runtime.IToken,Antlr.Runtime.IToken,System.Object)">
            <summary>Sets the stub of TokenRewriteStream.Replace(String programName, IToken from, IToken to, Object text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Replace(System.String,System.Int32,System.Int32,System.Object)">
            <summary>Sets the stub of TokenRewriteStream.Replace(String programName, Int32 from, Int32 to, Object text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ReplaceITokenITokenObject">
            <summary>Sets the stub of TokenRewriteStream.Replace(IToken from, IToken to, Object text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ReplaceITokenObject">
            <summary>Sets the stub of TokenRewriteStream.Replace(IToken indexT, Object text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ReplaceInt32Int32Object">
            <summary>Sets the stub of TokenRewriteStream.Replace(Int32 from, Int32 to, Object text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ReplaceInt32Object">
            <summary>Sets the stub of TokenRewriteStream.Replace(Int32 index, Object text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ReplaceStringITokenITokenObject">
            <summary>Sets the stub of TokenRewriteStream.Replace(String programName, IToken from, IToken to, Object text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ReplaceStringInt32Int32Object">
            <summary>Sets the stub of TokenRewriteStream.Replace(String programName, Int32 from, Int32 to, Object text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Reset">
            <summary>Sets the stub of BufferedTokenStream.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.Reset01">
            <summary>Sets the stub of BufferedTokenStream.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Rewind">
            <summary>Sets the stub of BufferedTokenStream.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Rewind(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.Rewind01">
            <summary>Sets the stub of BufferedTokenStream.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.RewindInt32">
            <summary>Sets the stub of BufferedTokenStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Rollback(System.Int32)">
            <summary>Sets the stub of TokenRewriteStream.Rollback(Int32 instructionIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Rollback(System.String,System.Int32)">
            <summary>Sets the stub of TokenRewriteStream.Rollback(String programName, Int32 instructionIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.RollbackInt32">
            <summary>Sets the stub of TokenRewriteStream.Rollback(Int32 instructionIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.RollbackStringInt32">
            <summary>Sets the stub of TokenRewriteStream.Rollback(String programName, Int32 instructionIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Seek(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.SeekInt32">
            <summary>Sets the stub of BufferedTokenStream.Seek(Int32 index)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.SetLastRewriteTokenIndex(System.String,System.Int32)">
            <summary>Sets the stub of TokenRewriteStream.SetLastRewriteTokenIndex(String programName, Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.SetLastRewriteTokenIndexStringInt32">
            <summary>Sets the stub of TokenRewriteStream.SetLastRewriteTokenIndex(String programName, Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Setup">
            <summary>Sets the stub of CommonTokenStream.Setup()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.Setup01">
            <summary>Sets the stub of CommonTokenStream.Setup()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.SkipOffTokenChannels(System.Int32)">
            <summary>Sets the stub of CommonTokenStream.SkipOffTokenChannels(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.SkipOffTokenChannelsInt32">
            <summary>Sets the stub of CommonTokenStream.SkipOffTokenChannels(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.SkipOffTokenChannelsReverse(System.Int32)">
            <summary>Sets the stub of CommonTokenStream.SkipOffTokenChannelsReverse(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.SkipOffTokenChannelsReverseInt32">
            <summary>Sets the stub of CommonTokenStream.SkipOffTokenChannelsReverse(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.SourceNameGet">
            <summary>Sets the stub of BufferedTokenStream.get_SourceName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.Sync(System.Int32)">
            <summary>Sets the stub of BufferedTokenStream.Sync(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.SyncInt32">
            <summary>Sets the stub of BufferedTokenStream.Sync(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToDebugString">
            <summary>Sets the stub of TokenRewriteStream.ToDebugString()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToDebugString(System.Int32,System.Int32)">
            <summary>Sets the stub of TokenRewriteStream.ToDebugString(Int32 start, Int32 end)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToDebugString01">
            <summary>Sets the stub of TokenRewriteStream.ToDebugString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToDebugStringInt32Int32">
            <summary>Sets the stub of TokenRewriteStream.ToDebugString(Int32 start, Int32 end)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToOriginalString">
            <summary>Sets the stub of TokenRewriteStream.ToOriginalString()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToOriginalString(System.Int32,System.Int32)">
            <summary>Sets the stub of TokenRewriteStream.ToOriginalString(Int32 start, Int32 end)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToOriginalString01">
            <summary>Sets the stub of TokenRewriteStream.ToOriginalString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToOriginalStringInt32Int32">
            <summary>Sets the stub of TokenRewriteStream.ToOriginalString(Int32 start, Int32 end)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToString">
            <summary>Sets the stub of TokenRewriteStream.ToString()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToString(System.String)">
            <summary>Sets the stub of TokenRewriteStream.ToString(String programName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToString(Antlr.Runtime.IToken,Antlr.Runtime.IToken)">
            <summary>Sets the stub of BufferedTokenStream.ToString(IToken start, IToken stop)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToString(System.Int32,System.Int32)">
            <summary>Sets the stub of TokenRewriteStream.ToString(Int32 start, Int32 end)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToString(System.String,System.Int32,System.Int32)">
            <summary>Sets the stub of TokenRewriteStream.ToString(String programName, Int32 start, Int32 end)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToString01">
            <summary>Sets the stub of TokenRewriteStream.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToStringITokenIToken">
            <summary>Sets the stub of BufferedTokenStream.ToString(IToken start, IToken stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToStringInt32Int32">
            <summary>Sets the stub of TokenRewriteStream.ToString(Int32 start, Int32 end)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToStringString">
            <summary>Sets the stub of TokenRewriteStream.ToString(String programName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.ToStringStringInt32Int32">
            <summary>Sets the stub of TokenRewriteStream.ToString(String programName, Int32 start, Int32 end)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.TokenSourceGet">
            <summary>Sets the stub of CommonTokenStream.get_TokenSource()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubTokenRewriteStream.TokenSourceSetITokenSource">
            <summary>Sets the stub of CommonTokenStream.set_TokenSource(ITokenSource value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubTokenRewriteStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubTokenRewriteStream.Count">
            <summary>Sets the stub of BufferedTokenStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubTokenRewriteStream.Index">
            <summary>Sets the stub of BufferedTokenStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubTokenRewriteStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubTokenRewriteStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubTokenRewriteStream.LastRealToken">
            <summary>Sets the stub of BufferedTokenStream.get_LastRealToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubTokenRewriteStream.LastToken">
            <summary>Sets the stub of BufferedTokenStream.get_LastToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubTokenRewriteStream.MaxLookBehind">
            <summary>Sets the stub of BufferedTokenStream.get_MaxLookBehind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubTokenRewriteStream.Range">
            <summary>Sets the stub of BufferedTokenStream.get_Range()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubTokenRewriteStream.SourceName">
            <summary>Sets the stub of BufferedTokenStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubTokenRewriteStream.TokenSource">
            <summary>Sets the stub of CommonTokenStream.get_TokenSource()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubUnbufferedTokenStream">
            <summary>Stub type of Antlr.Runtime.UnbufferedTokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.#ctor(Antlr.Runtime.ITokenSource)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.AttachBackingFieldToRange">
            <summary>Attaches delegates to emulate StubUnbufferedTokenStream.Range as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Clear">
            <summary>Sets the stub of LookaheadStream`1.Clear()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Clear01">
            <summary>Sets the stub of LookaheadStream`1.Clear()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Consume">
            <summary>Sets the stub of LookaheadStream`1.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Consume01">
            <summary>Sets the stub of LookaheadStream`1.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.CountGet">
            <summary>Sets the stub of LookaheadStream`1.get_Count()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Dequeue">
            <summary>Sets the stub of LookaheadStream`1.Dequeue()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Dequeue01">
            <summary>Sets the stub of LookaheadStream`1.Dequeue()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Enqueue(Antlr.Runtime.IToken)">
            <summary>Sets the stub of FastQueue`1.Enqueue(!0 o)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.EnqueueIToken">
            <summary>Sets the stub of FastQueue`1.Enqueue(!0 o)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Fill(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.Fill(Int32 n)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.FillInt32">
            <summary>Sets the stub of LookaheadStream`1.Fill(Int32 n)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.IndexGet">
            <summary>Sets the stub of LookaheadStream`1.get_Index()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.InitializeStub">
            <summary>Initializes a new instance of type StubUnbufferedTokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.IsEndOfFile(Antlr.Runtime.IToken)">
            <summary>Sets the stub of UnbufferedTokenStream.IsEndOfFile(IToken o)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.IsEndOfFileIToken">
            <summary>Sets the stub of UnbufferedTokenStream.IsEndOfFile(IToken o)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.ItemGetInt32">
            <summary>Sets the stub of FastQueue`1.get_Item(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.LB(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.LB(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.LBInt32">
            <summary>Sets the stub of LookaheadStream`1.LB(Int32 k)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.LT(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.LT(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.LTInt32">
            <summary>Sets the stub of LookaheadStream`1.LT(Int32 k)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Mark">
            <summary>Sets the stub of LookaheadStream`1.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Mark01">
            <summary>Sets the stub of LookaheadStream`1.Mark()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.NextElement">
            <summary>Sets the stub of UnbufferedTokenStream.NextElement()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.NextElement01">
            <summary>Sets the stub of UnbufferedTokenStream.NextElement()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Peek">
            <summary>Sets the stub of FastQueue`1.Peek()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Peek01">
            <summary>Sets the stub of FastQueue`1.Peek()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.RangeGet">
            <summary>Sets the stub of FastQueue`1.get_Range()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.RangeSetInt32">
            <summary>Sets the stub of FastQueue`1.set_Range(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Release(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.Release(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.ReleaseInt32">
            <summary>Sets the stub of LookaheadStream`1.Release(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Rewind">
            <summary>Sets the stub of LookaheadStream`1.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Rewind(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.Rewind(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Rewind01">
            <summary>Sets the stub of LookaheadStream`1.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.RewindInt32">
            <summary>Sets the stub of LookaheadStream`1.Rewind(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Seek(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.SeekInt32">
            <summary>Sets the stub of LookaheadStream`1.Seek(Int32 index)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.SyncAhead(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.SyncAhead(Int32 need)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.SyncAheadInt32">
            <summary>Sets the stub of LookaheadStream`1.SyncAhead(Int32 need)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.ToString">
            <summary>Sets the stub of FastQueue`1.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.ToString01">
            <summary>Sets the stub of FastQueue`1.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Count">
            <summary>Sets the stub of LookaheadStream`1.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Index">
            <summary>Sets the stub of LookaheadStream`1.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Item(System.Int32)">
            <summary>Sets the stub of FastQueue`1.get_Item(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnbufferedTokenStream.Range">
            <summary>Sets the stub of FastQueue`1.get_Range()</summary>
        </member>
        <member name="T:Antlr.Runtime.Fakes.StubUnwantedTokenException">
            <summary>Stub type of Antlr.Runtime.UnwantedTokenException</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnwantedTokenException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnwantedTokenException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnwantedTokenException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnwantedTokenException.#ctor(System.Int32,Antlr.Runtime.IIntStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnwantedTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnwantedTokenException.#ctor(System.Int32,Antlr.Runtime.IIntStream,System.Collections.Generic.IList{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnwantedTokenException.#ctor(System.String,System.Int32,Antlr.Runtime.IIntStream,System.Collections.Generic.IList{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnwantedTokenException.#ctor(System.String,System.Int32,Antlr.Runtime.IIntStream,System.Collections.Generic.IList{System.String},System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnwantedTokenException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubUnwantedTokenException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnwantedTokenException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubUnwantedTokenException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnwantedTokenException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnwantedTokenException.ExtractInformationFromTreeNodeStream(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnwantedTokenException.ExtractInformationFromTreeNodeStreamITreeNodeStream">
            <summary>Sets the stub of RecognitionException.ExtractInformationFromTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnwantedTokenException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnwantedTokenException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnwantedTokenException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnwantedTokenException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnwantedTokenException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnwantedTokenException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnwantedTokenException.InitializeStub">
            <summary>Initializes a new instance of type StubUnwantedTokenException</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnwantedTokenException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnwantedTokenException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnwantedTokenException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnwantedTokenException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Antlr.Runtime.Fakes.StubUnwantedTokenException.ToString">
            <summary>Sets the stub of UnwantedTokenException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnwantedTokenException.ToString01">
            <summary>Sets the stub of UnwantedTokenException.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnwantedTokenException.UnexpectedTokenGet">
            <summary>Sets the stub of UnwantedTokenException.get_UnexpectedToken()</summary>
        </member>
        <member name="F:Antlr.Runtime.Fakes.StubUnwantedTokenException.UnexpectedTypeGet">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnwantedTokenException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnwantedTokenException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnwantedTokenException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnwantedTokenException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnwantedTokenException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnwantedTokenException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnwantedTokenException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnwantedTokenException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnwantedTokenException.UnexpectedToken">
            <summary>Sets the stub of UnwantedTokenException.get_UnexpectedToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Fakes.StubUnwantedTokenException.UnexpectedType">
            <summary>Sets the stub of RecognitionException.get_UnexpectedType()</summary>
        </member>
        <member name="T:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1">
            <summary>Shim type of Antlr.Runtime.Misc.FastQueue`1</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.#ctor(Antlr.Runtime.Misc.FastQueue{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.Clear">
            <summary>Sets the shim of FastQueue`1.Clear()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.Constructor">
            <summary>Sets the shim of FastQueue`1.FastQueue`1()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.CountGet">
            <summary>Sets the shim of FastQueue`1.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.Dequeue">
            <summary>Sets the shim of FastQueue`1.Dequeue()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.EnqueueT0">
            <summary>Sets the shim of FastQueue`1.Enqueue(!0 o)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.ItemGetInt32">
            <summary>Sets the shim of FastQueue`1.get_Item(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.Peek">
            <summary>Sets the shim of FastQueue`1.Peek()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.RangeGet">
            <summary>Sets the shim of FastQueue`1.get_Range()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.RangeSetInt32">
            <summary>Sets the shim of FastQueue`1.set_Range(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.ToString">
            <summary>Sets the shim of FastQueue`1.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.AllInstances.Clear">
            <summary>Sets the shim of FastQueue`1.Clear()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.AllInstances.CountGet">
            <summary>Sets the shim of FastQueue`1.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.AllInstances.Dequeue">
            <summary>Sets the shim of FastQueue`1.Dequeue()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.AllInstances.EnqueueT0">
            <summary>Sets the shim of FastQueue`1.Enqueue(!0 o)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.AllInstances.ItemGetInt32">
            <summary>Sets the shim of FastQueue`1.get_Item(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.AllInstances.Peek">
            <summary>Sets the shim of FastQueue`1.Peek()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.AllInstances.RangeGet">
            <summary>Sets the shim of FastQueue`1.get_Range()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.AllInstances.RangeSetInt32">
            <summary>Sets the shim of FastQueue`1.set_Range(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimFastQueue`1.AllInstances.ToString01">
            <summary>Sets the shim of FastQueue`1.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1">
            <summary>Shim type of Antlr.Runtime.Misc.LookaheadStream`1</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.#ctor(Antlr.Runtime.Misc.LookaheadStream{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.Clear">
            <summary>Sets the shim of LookaheadStream`1.Clear()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.Constructor">
            <summary>Sets the shim of LookaheadStream`1.LookaheadStream`1()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.Consume">
            <summary>Sets the shim of LookaheadStream`1.Consume()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.CountGet">
            <summary>Sets the shim of LookaheadStream`1.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.Dequeue">
            <summary>Sets the shim of LookaheadStream`1.Dequeue()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.EndOfFileGet">
            <summary>Sets the shim of LookaheadStream`1.get_EndOfFile()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.EndOfFileSetT0">
            <summary>Sets the shim of LookaheadStream`1.set_EndOfFile(!0 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.FillInt32">
            <summary>Sets the shim of LookaheadStream`1.Fill(Int32 n)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.IndexGet">
            <summary>Sets the shim of LookaheadStream`1.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.LBInt32">
            <summary>Sets the shim of LookaheadStream`1.LB(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.LTInt32">
            <summary>Sets the shim of LookaheadStream`1.LT(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.Mark">
            <summary>Sets the shim of LookaheadStream`1.Mark()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.ReleaseInt32">
            <summary>Sets the shim of LookaheadStream`1.Release(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.Rewind">
            <summary>Sets the shim of LookaheadStream`1.Rewind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.RewindInt32">
            <summary>Sets the shim of LookaheadStream`1.Rewind(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.SeekInt32">
            <summary>Sets the shim of LookaheadStream`1.Seek(Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.SyncAheadInt32">
            <summary>Sets the shim of LookaheadStream`1.SyncAhead(Int32 need)</summary>
        </member>
        <member name="T:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances.Clear">
            <summary>Sets the shim of LookaheadStream`1.Clear()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances.Consume">
            <summary>Sets the shim of LookaheadStream`1.Consume()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances.CountGet">
            <summary>Sets the shim of LookaheadStream`1.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances.Dequeue">
            <summary>Sets the shim of LookaheadStream`1.Dequeue()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances.EndOfFileGet">
            <summary>Sets the shim of LookaheadStream`1.get_EndOfFile()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances.EndOfFileSetT0">
            <summary>Sets the shim of LookaheadStream`1.set_EndOfFile(!0 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances.FillInt32">
            <summary>Sets the shim of LookaheadStream`1.Fill(Int32 n)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances.IndexGet">
            <summary>Sets the shim of LookaheadStream`1.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances.LBInt32">
            <summary>Sets the shim of LookaheadStream`1.LB(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances.LTInt32">
            <summary>Sets the shim of LookaheadStream`1.LT(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances.Mark">
            <summary>Sets the shim of LookaheadStream`1.Mark()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances.ReleaseInt32">
            <summary>Sets the shim of LookaheadStream`1.Release(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances.Rewind">
            <summary>Sets the shim of LookaheadStream`1.Rewind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances.RewindInt32">
            <summary>Sets the shim of LookaheadStream`1.Rewind(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances.SeekInt32">
            <summary>Sets the shim of LookaheadStream`1.Seek(Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.ShimLookaheadStream`1.AllInstances.SyncAheadInt32">
            <summary>Sets the shim of LookaheadStream`1.SyncAhead(Int32 need)</summary>
        </member>
        <member name="T:Antlr.Runtime.Misc.Fakes.StubFastQueue`1">
            <summary>Stub type of Antlr.Runtime.Misc.FastQueue`1</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.AttachBackingFieldToRange">
            <summary>Attaches delegates to emulate StubFastQueue.Range as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.Clear">
            <summary>Sets the stub of FastQueue`1.Clear()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.Clear01">
            <summary>Sets the stub of FastQueue`1.Clear()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.CountGet">
            <summary>Sets the stub of FastQueue`1.get_Count()</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.Dequeue">
            <summary>Sets the stub of FastQueue`1.Dequeue()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.Dequeue01">
            <summary>Sets the stub of FastQueue`1.Dequeue()</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.Enqueue(`0)">
            <summary>Sets the stub of FastQueue`1.Enqueue(!0 o)</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.EnqueueT0">
            <summary>Sets the stub of FastQueue`1.Enqueue(!0 o)</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.InitializeStub">
            <summary>Initializes a new instance of type StubFastQueue</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.ItemGetInt32">
            <summary>Sets the stub of FastQueue`1.get_Item(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.Peek">
            <summary>Sets the stub of FastQueue`1.Peek()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.Peek01">
            <summary>Sets the stub of FastQueue`1.Peek()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.RangeGet">
            <summary>Sets the stub of FastQueue`1.get_Range()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.RangeSetInt32">
            <summary>Sets the stub of FastQueue`1.set_Range(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.ToString">
            <summary>Sets the stub of FastQueue`1.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.ToString01">
            <summary>Sets the stub of FastQueue`1.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.Count">
            <summary>Sets the stub of FastQueue`1.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.Item(System.Int32)">
            <summary>Sets the stub of FastQueue`1.get_Item(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.StubFastQueue`1.Range">
            <summary>Sets the stub of FastQueue`1.get_Range()</summary>
        </member>
        <member name="T:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1">
            <summary>Stub type of Antlr.Runtime.Misc.LookaheadStream`1</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.AttachBackingFieldToRange">
            <summary>Attaches delegates to emulate StubLookaheadStream.Range as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Clear">
            <summary>Sets the stub of LookaheadStream`1.Clear()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Clear01">
            <summary>Sets the stub of LookaheadStream`1.Clear()</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Consume">
            <summary>Sets the stub of LookaheadStream`1.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Consume01">
            <summary>Sets the stub of LookaheadStream`1.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.CountGet">
            <summary>Sets the stub of LookaheadStream`1.get_Count()</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Dequeue">
            <summary>Sets the stub of LookaheadStream`1.Dequeue()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Dequeue01">
            <summary>Sets the stub of LookaheadStream`1.Dequeue()</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Enqueue(`0)">
            <summary>Sets the stub of FastQueue`1.Enqueue(!0 o)</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.EnqueueT0">
            <summary>Sets the stub of FastQueue`1.Enqueue(!0 o)</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Fill(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.Fill(Int32 n)</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.FillInt32">
            <summary>Sets the stub of LookaheadStream`1.Fill(Int32 n)</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.IndexGet">
            <summary>Sets the stub of LookaheadStream`1.get_Index()</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.InitializeStub">
            <summary>Initializes a new instance of type StubLookaheadStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.IsEndOfFile(`0)">
            <summary>Sets the stub of LookaheadStream`1.IsEndOfFile(!0 o)</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.IsEndOfFileT0">
            <summary>Sets the stub of LookaheadStream`1.IsEndOfFile(!0 o)</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.ItemGetInt32">
            <summary>Sets the stub of FastQueue`1.get_Item(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.LB(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.LB(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.LBInt32">
            <summary>Sets the stub of LookaheadStream`1.LB(Int32 k)</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.LT(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.LT(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.LTInt32">
            <summary>Sets the stub of LookaheadStream`1.LT(Int32 k)</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Mark">
            <summary>Sets the stub of LookaheadStream`1.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Mark01">
            <summary>Sets the stub of LookaheadStream`1.Mark()</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.NextElement">
            <summary>Sets the stub of LookaheadStream`1.NextElement()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.NextElement01">
            <summary>Sets the stub of LookaheadStream`1.NextElement()</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Peek">
            <summary>Sets the stub of FastQueue`1.Peek()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Peek01">
            <summary>Sets the stub of FastQueue`1.Peek()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.RangeGet">
            <summary>Sets the stub of FastQueue`1.get_Range()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.RangeSetInt32">
            <summary>Sets the stub of FastQueue`1.set_Range(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Release(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.Release(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.ReleaseInt32">
            <summary>Sets the stub of LookaheadStream`1.Release(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Rewind">
            <summary>Sets the stub of LookaheadStream`1.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Rewind(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.Rewind(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Rewind01">
            <summary>Sets the stub of LookaheadStream`1.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.RewindInt32">
            <summary>Sets the stub of LookaheadStream`1.Rewind(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Seek(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.SeekInt32">
            <summary>Sets the stub of LookaheadStream`1.Seek(Int32 index)</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.SyncAhead(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.SyncAhead(Int32 need)</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.SyncAheadInt32">
            <summary>Sets the stub of LookaheadStream`1.SyncAhead(Int32 need)</summary>
        </member>
        <member name="M:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.ToString">
            <summary>Sets the stub of FastQueue`1.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.ToString01">
            <summary>Sets the stub of FastQueue`1.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Count">
            <summary>Sets the stub of LookaheadStream`1.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Index">
            <summary>Sets the stub of LookaheadStream`1.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Item(System.Int32)">
            <summary>Sets the stub of FastQueue`1.get_Item(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Misc.Fakes.StubLookaheadStream`1.Range">
            <summary>Sets the stub of FastQueue`1.get_Range()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimBaseTree">
            <summary>Shim type of Antlr.Runtime.Tree.BaseTree</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimBaseTree.#ctor(Antlr.Runtime.Tree.BaseTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimBaseTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimBaseTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimBaseTree.Bind(Antlr.Runtime.Tree.ITree)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AddChildITree">
            <summary>Sets the shim of BaseTree.AddChild(ITree t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AddChildrenIEnumerableOfITree">
            <summary>Sets the shim of BaseTree.AddChildren(IEnumerable`1&lt;ITree&gt; kids)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.CharPositionInLineGet">
            <summary>Sets the shim of BaseTree.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.CharPositionInLineSetInt32">
            <summary>Sets the shim of BaseTree.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.ChildCountGet">
            <summary>Sets the shim of BaseTree.get_ChildCount()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.ChildIndexGet">
            <summary>Sets the shim of BaseTree.get_ChildIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.ChildIndexSetInt32">
            <summary>Sets the shim of BaseTree.set_ChildIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.ChildrenGet">
            <summary>Sets the shim of BaseTree.get_Children()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.ChildrenSetIListOfITree">
            <summary>Sets the shim of BaseTree.set_Children(IList`1&lt;ITree&gt; value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.Constructor">
            <summary>Sets the shim of BaseTree.BaseTree()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.ConstructorITree">
            <summary>Sets the shim of BaseTree.BaseTree(ITree node)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.CreateChildrenList">
            <summary>Sets the shim of BaseTree.CreateChildrenList()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.DeleteChildInt32">
            <summary>Sets the shim of BaseTree.DeleteChild(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.FreshenParentAndChildIndexes">
            <summary>Sets the shim of BaseTree.FreshenParentAndChildIndexes()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.FreshenParentAndChildIndexesInt32">
            <summary>Sets the shim of BaseTree.FreshenParentAndChildIndexes(Int32 offset)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.GetAncestorInt32">
            <summary>Sets the shim of BaseTree.GetAncestor(Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.GetAncestors">
            <summary>Sets the shim of BaseTree.GetAncestors()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.GetChildInt32">
            <summary>Sets the shim of BaseTree.GetChild(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.GetFirstChildWithTypeInt32">
            <summary>Sets the shim of BaseTree.GetFirstChildWithType(Int32 type)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.HasAncestorInt32">
            <summary>Sets the shim of BaseTree.HasAncestor(Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.IsNilGet">
            <summary>Sets the shim of BaseTree.get_IsNil()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.LineGet">
            <summary>Sets the shim of BaseTree.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.LineSetInt32">
            <summary>Sets the shim of BaseTree.set_Line(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.ParentGet">
            <summary>Sets the shim of BaseTree.get_Parent()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.ParentSetITree">
            <summary>Sets the shim of BaseTree.set_Parent(ITree value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.ReplaceChildrenInt32Int32Object">
            <summary>Sets the shim of BaseTree.ReplaceChildren(Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.SanityCheckParentAndChildIndexes">
            <summary>Sets the shim of BaseTree.SanityCheckParentAndChildIndexes()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.SanityCheckParentAndChildIndexesITreeInt32">
            <summary>Sets the shim of BaseTree.SanityCheckParentAndChildIndexes(ITree parent, Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.SetChildInt32ITree">
            <summary>Sets the shim of BaseTree.SetChild(Int32 i, ITree t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.ToStringTree">
            <summary>Sets the shim of BaseTree.ToStringTree()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.AddChildITree">
            <summary>Sets the shim of BaseTree.AddChild(ITree t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.AddChildrenIEnumerableOfITree">
            <summary>Sets the shim of BaseTree.AddChildren(IEnumerable`1&lt;ITree&gt; kids)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.CharPositionInLineGet">
            <summary>Sets the shim of BaseTree.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.CharPositionInLineSetInt32">
            <summary>Sets the shim of BaseTree.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.ChildCountGet">
            <summary>Sets the shim of BaseTree.get_ChildCount()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.ChildIndexGet">
            <summary>Sets the shim of BaseTree.get_ChildIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.ChildIndexSetInt32">
            <summary>Sets the shim of BaseTree.set_ChildIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.ChildrenGet">
            <summary>Sets the shim of BaseTree.get_Children()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.ChildrenSetIListOfITree">
            <summary>Sets the shim of BaseTree.set_Children(IList`1&lt;ITree&gt; value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.CreateChildrenList">
            <summary>Sets the shim of BaseTree.CreateChildrenList()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.DeleteChildInt32">
            <summary>Sets the shim of BaseTree.DeleteChild(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.FreshenParentAndChildIndexes">
            <summary>Sets the shim of BaseTree.FreshenParentAndChildIndexes()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.FreshenParentAndChildIndexesInt32">
            <summary>Sets the shim of BaseTree.FreshenParentAndChildIndexes(Int32 offset)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.GetAncestorInt32">
            <summary>Sets the shim of BaseTree.GetAncestor(Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.GetAncestors">
            <summary>Sets the shim of BaseTree.GetAncestors()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.GetChildInt32">
            <summary>Sets the shim of BaseTree.GetChild(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.GetFirstChildWithTypeInt32">
            <summary>Sets the shim of BaseTree.GetFirstChildWithType(Int32 type)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.HasAncestorInt32">
            <summary>Sets the shim of BaseTree.HasAncestor(Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.IsNilGet">
            <summary>Sets the shim of BaseTree.get_IsNil()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.LineGet">
            <summary>Sets the shim of BaseTree.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.LineSetInt32">
            <summary>Sets the shim of BaseTree.set_Line(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.ParentGet">
            <summary>Sets the shim of BaseTree.get_Parent()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.ParentSetITree">
            <summary>Sets the shim of BaseTree.set_Parent(ITree value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.ReplaceChildrenInt32Int32Object">
            <summary>Sets the shim of BaseTree.ReplaceChildren(Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.SanityCheckParentAndChildIndexes">
            <summary>Sets the shim of BaseTree.SanityCheckParentAndChildIndexes()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.SanityCheckParentAndChildIndexesITreeInt32">
            <summary>Sets the shim of BaseTree.SanityCheckParentAndChildIndexes(ITree parent, Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.SetChildInt32ITree">
            <summary>Sets the shim of BaseTree.SetChild(Int32 i, ITree t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTree.AllInstances.ToStringTree">
            <summary>Sets the shim of BaseTree.ToStringTree()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor">
            <summary>Shim type of Antlr.Runtime.Tree.BaseTreeAdaptor</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.#ctor(Antlr.Runtime.Tree.BaseTreeAdaptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.Bind(Antlr.Runtime.Tree.ITreeAdaptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AddChildObjectObject">
            <summary>Sets the shim of BaseTreeAdaptor.AddChild(Object t, Object child)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.BecomeRootITokenObject">
            <summary>Sets the shim of BaseTreeAdaptor.BecomeRoot(IToken newRoot, Object oldRoot)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.BecomeRootObjectObject">
            <summary>Sets the shim of BaseTreeAdaptor.BecomeRoot(Object newRoot, Object oldRoot)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.Constructor">
            <summary>Sets the shim of BaseTreeAdaptor.BaseTreeAdaptor()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.CreateITokenString">
            <summary>Sets the shim of BaseTreeAdaptor.Create(IToken fromToken, String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.CreateInt32IToken">
            <summary>Sets the shim of BaseTreeAdaptor.Create(Int32 tokenType, IToken fromToken)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.CreateInt32ITokenString">
            <summary>Sets the shim of BaseTreeAdaptor.Create(Int32 tokenType, IToken fromToken, String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.CreateInt32String">
            <summary>Sets the shim of BaseTreeAdaptor.Create(Int32 tokenType, String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.DeleteChildObjectInt32">
            <summary>Sets the shim of BaseTreeAdaptor.DeleteChild(Object t, Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.DupNodeInt32Object">
            <summary>Sets the shim of BaseTreeAdaptor.DupNode(Int32 type, Object treeNode)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.DupNodeInt32ObjectString">
            <summary>Sets the shim of BaseTreeAdaptor.DupNode(Int32 type, Object treeNode, String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.DupNodeObject">
            <summary>Sets the shim of BaseTreeAdaptor.DupNode(Object treeNode)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.DupNodeObjectString">
            <summary>Sets the shim of BaseTreeAdaptor.DupNode(Object treeNode, String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.DupTreeObject">
            <summary>Sets the shim of BaseTreeAdaptor.DupTree(Object tree)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.DupTreeObjectObject">
            <summary>Sets the shim of BaseTreeAdaptor.DupTree(Object t, Object parent)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.ErrorNodeITokenStreamITokenITokenRecognitionException">
            <summary>Sets the shim of BaseTreeAdaptor.ErrorNode(ITokenStream input, IToken start, IToken stop, RecognitionException e)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.GetChildCountObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetChildCount(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.GetChildIndexObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetChildIndex(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.GetChildObjectInt32">
            <summary>Sets the shim of BaseTreeAdaptor.GetChild(Object t, Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.GetParentObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetParent(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.GetTextObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetText(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.GetTokenStartIndexObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetTokenStartIndex(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.GetTokenStopIndexObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetTokenStopIndex(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.GetTreeObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetTree(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.GetTypeObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetType(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.GetUniqueIDObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetUniqueID(Object node)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.IsNilObject">
            <summary>Sets the shim of BaseTreeAdaptor.IsNil(Object tree)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.Nil">
            <summary>Sets the shim of BaseTreeAdaptor.Nil()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.ReplaceChildrenObjectInt32Int32Object">
            <summary>Sets the shim of BaseTreeAdaptor.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.RulePostProcessingObject">
            <summary>Sets the shim of BaseTreeAdaptor.RulePostProcessing(Object root)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.SetChildIndexObjectInt32">
            <summary>Sets the shim of BaseTreeAdaptor.SetChildIndex(Object t, Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.SetChildObjectInt32Object">
            <summary>Sets the shim of BaseTreeAdaptor.SetChild(Object t, Int32 i, Object child)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.SetParentObjectObject">
            <summary>Sets the shim of BaseTreeAdaptor.SetParent(Object t, Object parent)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.SetTextObjectString">
            <summary>Sets the shim of BaseTreeAdaptor.SetText(Object t, String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.SetTokenBoundariesObjectITokenIToken">
            <summary>Sets the shim of BaseTreeAdaptor.SetTokenBoundaries(Object t, IToken startToken, IToken stopToken)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.SetTypeObjectInt32">
            <summary>Sets the shim of BaseTreeAdaptor.SetType(Object t, Int32 type)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.AddChildObjectObject">
            <summary>Sets the shim of BaseTreeAdaptor.AddChild(Object t, Object child)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.BecomeRootITokenObject">
            <summary>Sets the shim of BaseTreeAdaptor.BecomeRoot(IToken newRoot, Object oldRoot)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.BecomeRootObjectObject">
            <summary>Sets the shim of BaseTreeAdaptor.BecomeRoot(Object newRoot, Object oldRoot)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.CreateITokenString">
            <summary>Sets the shim of BaseTreeAdaptor.Create(IToken fromToken, String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.CreateInt32IToken">
            <summary>Sets the shim of BaseTreeAdaptor.Create(Int32 tokenType, IToken fromToken)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.CreateInt32ITokenString">
            <summary>Sets the shim of BaseTreeAdaptor.Create(Int32 tokenType, IToken fromToken, String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.CreateInt32String">
            <summary>Sets the shim of BaseTreeAdaptor.Create(Int32 tokenType, String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.DeleteChildObjectInt32">
            <summary>Sets the shim of BaseTreeAdaptor.DeleteChild(Object t, Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.DupNodeInt32Object">
            <summary>Sets the shim of BaseTreeAdaptor.DupNode(Int32 type, Object treeNode)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.DupNodeInt32ObjectString">
            <summary>Sets the shim of BaseTreeAdaptor.DupNode(Int32 type, Object treeNode, String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.DupNodeObject">
            <summary>Sets the shim of BaseTreeAdaptor.DupNode(Object treeNode)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.DupNodeObjectString">
            <summary>Sets the shim of BaseTreeAdaptor.DupNode(Object treeNode, String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.DupTreeObject">
            <summary>Sets the shim of BaseTreeAdaptor.DupTree(Object tree)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.DupTreeObjectObject">
            <summary>Sets the shim of BaseTreeAdaptor.DupTree(Object t, Object parent)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.ErrorNodeITokenStreamITokenITokenRecognitionException">
            <summary>Sets the shim of BaseTreeAdaptor.ErrorNode(ITokenStream input, IToken start, IToken stop, RecognitionException e)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.GetChildCountObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetChildCount(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.GetChildIndexObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetChildIndex(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.GetChildObjectInt32">
            <summary>Sets the shim of BaseTreeAdaptor.GetChild(Object t, Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.GetParentObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetParent(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.GetTextObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetText(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.GetTokenStartIndexObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetTokenStartIndex(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.GetTokenStopIndexObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetTokenStopIndex(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.GetTreeObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetTree(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.GetTypeObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetType(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.GetUniqueIDObject">
            <summary>Sets the shim of BaseTreeAdaptor.GetUniqueID(Object node)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.IsNilObject">
            <summary>Sets the shim of BaseTreeAdaptor.IsNil(Object tree)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.Nil">
            <summary>Sets the shim of BaseTreeAdaptor.Nil()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.ReplaceChildrenObjectInt32Int32Object">
            <summary>Sets the shim of BaseTreeAdaptor.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.RulePostProcessingObject">
            <summary>Sets the shim of BaseTreeAdaptor.RulePostProcessing(Object root)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.SetChildIndexObjectInt32">
            <summary>Sets the shim of BaseTreeAdaptor.SetChildIndex(Object t, Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.SetChildObjectInt32Object">
            <summary>Sets the shim of BaseTreeAdaptor.SetChild(Object t, Int32 i, Object child)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.SetParentObjectObject">
            <summary>Sets the shim of BaseTreeAdaptor.SetParent(Object t, Object parent)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.SetTextObjectString">
            <summary>Sets the shim of BaseTreeAdaptor.SetText(Object t, String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.SetTokenBoundariesObjectITokenIToken">
            <summary>Sets the shim of BaseTreeAdaptor.SetTokenBoundaries(Object t, IToken startToken, IToken stopToken)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBaseTreeAdaptor.AllInstances.SetTypeObjectInt32">
            <summary>Sets the shim of BaseTreeAdaptor.SetType(Object t, Int32 type)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream">
            <summary>Shim type of Antlr.Runtime.Tree.BufferedTreeNodeStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.#ctor(Antlr.Runtime.Tree.BufferedTreeNodeStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.Bind(Antlr.Runtime.IIntStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.Bind(Antlr.Runtime.ITokenStreamInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.Bind(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AddNavigationNodeInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.AddNavigationNode(Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.ConstructorITreeAdaptorObject">
            <summary>Sets the shim of BufferedTreeNodeStream.BufferedTreeNodeStream(ITreeAdaptor adaptor, Object tree)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.ConstructorITreeAdaptorObjectInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.BufferedTreeNodeStream(ITreeAdaptor adaptor, Object tree, Int32 initialBufferSize)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.ConstructorObject">
            <summary>Sets the shim of BufferedTreeNodeStream.BufferedTreeNodeStream(Object tree)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.Consume">
            <summary>Sets the shim of BufferedTreeNodeStream.Consume()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.CountGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.FillBuffer">
            <summary>Sets the shim of BufferedTreeNodeStream.FillBuffer()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.FillBufferObject">
            <summary>Sets the shim of BufferedTreeNodeStream.FillBuffer(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.GetCurrentSymbol">
            <summary>Sets the shim of BufferedTreeNodeStream.GetCurrentSymbol()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.GetNodeIndexObject">
            <summary>Sets the shim of BufferedTreeNodeStream.GetNodeIndex(Object node)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.IndexGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.ItemGetInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.get_Item(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.Iterator">
            <summary>Sets the shim of BufferedTreeNodeStream.Iterator()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.LAInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.LA(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.LBInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.LB(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.LTInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.LT(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.LastRealTokenGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_LastRealToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.LastTokenGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_LastToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.Mark">
            <summary>Sets the shim of BufferedTreeNodeStream.Mark()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.MaxLookBehindGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_MaxLookBehind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.Pop">
            <summary>Sets the shim of BufferedTreeNodeStream.Pop()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.PushInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.Push(Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.ReleaseInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.Release(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.ReplaceChildrenObjectInt32Int32Object">
            <summary>Sets the shim of BufferedTreeNodeStream.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.Reset">
            <summary>Sets the shim of BufferedTreeNodeStream.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.Rewind">
            <summary>Sets the shim of BufferedTreeNodeStream.Rewind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.RewindInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.SeekInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.Seek(Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.SourceNameGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.ToStringObjectObject">
            <summary>Sets the shim of BufferedTreeNodeStream.ToString(Object start, Object stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.ToTokenStringInt32Int32">
            <summary>Sets the shim of BufferedTreeNodeStream.ToTokenString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.ToTokenTypeString">
            <summary>Sets the shim of BufferedTreeNodeStream.ToTokenTypeString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.TokenStreamGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_TokenStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.TokenStreamSetITokenStream">
            <summary>Sets the shim of BufferedTreeNodeStream.set_TokenStream(ITokenStream value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.TreeAdaptorGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_TreeAdaptor()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.TreeAdaptorSetITreeAdaptor">
            <summary>Sets the shim of BufferedTreeNodeStream.set_TreeAdaptor(ITreeAdaptor value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.TreeSourceGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_TreeSource()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.UniqueNavigationNodesGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_UniqueNavigationNodes()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.UniqueNavigationNodesSetBoolean">
            <summary>Sets the shim of BufferedTreeNodeStream.set_UniqueNavigationNodes(Boolean value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.AddNavigationNodeInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.AddNavigationNode(Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.Consume">
            <summary>Sets the shim of BufferedTreeNodeStream.Consume()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.CountGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.FillBuffer">
            <summary>Sets the shim of BufferedTreeNodeStream.FillBuffer()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.FillBufferObject">
            <summary>Sets the shim of BufferedTreeNodeStream.FillBuffer(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.GetCurrentSymbol">
            <summary>Sets the shim of BufferedTreeNodeStream.GetCurrentSymbol()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.GetNodeIndexObject">
            <summary>Sets the shim of BufferedTreeNodeStream.GetNodeIndex(Object node)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.IndexGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.ItemGetInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.get_Item(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.Iterator">
            <summary>Sets the shim of BufferedTreeNodeStream.Iterator()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.LAInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.LA(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.LBInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.LB(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.LTInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.LT(Int32 k)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.LastRealTokenGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_LastRealToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.LastTokenGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_LastToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.Mark">
            <summary>Sets the shim of BufferedTreeNodeStream.Mark()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.MaxLookBehindGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_MaxLookBehind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.Pop">
            <summary>Sets the shim of BufferedTreeNodeStream.Pop()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.PushInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.Push(Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.ReleaseInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.Release(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.ReplaceChildrenObjectInt32Int32Object">
            <summary>Sets the shim of BufferedTreeNodeStream.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.Reset">
            <summary>Sets the shim of BufferedTreeNodeStream.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.Rewind">
            <summary>Sets the shim of BufferedTreeNodeStream.Rewind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.RewindInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.SeekInt32">
            <summary>Sets the shim of BufferedTreeNodeStream.Seek(Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.SourceNameGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.ToStringObjectObject">
            <summary>Sets the shim of BufferedTreeNodeStream.ToString(Object start, Object stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.ToTokenStringInt32Int32">
            <summary>Sets the shim of BufferedTreeNodeStream.ToTokenString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.ToTokenTypeString">
            <summary>Sets the shim of BufferedTreeNodeStream.ToTokenTypeString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.TokenStreamGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_TokenStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.TokenStreamSetITokenStream">
            <summary>Sets the shim of BufferedTreeNodeStream.set_TokenStream(ITokenStream value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.TreeAdaptorGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_TreeAdaptor()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.TreeAdaptorSetITreeAdaptor">
            <summary>Sets the shim of BufferedTreeNodeStream.set_TreeAdaptor(ITreeAdaptor value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.TreeSourceGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_TreeSource()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.UniqueNavigationNodesGet">
            <summary>Sets the shim of BufferedTreeNodeStream.get_UniqueNavigationNodes()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimBufferedTreeNodeStream.AllInstances.UniqueNavigationNodesSetBoolean">
            <summary>Sets the shim of BufferedTreeNodeStream.set_UniqueNavigationNodes(Boolean value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode">
            <summary>Shim type of Antlr.Runtime.Tree.CommonErrorNode</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.#ctor(Antlr.Runtime.Tree.CommonErrorNode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.Bind(Antlr.Runtime.Tree.ITree)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.ConstructorITokenStreamITokenITokenRecognitionException">
            <summary>Sets the shim of CommonErrorNode.CommonErrorNode(ITokenStream input, IToken start, IToken stop, RecognitionException e)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.IsNilGet">
            <summary>Sets the shim of CommonErrorNode.get_IsNil()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.TextGet">
            <summary>Sets the shim of CommonErrorNode.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.TextSetString">
            <summary>Sets the shim of CommonErrorNode.set_Text(String value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.ToString">
            <summary>Sets the shim of CommonErrorNode.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.TypeGet">
            <summary>Sets the shim of CommonErrorNode.get_Type()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.TypeSetInt32">
            <summary>Sets the shim of CommonErrorNode.set_Type(Int32 value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.AllInstances.IsNilGet">
            <summary>Sets the shim of CommonErrorNode.get_IsNil()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.AllInstances.TextGet">
            <summary>Sets the shim of CommonErrorNode.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.AllInstances.TextSetString">
            <summary>Sets the shim of CommonErrorNode.set_Text(String value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.AllInstances.ToString01">
            <summary>Sets the shim of CommonErrorNode.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.AllInstances.TypeGet">
            <summary>Sets the shim of CommonErrorNode.get_Type()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonErrorNode.AllInstances.TypeSetInt32">
            <summary>Sets the shim of CommonErrorNode.set_Type(Int32 value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimCommonTree">
            <summary>Shim type of Antlr.Runtime.Tree.CommonTree</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonTree.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonTree.#ctor(Antlr.Runtime.Tree.CommonTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonTree.Bind(Antlr.Runtime.Tree.ITree)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.CharPositionInLineGet">
            <summary>Sets the shim of CommonTree.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.CharPositionInLineSetInt32">
            <summary>Sets the shim of CommonTree.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.ChildIndexGet">
            <summary>Sets the shim of CommonTree.get_ChildIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.ChildIndexSetInt32">
            <summary>Sets the shim of CommonTree.set_ChildIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.Constructor">
            <summary>Sets the shim of CommonTree.CommonTree()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.ConstructorCommonTree">
            <summary>Sets the shim of CommonTree.CommonTree(CommonTree node)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.ConstructorIToken">
            <summary>Sets the shim of CommonTree.CommonTree(IToken t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.DupNode">
            <summary>Sets the shim of CommonTree.DupNode()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.IsNilGet">
            <summary>Sets the shim of CommonTree.get_IsNil()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.LineGet">
            <summary>Sets the shim of CommonTree.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.LineSetInt32">
            <summary>Sets the shim of CommonTree.set_Line(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.ParentGet">
            <summary>Sets the shim of CommonTree.get_Parent()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.ParentSetITree">
            <summary>Sets the shim of CommonTree.set_Parent(ITree value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.SetUnknownTokenBoundaries">
            <summary>Sets the shim of CommonTree.SetUnknownTokenBoundaries()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.TextGet">
            <summary>Sets the shim of CommonTree.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.TextSetString">
            <summary>Sets the shim of CommonTree.set_Text(String value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.ToString">
            <summary>Sets the shim of CommonTree.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.TokenGet">
            <summary>Sets the shim of CommonTree.get_Token()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.TokenSetIToken">
            <summary>Sets the shim of CommonTree.set_Token(IToken value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.TokenStartIndexGet">
            <summary>Sets the shim of CommonTree.get_TokenStartIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.TokenStartIndexSetInt32">
            <summary>Sets the shim of CommonTree.set_TokenStartIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.TokenStopIndexGet">
            <summary>Sets the shim of CommonTree.get_TokenStopIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.TokenStopIndexSetInt32">
            <summary>Sets the shim of CommonTree.set_TokenStopIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.TypeGet">
            <summary>Sets the shim of CommonTree.get_Type()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.TypeSetInt32">
            <summary>Sets the shim of CommonTree.set_Type(Int32 value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.CharPositionInLineGet">
            <summary>Sets the shim of CommonTree.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.CharPositionInLineSetInt32">
            <summary>Sets the shim of CommonTree.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.ChildIndexGet">
            <summary>Sets the shim of CommonTree.get_ChildIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.ChildIndexSetInt32">
            <summary>Sets the shim of CommonTree.set_ChildIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.DupNode">
            <summary>Sets the shim of CommonTree.DupNode()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.IsNilGet">
            <summary>Sets the shim of CommonTree.get_IsNil()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.LineGet">
            <summary>Sets the shim of CommonTree.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.LineSetInt32">
            <summary>Sets the shim of CommonTree.set_Line(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.ParentGet">
            <summary>Sets the shim of CommonTree.get_Parent()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.ParentSetITree">
            <summary>Sets the shim of CommonTree.set_Parent(ITree value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.SetUnknownTokenBoundaries">
            <summary>Sets the shim of CommonTree.SetUnknownTokenBoundaries()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.TextGet">
            <summary>Sets the shim of CommonTree.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.TextSetString">
            <summary>Sets the shim of CommonTree.set_Text(String value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.ToString01">
            <summary>Sets the shim of CommonTree.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.TokenGet">
            <summary>Sets the shim of CommonTree.get_Token()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.TokenSetIToken">
            <summary>Sets the shim of CommonTree.set_Token(IToken value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.TokenStartIndexGet">
            <summary>Sets the shim of CommonTree.get_TokenStartIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.TokenStartIndexSetInt32">
            <summary>Sets the shim of CommonTree.set_TokenStartIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.TokenStopIndexGet">
            <summary>Sets the shim of CommonTree.get_TokenStopIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.TokenStopIndexSetInt32">
            <summary>Sets the shim of CommonTree.set_TokenStopIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.TypeGet">
            <summary>Sets the shim of CommonTree.get_Type()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTree.AllInstances.TypeSetInt32">
            <summary>Sets the shim of CommonTree.set_Type(Int32 value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor">
            <summary>Shim type of Antlr.Runtime.Tree.CommonTreeAdaptor</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor.#ctor(Antlr.Runtime.Tree.CommonTreeAdaptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor.Bind(Antlr.Runtime.Tree.ITreeAdaptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor.Constructor">
            <summary>Sets the shim of CommonTreeAdaptor.CommonTreeAdaptor()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor.CreateIToken">
            <summary>Sets the shim of CommonTreeAdaptor.Create(IToken payload)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor.CreateTokenIToken">
            <summary>Sets the shim of CommonTreeAdaptor.CreateToken(IToken fromToken)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor.CreateTokenInt32String">
            <summary>Sets the shim of CommonTreeAdaptor.CreateToken(Int32 tokenType, String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor.GetTokenObject">
            <summary>Sets the shim of CommonTreeAdaptor.GetToken(Object t)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor.AllInstances.CreateIToken">
            <summary>Sets the shim of CommonTreeAdaptor.Create(IToken payload)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor.AllInstances.CreateTokenIToken">
            <summary>Sets the shim of CommonTreeAdaptor.CreateToken(IToken fromToken)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor.AllInstances.CreateTokenInt32String">
            <summary>Sets the shim of CommonTreeAdaptor.CreateToken(Int32 tokenType, String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeAdaptor.AllInstances.GetTokenObject">
            <summary>Sets the shim of CommonTreeAdaptor.GetToken(Object t)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream">
            <summary>Shim type of Antlr.Runtime.Tree.CommonTreeNodeStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.#ctor(Antlr.Runtime.Tree.CommonTreeNodeStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.Bind(Antlr.Runtime.IIntStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.Bind(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.ConstructorITreeAdaptorObject">
            <summary>Sets the shim of CommonTreeNodeStream.CommonTreeNodeStream(ITreeAdaptor adaptor, Object tree)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.ConstructorObject">
            <summary>Sets the shim of CommonTreeNodeStream.CommonTreeNodeStream(Object tree)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.IsEndOfFileObject">
            <summary>Sets the shim of CommonTreeNodeStream.IsEndOfFile(Object o)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.LAInt32">
            <summary>Sets the shim of CommonTreeNodeStream.LA(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.NextElement">
            <summary>Sets the shim of CommonTreeNodeStream.NextElement()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.Pop">
            <summary>Sets the shim of CommonTreeNodeStream.Pop()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.PushInt32">
            <summary>Sets the shim of CommonTreeNodeStream.Push(Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.ReplaceChildrenObjectInt32Int32Object">
            <summary>Sets the shim of CommonTreeNodeStream.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.Reset">
            <summary>Sets the shim of CommonTreeNodeStream.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.SourceNameGet">
            <summary>Sets the shim of CommonTreeNodeStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.ToStringObjectObject">
            <summary>Sets the shim of CommonTreeNodeStream.ToString(Object start, Object stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.ToTokenTypeString">
            <summary>Sets the shim of CommonTreeNodeStream.ToTokenTypeString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.TokenStreamGet">
            <summary>Sets the shim of CommonTreeNodeStream.get_TokenStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.TokenStreamSetITokenStream">
            <summary>Sets the shim of CommonTreeNodeStream.set_TokenStream(ITokenStream value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.TreeAdaptorGet">
            <summary>Sets the shim of CommonTreeNodeStream.get_TreeAdaptor()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.TreeAdaptorSetITreeAdaptor">
            <summary>Sets the shim of CommonTreeNodeStream.set_TreeAdaptor(ITreeAdaptor value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.TreeSourceGet">
            <summary>Sets the shim of CommonTreeNodeStream.get_TreeSource()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.UniqueNavigationNodesGet">
            <summary>Sets the shim of CommonTreeNodeStream.get_UniqueNavigationNodes()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.UniqueNavigationNodesSetBoolean">
            <summary>Sets the shim of CommonTreeNodeStream.set_UniqueNavigationNodes(Boolean value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.IsEndOfFileObject">
            <summary>Sets the shim of CommonTreeNodeStream.IsEndOfFile(Object o)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.LAInt32">
            <summary>Sets the shim of CommonTreeNodeStream.LA(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.NextElement">
            <summary>Sets the shim of CommonTreeNodeStream.NextElement()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.Pop">
            <summary>Sets the shim of CommonTreeNodeStream.Pop()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.PushInt32">
            <summary>Sets the shim of CommonTreeNodeStream.Push(Int32 index)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.ReplaceChildrenObjectInt32Int32Object">
            <summary>Sets the shim of CommonTreeNodeStream.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.Reset">
            <summary>Sets the shim of CommonTreeNodeStream.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.SourceNameGet">
            <summary>Sets the shim of CommonTreeNodeStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.ToStringObjectObject">
            <summary>Sets the shim of CommonTreeNodeStream.ToString(Object start, Object stop)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.ToTokenTypeString">
            <summary>Sets the shim of CommonTreeNodeStream.ToTokenTypeString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.TokenStreamGet">
            <summary>Sets the shim of CommonTreeNodeStream.get_TokenStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.TokenStreamSetITokenStream">
            <summary>Sets the shim of CommonTreeNodeStream.set_TokenStream(ITokenStream value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.TreeAdaptorGet">
            <summary>Sets the shim of CommonTreeNodeStream.get_TreeAdaptor()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.TreeAdaptorSetITreeAdaptor">
            <summary>Sets the shim of CommonTreeNodeStream.set_TreeAdaptor(ITreeAdaptor value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.TreeSourceGet">
            <summary>Sets the shim of CommonTreeNodeStream.get_TreeSource()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.UniqueNavigationNodesGet">
            <summary>Sets the shim of CommonTreeNodeStream.get_UniqueNavigationNodes()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimCommonTreeNodeStream.AllInstances.UniqueNavigationNodesSetBoolean">
            <summary>Sets the shim of CommonTreeNodeStream.set_UniqueNavigationNodes(Boolean value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator">
            <summary>Shim type of Antlr.Runtime.Tree.DotTreeGenerator</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.#ctor(Antlr.Runtime.Tree.DotTreeGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.Constructor">
            <summary>Sets the shim of DotTreeGenerator.DotTreeGenerator()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.DefineEdgesObjectITreeAdaptor">
            <summary>Sets the shim of DotTreeGenerator.DefineEdges(Object tree, ITreeAdaptor adaptor)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.DefineNodesObjectITreeAdaptor">
            <summary>Sets the shim of DotTreeGenerator.DefineNodes(Object tree, ITreeAdaptor adaptor)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.FixStringString">
            <summary>Sets the shim of DotTreeGenerator.FixString(String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.GetNodeNumberObject">
            <summary>Sets the shim of DotTreeGenerator.GetNodeNumber(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.GetNodeTextITreeAdaptorObject">
            <summary>Sets the shim of DotTreeGenerator.GetNodeText(ITreeAdaptor adaptor, Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.ToDotITree">
            <summary>Sets the shim of DotTreeGenerator.ToDot(ITree tree)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.ToDotObjectITreeAdaptor">
            <summary>Sets the shim of DotTreeGenerator.ToDot(Object tree, ITreeAdaptor adaptor)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.AllInstances.DefineEdgesObjectITreeAdaptor">
            <summary>Sets the shim of DotTreeGenerator.DefineEdges(Object tree, ITreeAdaptor adaptor)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.AllInstances.DefineNodesObjectITreeAdaptor">
            <summary>Sets the shim of DotTreeGenerator.DefineNodes(Object tree, ITreeAdaptor adaptor)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.AllInstances.FixStringString">
            <summary>Sets the shim of DotTreeGenerator.FixString(String text)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.AllInstances.GetNodeNumberObject">
            <summary>Sets the shim of DotTreeGenerator.GetNodeNumber(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.AllInstances.GetNodeTextITreeAdaptorObject">
            <summary>Sets the shim of DotTreeGenerator.GetNodeText(ITreeAdaptor adaptor, Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.AllInstances.ToDotITree">
            <summary>Sets the shim of DotTreeGenerator.ToDot(ITree tree)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimDotTreeGenerator.AllInstances.ToDotObjectITreeAdaptor">
            <summary>Sets the shim of DotTreeGenerator.ToDot(Object tree, ITreeAdaptor adaptor)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimParseTree">
            <summary>Shim type of Antlr.Runtime.Tree.ParseTree</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimParseTree.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimParseTree.#ctor(Antlr.Runtime.Tree.ParseTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimParseTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimParseTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimParseTree.Bind(Antlr.Runtime.Tree.ITree)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.ConstructorObject">
            <summary>Sets the shim of ParseTree.ParseTree(Object label)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.DupNode">
            <summary>Sets the shim of ParseTree.DupNode()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.TextGet">
            <summary>Sets the shim of ParseTree.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.TextSetString">
            <summary>Sets the shim of ParseTree.set_Text(String value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.ToInputString">
            <summary>Sets the shim of ParseTree.ToInputString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.ToString">
            <summary>Sets the shim of ParseTree.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.ToStringLeavesStringBuilder">
            <summary>Sets the shim of ParseTree.ToStringLeaves(StringBuilder buf)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.ToStringWithHiddenTokens">
            <summary>Sets the shim of ParseTree.ToStringWithHiddenTokens()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.TokenStartIndexGet">
            <summary>Sets the shim of ParseTree.get_TokenStartIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.TokenStartIndexSetInt32">
            <summary>Sets the shim of ParseTree.set_TokenStartIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.TokenStopIndexGet">
            <summary>Sets the shim of ParseTree.get_TokenStopIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.TokenStopIndexSetInt32">
            <summary>Sets the shim of ParseTree.set_TokenStopIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.TypeGet">
            <summary>Sets the shim of ParseTree.get_Type()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.TypeSetInt32">
            <summary>Sets the shim of ParseTree.set_Type(Int32 value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimParseTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.AllInstances.DupNode">
            <summary>Sets the shim of ParseTree.DupNode()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.AllInstances.TextGet">
            <summary>Sets the shim of ParseTree.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.AllInstances.TextSetString">
            <summary>Sets the shim of ParseTree.set_Text(String value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.AllInstances.ToInputString">
            <summary>Sets the shim of ParseTree.ToInputString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.AllInstances.ToString01">
            <summary>Sets the shim of ParseTree.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.AllInstances.ToStringLeavesStringBuilder">
            <summary>Sets the shim of ParseTree.ToStringLeaves(StringBuilder buf)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.AllInstances.ToStringWithHiddenTokens">
            <summary>Sets the shim of ParseTree.ToStringWithHiddenTokens()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.AllInstances.TokenStartIndexGet">
            <summary>Sets the shim of ParseTree.get_TokenStartIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.AllInstances.TokenStartIndexSetInt32">
            <summary>Sets the shim of ParseTree.set_TokenStartIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.AllInstances.TokenStopIndexGet">
            <summary>Sets the shim of ParseTree.get_TokenStopIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.AllInstances.TokenStopIndexSetInt32">
            <summary>Sets the shim of ParseTree.set_TokenStopIndex(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.AllInstances.TypeGet">
            <summary>Sets the shim of ParseTree.get_Type()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimParseTree.AllInstances.TypeSetInt32">
            <summary>Sets the shim of ParseTree.set_Type(Int32 value)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimRewriteCardinalityException">
            <summary>Shim type of Antlr.Runtime.Tree.RewriteCardinalityException</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteCardinalityException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteCardinalityException.#ctor(Antlr.Runtime.Tree.RewriteCardinalityException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteCardinalityException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteCardinalityException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteCardinalityException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteCardinalityException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteCardinalityException.Constructor">
            <summary>Sets the shim of RewriteCardinalityException.RewriteCardinalityException()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteCardinalityException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of RewriteCardinalityException.RewriteCardinalityException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteCardinalityException.ConstructorString">
            <summary>Sets the shim of RewriteCardinalityException.RewriteCardinalityException(String elementDescription)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteCardinalityException.ConstructorStringException">
            <summary>Sets the shim of RewriteCardinalityException.RewriteCardinalityException(String elementDescription, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteCardinalityException.ConstructorStringString">
            <summary>Sets the shim of RewriteCardinalityException.RewriteCardinalityException(String message, String elementDescription)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteCardinalityException.ConstructorStringStringException">
            <summary>Sets the shim of RewriteCardinalityException.RewriteCardinalityException(String message, String elementDescription, Exception innerException)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimRewriteCardinalityException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimRewriteEarlyExitException">
            <summary>Shim type of Antlr.Runtime.Tree.RewriteEarlyExitException</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteEarlyExitException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteEarlyExitException.#ctor(Antlr.Runtime.Tree.RewriteEarlyExitException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteEarlyExitException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteEarlyExitException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteEarlyExitException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteEarlyExitException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteEarlyExitException.Constructor">
            <summary>Sets the shim of RewriteEarlyExitException.RewriteEarlyExitException()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteEarlyExitException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of RewriteEarlyExitException.RewriteEarlyExitException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteEarlyExitException.ConstructorString">
            <summary>Sets the shim of RewriteEarlyExitException.RewriteEarlyExitException(String elementDescription)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteEarlyExitException.ConstructorStringException">
            <summary>Sets the shim of RewriteEarlyExitException.RewriteEarlyExitException(String elementDescription, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteEarlyExitException.ConstructorStringString">
            <summary>Sets the shim of RewriteEarlyExitException.RewriteEarlyExitException(String message, String elementDescription)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteEarlyExitException.ConstructorStringStringException">
            <summary>Sets the shim of RewriteEarlyExitException.RewriteEarlyExitException(String message, String elementDescription, Exception innerException)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimRewriteEarlyExitException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimRewriteEmptyStreamException">
            <summary>Shim type of Antlr.Runtime.Tree.RewriteEmptyStreamException</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteEmptyStreamException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteEmptyStreamException.#ctor(Antlr.Runtime.Tree.RewriteEmptyStreamException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteEmptyStreamException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteEmptyStreamException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteEmptyStreamException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteEmptyStreamException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteEmptyStreamException.Constructor">
            <summary>Sets the shim of RewriteEmptyStreamException.RewriteEmptyStreamException()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteEmptyStreamException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of RewriteEmptyStreamException.RewriteEmptyStreamException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteEmptyStreamException.ConstructorString">
            <summary>Sets the shim of RewriteEmptyStreamException.RewriteEmptyStreamException(String elementDescription)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteEmptyStreamException.ConstructorStringException">
            <summary>Sets the shim of RewriteEmptyStreamException.RewriteEmptyStreamException(String elementDescription, Exception innerException)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteEmptyStreamException.ConstructorStringString">
            <summary>Sets the shim of RewriteEmptyStreamException.RewriteEmptyStreamException(String message, String elementDescription)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteEmptyStreamException.ConstructorStringStringException">
            <summary>Sets the shim of RewriteEmptyStreamException.RewriteEmptyStreamException(String message, String elementDescription, Exception innerException)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimRewriteEmptyStreamException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream">
            <summary>Shim type of Antlr.Runtime.Tree.RewriteRuleElementStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.#ctor(Antlr.Runtime.Tree.RewriteRuleElementStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.AddObject">
            <summary>Sets the shim of RewriteRuleElementStream.Add(Object el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.ConstructorITreeAdaptorString">
            <summary>Sets the shim of RewriteRuleElementStream.RewriteRuleElementStream(ITreeAdaptor adaptor, String elementDescription)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.ConstructorITreeAdaptorStringIList">
            <summary>Sets the shim of RewriteRuleElementStream.RewriteRuleElementStream(ITreeAdaptor adaptor, String elementDescription, IList elements)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.ConstructorITreeAdaptorStringObject">
            <summary>Sets the shim of RewriteRuleElementStream.RewriteRuleElementStream(ITreeAdaptor adaptor, String elementDescription, Object oneElement)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.CountGet">
            <summary>Sets the shim of RewriteRuleElementStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.DescriptionGet">
            <summary>Sets the shim of RewriteRuleElementStream.get_Description()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.HasNextGet">
            <summary>Sets the shim of RewriteRuleElementStream.get_HasNext()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.NextCore">
            <summary>Sets the shim of RewriteRuleElementStream.NextCore()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.NextTree">
            <summary>Sets the shim of RewriteRuleElementStream.NextTree()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.Reset">
            <summary>Sets the shim of RewriteRuleElementStream.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.ToTreeObject">
            <summary>Sets the shim of RewriteRuleElementStream.ToTree(Object el)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.AllInstances.AddObject">
            <summary>Sets the shim of RewriteRuleElementStream.Add(Object el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.AllInstances.CountGet">
            <summary>Sets the shim of RewriteRuleElementStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.AllInstances.DescriptionGet">
            <summary>Sets the shim of RewriteRuleElementStream.get_Description()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.AllInstances.HasNextGet">
            <summary>Sets the shim of RewriteRuleElementStream.get_HasNext()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.AllInstances.NextCore">
            <summary>Sets the shim of RewriteRuleElementStream.NextCore()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.AllInstances.NextTree">
            <summary>Sets the shim of RewriteRuleElementStream.NextTree()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.AllInstances.Reset">
            <summary>Sets the shim of RewriteRuleElementStream.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleElementStream.AllInstances.ToTreeObject">
            <summary>Sets the shim of RewriteRuleElementStream.ToTree(Object el)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleNodeStream">
            <summary>Shim type of Antlr.Runtime.Tree.RewriteRuleNodeStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleNodeStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleNodeStream.#ctor(Antlr.Runtime.Tree.RewriteRuleNodeStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleNodeStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleNodeStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleNodeStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleNodeStream.ConstructorITreeAdaptorString">
            <summary>Sets the shim of RewriteRuleNodeStream.RewriteRuleNodeStream(ITreeAdaptor adaptor, String elementDescription)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleNodeStream.ConstructorITreeAdaptorStringIList">
            <summary>Sets the shim of RewriteRuleNodeStream.RewriteRuleNodeStream(ITreeAdaptor adaptor, String elementDescription, IList elements)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleNodeStream.ConstructorITreeAdaptorStringObject">
            <summary>Sets the shim of RewriteRuleNodeStream.RewriteRuleNodeStream(ITreeAdaptor adaptor, String elementDescription, Object oneElement)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleNodeStream.DupObject">
            <summary>Sets the shim of RewriteRuleNodeStream.Dup(Object el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleNodeStream.NextNode">
            <summary>Sets the shim of RewriteRuleNodeStream.NextNode()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleNodeStream.ToTreeObject">
            <summary>Sets the shim of RewriteRuleNodeStream.ToTree(Object el)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleNodeStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleNodeStream.AllInstances.DupObject">
            <summary>Sets the shim of RewriteRuleNodeStream.Dup(Object el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleNodeStream.AllInstances.NextNode">
            <summary>Sets the shim of RewriteRuleNodeStream.NextNode()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleNodeStream.AllInstances.ToTreeObject">
            <summary>Sets the shim of RewriteRuleNodeStream.ToTree(Object el)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleSubtreeStream">
            <summary>Shim type of Antlr.Runtime.Tree.RewriteRuleSubtreeStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleSubtreeStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleSubtreeStream.#ctor(Antlr.Runtime.Tree.RewriteRuleSubtreeStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleSubtreeStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleSubtreeStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleSubtreeStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleSubtreeStream.ConstructorITreeAdaptorString">
            <summary>Sets the shim of RewriteRuleSubtreeStream.RewriteRuleSubtreeStream(ITreeAdaptor adaptor, String elementDescription)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleSubtreeStream.ConstructorITreeAdaptorStringIList">
            <summary>Sets the shim of RewriteRuleSubtreeStream.RewriteRuleSubtreeStream(ITreeAdaptor adaptor, String elementDescription, IList elements)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleSubtreeStream.ConstructorITreeAdaptorStringObject">
            <summary>Sets the shim of RewriteRuleSubtreeStream.RewriteRuleSubtreeStream(ITreeAdaptor adaptor, String elementDescription, Object oneElement)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleSubtreeStream.DupObject">
            <summary>Sets the shim of RewriteRuleSubtreeStream.Dup(Object el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleSubtreeStream.NextNode">
            <summary>Sets the shim of RewriteRuleSubtreeStream.NextNode()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleSubtreeStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleSubtreeStream.AllInstances.DupObject">
            <summary>Sets the shim of RewriteRuleSubtreeStream.Dup(Object el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleSubtreeStream.AllInstances.NextNode">
            <summary>Sets the shim of RewriteRuleSubtreeStream.NextNode()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream">
            <summary>Shim type of Antlr.Runtime.Tree.RewriteRuleTokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.#ctor(Antlr.Runtime.Tree.RewriteRuleTokenStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.ConstructorITreeAdaptorString">
            <summary>Sets the shim of RewriteRuleTokenStream.RewriteRuleTokenStream(ITreeAdaptor adaptor, String elementDescription)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.ConstructorITreeAdaptorStringIList">
            <summary>Sets the shim of RewriteRuleTokenStream.RewriteRuleTokenStream(ITreeAdaptor adaptor, String elementDescription, IList elements)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.ConstructorITreeAdaptorStringObject">
            <summary>Sets the shim of RewriteRuleTokenStream.RewriteRuleTokenStream(ITreeAdaptor adaptor, String elementDescription, Object oneElement)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.DupObject">
            <summary>Sets the shim of RewriteRuleTokenStream.Dup(Object el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.NextNode">
            <summary>Sets the shim of RewriteRuleTokenStream.NextNode()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.NextToken">
            <summary>Sets the shim of RewriteRuleTokenStream.NextToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.ToTreeObject">
            <summary>Sets the shim of RewriteRuleTokenStream.ToTree(Object el)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.AllInstances.DupObject">
            <summary>Sets the shim of RewriteRuleTokenStream.Dup(Object el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.AllInstances.NextNode">
            <summary>Sets the shim of RewriteRuleTokenStream.NextNode()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.AllInstances.NextToken">
            <summary>Sets the shim of RewriteRuleTokenStream.NextToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimRewriteRuleTokenStream.AllInstances.ToTreeObject">
            <summary>Sets the shim of RewriteRuleTokenStream.ToTree(Object el)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeConstants">
            <summary>Shim type of Antlr.Runtime.Tree.TreeConstants</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeConstants.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeConstants.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeConstants.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeConstants.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeConstants.StaticConstructor">
            <summary>Sets the shim of TreeConstants.TreeConstants()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeFilter">
            <summary>Shim type of Antlr.Runtime.Tree.TreeFilter</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.#ctor(Antlr.Runtime.Tree.TreeFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.ApplyOnceObjectAction">
            <summary>Sets the shim of TreeFilter.ApplyOnce(Object t, Action whichRule)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.Bottomup">
            <summary>Sets the shim of TreeFilter.Bottomup()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.ConstructorITreeNodeStream">
            <summary>Sets the shim of TreeFilter.TreeFilter(ITreeNodeStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.ConstructorITreeNodeStreamRecognizerSharedState">
            <summary>Sets the shim of TreeFilter.TreeFilter(ITreeNodeStream input, RecognizerSharedState state)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.DownupObject">
            <summary>Sets the shim of TreeFilter.Downup(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.Topdown">
            <summary>Sets the shim of TreeFilter.Topdown()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeFilter._Downupb__0Object">
            <summary>Sets the shim of TreeFilter.&lt;Downup&gt;b__0(Object o)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeFilter._Downupb__1Object">
            <summary>Sets the shim of TreeFilter.&lt;Downup&gt;b__1(Object o)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.AllInstances.ApplyOnceObjectAction">
            <summary>Sets the shim of TreeFilter.ApplyOnce(Object t, Action whichRule)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.AllInstances.Bottomup">
            <summary>Sets the shim of TreeFilter.Bottomup()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.AllInstances.DownupObject">
            <summary>Sets the shim of TreeFilter.Downup(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.AllInstances.Topdown">
            <summary>Sets the shim of TreeFilter.Topdown()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.AllInstances._Downupb__0Object">
            <summary>Sets the shim of TreeFilter.&lt;Downup&gt;b__0(Object o)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeFilter.AllInstances._Downupb__1Object">
            <summary>Sets the shim of TreeFilter.&lt;Downup&gt;b__1(Object o)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeIterator">
            <summary>Shim type of Antlr.Runtime.Tree.TreeIterator</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.#ctor(Antlr.Runtime.Tree.TreeIterator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.Bind(System.Collections.IEnumerator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.Bind(System.Collections.Generic.IEnumerator{System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.ConstructorITreeAdaptorObject">
            <summary>Sets the shim of TreeIterator.TreeIterator(ITreeAdaptor adaptor, Object tree)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.ConstructorObject">
            <summary>Sets the shim of TreeIterator.TreeIterator(Object tree)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.CurrentGet">
            <summary>Sets the shim of TreeIterator.get_Current()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.CurrentSetObject">
            <summary>Sets the shim of TreeIterator.set_Current(Object value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.Dispose">
            <summary>Sets the shim of TreeIterator.Dispose()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.MoveNext">
            <summary>Sets the shim of TreeIterator.MoveNext()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.Reset">
            <summary>Sets the shim of TreeIterator.Reset()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.AllInstances.CurrentGet">
            <summary>Sets the shim of TreeIterator.get_Current()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.AllInstances.CurrentSetObject">
            <summary>Sets the shim of TreeIterator.set_Current(Object value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.AllInstances.Dispose">
            <summary>Sets the shim of TreeIterator.Dispose()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.AllInstances.MoveNext">
            <summary>Sets the shim of TreeIterator.MoveNext()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeIterator.AllInstances.Reset">
            <summary>Sets the shim of TreeIterator.Reset()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeParser">
            <summary>Shim type of Antlr.Runtime.Tree.TreeParser</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeParser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeParser.#ctor(Antlr.Runtime.Tree.TreeParser)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeParser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeParser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.ConstructorITreeNodeStream">
            <summary>Sets the shim of TreeParser.TreeParser(ITreeNodeStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.ConstructorITreeNodeStreamRecognizerSharedState">
            <summary>Sets the shim of TreeParser.TreeParser(ITreeNodeStream input, RecognizerSharedState state)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.GetCurrentInputSymbolIIntStream">
            <summary>Sets the shim of TreeParser.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.GetErrorHeaderRecognitionException">
            <summary>Sets the shim of TreeParser.GetErrorHeader(RecognitionException e)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.GetErrorMessageRecognitionExceptionStringArray">
            <summary>Sets the shim of TreeParser.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.GetMissingSymbolIIntStreamRecognitionExceptionInt32BitSet">
            <summary>Sets the shim of TreeParser.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.GetTreeNodeStream">
            <summary>Sets the shim of TreeParser.GetTreeNodeStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.MatchAnyIIntStream">
            <summary>Sets the shim of TreeParser.MatchAny(IIntStream ignore)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.RecoverFromMismatchedTokenIIntStreamInt32BitSet">
            <summary>Sets the shim of TreeParser.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.Reset">
            <summary>Sets the shim of TreeParser.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.SetTreeNodeStreamITreeNodeStream">
            <summary>Sets the shim of TreeParser.SetTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.SourceNameGet">
            <summary>Sets the shim of TreeParser.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.StaticConstructor">
            <summary>Sets the shim of TreeParser.TreeParser()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.TraceInStringInt32">
            <summary>Sets the shim of TreeParser.TraceIn(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.TraceOutStringInt32">
            <summary>Sets the shim of TreeParser.TraceOut(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeParser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.AllInstances.GetCurrentInputSymbolIIntStream">
            <summary>Sets the shim of TreeParser.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.AllInstances.GetErrorHeaderRecognitionException">
            <summary>Sets the shim of TreeParser.GetErrorHeader(RecognitionException e)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.AllInstances.GetErrorMessageRecognitionExceptionStringArray">
            <summary>Sets the shim of TreeParser.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.AllInstances.GetMissingSymbolIIntStreamRecognitionExceptionInt32BitSet">
            <summary>Sets the shim of TreeParser.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.AllInstances.GetTreeNodeStream">
            <summary>Sets the shim of TreeParser.GetTreeNodeStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.AllInstances.MatchAnyIIntStream">
            <summary>Sets the shim of TreeParser.MatchAny(IIntStream ignore)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.AllInstances.RecoverFromMismatchedTokenIIntStreamInt32BitSet">
            <summary>Sets the shim of TreeParser.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.AllInstances.Reset">
            <summary>Sets the shim of TreeParser.Reset()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.AllInstances.SetTreeNodeStreamITreeNodeStream">
            <summary>Sets the shim of TreeParser.SetTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.AllInstances.SourceNameGet">
            <summary>Sets the shim of TreeParser.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.AllInstances.TraceInStringInt32">
            <summary>Sets the shim of TreeParser.TraceIn(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeParser.AllInstances.TraceOutStringInt32">
            <summary>Sets the shim of TreeParser.TraceOut(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreePatternLexer">
            <summary>Shim type of Antlr.Runtime.Tree.TreePatternLexer</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreePatternLexer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreePatternLexer.#ctor(Antlr.Runtime.Tree.TreePatternLexer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreePatternLexer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreePatternLexer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreePatternLexer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreePatternLexer.ConstructorString">
            <summary>Sets the shim of TreePatternLexer.TreePatternLexer(String pattern)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreePatternLexer.Consume">
            <summary>Sets the shim of TreePatternLexer.Consume()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreePatternLexer.NextToken">
            <summary>Sets the shim of TreePatternLexer.NextToken()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreePatternLexer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreePatternLexer.AllInstances.Consume">
            <summary>Sets the shim of TreePatternLexer.Consume()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreePatternLexer.AllInstances.NextToken">
            <summary>Sets the shim of TreePatternLexer.NextToken()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreePatternParser">
            <summary>Shim type of Antlr.Runtime.Tree.TreePatternParser</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreePatternParser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreePatternParser.#ctor(Antlr.Runtime.Tree.TreePatternParser)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreePatternParser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreePatternParser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreePatternParser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreePatternParser.ConstructorTreePatternLexerTreeWizardITreeAdaptor">
            <summary>Sets the shim of TreePatternParser.TreePatternParser(TreePatternLexer tokenizer, TreeWizard wizard, ITreeAdaptor adaptor)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreePatternParser.ParseNode">
            <summary>Sets the shim of TreePatternParser.ParseNode()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreePatternParser.ParseTree">
            <summary>Sets the shim of TreePatternParser.ParseTree()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreePatternParser.Pattern">
            <summary>Sets the shim of TreePatternParser.Pattern()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreePatternParser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreePatternParser.AllInstances.ParseNode">
            <summary>Sets the shim of TreePatternParser.ParseNode()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreePatternParser.AllInstances.ParseTree">
            <summary>Sets the shim of TreePatternParser.ParseTree()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreePatternParser.AllInstances.Pattern">
            <summary>Sets the shim of TreePatternParser.Pattern()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter">
            <summary>Shim type of Antlr.Runtime.Tree.TreeRewriter</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.#ctor(Antlr.Runtime.Tree.TreeRewriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.ApplyOnceObjectFuncOfIAstRuleReturnScope">
            <summary>Sets the shim of TreeRewriter.ApplyOnce(Object t, Func`1&lt;IAstRuleReturnScope&gt; whichRule)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.ApplyRepeatedlyObjectFuncOfIAstRuleReturnScope">
            <summary>Sets the shim of TreeRewriter.ApplyRepeatedly(Object t, Func`1&lt;IAstRuleReturnScope&gt; whichRule)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.Bottomup">
            <summary>Sets the shim of TreeRewriter.Bottomup()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.ConstructorITreeNodeStream">
            <summary>Sets the shim of TreeRewriter.TreeRewriter(ITreeNodeStream input)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.ConstructorITreeNodeStreamRecognizerSharedState">
            <summary>Sets the shim of TreeRewriter.TreeRewriter(ITreeNodeStream input, RecognizerSharedState state)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.DownupObject">
            <summary>Sets the shim of TreeRewriter.Downup(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.DownupObjectBoolean">
            <summary>Sets the shim of TreeRewriter.Downup(Object t, Boolean showTransformations)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.ReportTransformationObjectObject">
            <summary>Sets the shim of TreeRewriter.ReportTransformation(Object oldTree, Object newTree)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.Topdown">
            <summary>Sets the shim of TreeRewriter.Topdown()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter._Downupb__4Object">
            <summary>Sets the shim of TreeRewriter.&lt;Downup&gt;b__4(Object o)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter._Downupb__5Object">
            <summary>Sets the shim of TreeRewriter.&lt;Downup&gt;b__5(Object o)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter._ctorb__0">
            <summary>Sets the shim of TreeRewriter.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter._ctorb__1">
            <summary>Sets the shim of TreeRewriter.&lt;.ctor&gt;b__1()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.AllInstances.ApplyOnceObjectFuncOfIAstRuleReturnScope">
            <summary>Sets the shim of TreeRewriter.ApplyOnce(Object t, Func`1&lt;IAstRuleReturnScope&gt; whichRule)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.AllInstances.ApplyRepeatedlyObjectFuncOfIAstRuleReturnScope">
            <summary>Sets the shim of TreeRewriter.ApplyRepeatedly(Object t, Func`1&lt;IAstRuleReturnScope&gt; whichRule)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.AllInstances.Bottomup">
            <summary>Sets the shim of TreeRewriter.Bottomup()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.AllInstances.DownupObject">
            <summary>Sets the shim of TreeRewriter.Downup(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.AllInstances.DownupObjectBoolean">
            <summary>Sets the shim of TreeRewriter.Downup(Object t, Boolean showTransformations)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.AllInstances.ReportTransformationObjectObject">
            <summary>Sets the shim of TreeRewriter.ReportTransformation(Object oldTree, Object newTree)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.AllInstances.Topdown">
            <summary>Sets the shim of TreeRewriter.Topdown()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.AllInstances._Downupb__4Object">
            <summary>Sets the shim of TreeRewriter.&lt;Downup&gt;b__4(Object o)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.AllInstances._Downupb__5Object">
            <summary>Sets the shim of TreeRewriter.&lt;Downup&gt;b__5(Object o)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.AllInstances._ctorb__0">
            <summary>Sets the shim of TreeRewriter.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRewriter.AllInstances._ctorb__1">
            <summary>Sets the shim of TreeRewriter.&lt;.ctor&gt;b__1()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1">
            <summary>Shim type of Antlr.Runtime.Tree.TreeRuleReturnScope`1</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.#ctor(Antlr.Runtime.Tree.TreeRuleReturnScope{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.Bind(Antlr.Runtime.IRuleReturnScope)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.Bind(Antlr.Runtime.IRuleReturnScope{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.Constructor">
            <summary>Sets the shim of TreeRuleReturnScope`1.TreeRuleReturnScope`1()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.StartAntlrRuntimeIRuleReturnScopeget">
            <summary>Sets the shim of TreeRuleReturnScope`1.Antlr.Runtime.IRuleReturnScope.get_Start()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.StartGet">
            <summary>Sets the shim of TreeRuleReturnScope`1.get_Start()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.StartSetT0">
            <summary>Sets the shim of TreeRuleReturnScope`1.set_Start(!0 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.StopAntlrRuntimeIRuleReturnScopeTTreeget">
            <summary>Sets the shim of TreeRuleReturnScope`1.Antlr.Runtime.IRuleReturnScope&lt;TTree&gt;.get_Stop()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.StopAntlrRuntimeIRuleReturnScopeget">
            <summary>Sets the shim of TreeRuleReturnScope`1.Antlr.Runtime.IRuleReturnScope.get_Stop()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.AllInstances.StartAntlrRuntimeIRuleReturnScopeget">
            <summary>Sets the shim of TreeRuleReturnScope`1.Antlr.Runtime.IRuleReturnScope.get_Start()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.AllInstances.StartGet">
            <summary>Sets the shim of TreeRuleReturnScope`1.get_Start()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.AllInstances.StartSetT0">
            <summary>Sets the shim of TreeRuleReturnScope`1.set_Start(!0 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.AllInstances.StopAntlrRuntimeIRuleReturnScopeTTreeget">
            <summary>Sets the shim of TreeRuleReturnScope`1.Antlr.Runtime.IRuleReturnScope&lt;TTree&gt;.get_Stop()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeRuleReturnScope`1.AllInstances.StopAntlrRuntimeIRuleReturnScopeget">
            <summary>Sets the shim of TreeRuleReturnScope`1.Antlr.Runtime.IRuleReturnScope.get_Stop()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeVisitor">
            <summary>Shim type of Antlr.Runtime.Tree.TreeVisitor</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeVisitor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeVisitor.#ctor(Antlr.Runtime.Tree.TreeVisitor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeVisitor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeVisitor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeVisitor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeVisitor.Constructor">
            <summary>Sets the shim of TreeVisitor.TreeVisitor()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeVisitor.ConstructorITreeAdaptor">
            <summary>Sets the shim of TreeVisitor.TreeVisitor(ITreeAdaptor adaptor)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeVisitor.VisitObjectFuncOfObjectObjectFuncOfObjectObject">
            <summary>Sets the shim of TreeVisitor.Visit(Object t, Func`2&lt;Object,Object&gt; preAction, Func`2&lt;Object,Object&gt; postAction)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeVisitor.VisitObjectITreeVisitorAction">
            <summary>Sets the shim of TreeVisitor.Visit(Object t, ITreeVisitorAction action)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeVisitor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeVisitor.AllInstances.VisitObjectFuncOfObjectObjectFuncOfObjectObject">
            <summary>Sets the shim of TreeVisitor.Visit(Object t, Func`2&lt;Object,Object&gt; preAction, Func`2&lt;Object,Object&gt; postAction)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeVisitor.AllInstances.VisitObjectITreeVisitorAction">
            <summary>Sets the shim of TreeVisitor.Visit(Object t, ITreeVisitorAction action)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeVisitorAction">
            <summary>Shim type of Antlr.Runtime.Tree.TreeVisitorAction</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeVisitorAction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeVisitorAction.#ctor(Antlr.Runtime.Tree.TreeVisitorAction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeVisitorAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeVisitorAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeVisitorAction.Bind(Antlr.Runtime.Tree.ITreeVisitorAction)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeVisitorAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeVisitorAction.ConstructorFuncOfObjectObjectFuncOfObjectObject">
            <summary>Sets the shim of TreeVisitorAction.TreeVisitorAction(Func`2&lt;Object,Object&gt; preAction, Func`2&lt;Object,Object&gt; postAction)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeVisitorAction.PostObject">
            <summary>Sets the shim of TreeVisitorAction.Post(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeVisitorAction.PreObject">
            <summary>Sets the shim of TreeVisitorAction.Pre(Object t)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeVisitorAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeVisitorAction.AllInstances.PostObject">
            <summary>Sets the shim of TreeVisitorAction.Post(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeVisitorAction.AllInstances.PreObject">
            <summary>Sets the shim of TreeVisitorAction.Pre(Object t)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeWizard">
            <summary>Shim type of Antlr.Runtime.Tree.TreeWizard</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.#ctor(Antlr.Runtime.Tree.TreeWizard)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ComputeTokenTypesStringArray">
            <summary>Sets the shim of TreeWizard.ComputeTokenTypes(String[] tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ConstructorITreeAdaptor">
            <summary>Sets the shim of TreeWizard.TreeWizard(ITreeAdaptor adaptor)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ConstructorITreeAdaptorIDictionaryOfStringInt32">
            <summary>Sets the shim of TreeWizard.TreeWizard(ITreeAdaptor adaptor, IDictionary`2&lt;String,Int32&gt; tokenNameToTypeMap)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ConstructorITreeAdaptorStringArray">
            <summary>Sets the shim of TreeWizard.TreeWizard(ITreeAdaptor adaptor, String[] tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ConstructorStringArray">
            <summary>Sets the shim of TreeWizard.TreeWizard(String[] tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.CreateString">
            <summary>Sets the shim of TreeWizard.Create(String pattern)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.EqualsCoreObjectObjectITreeAdaptor">
            <summary>Sets the shim of TreeWizard.EqualsCore(Object t1, Object t2, ITreeAdaptor adaptor)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.EqualsObjectObject">
            <summary>Sets the shim of TreeWizard.Equals(Object t1, Object t2)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.EqualsObjectObjectITreeAdaptor">
            <summary>Sets the shim of TreeWizard.Equals(Object t1, Object t2, ITreeAdaptor adaptor)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.FindFirstObjectInt32">
            <summary>Sets the shim of TreeWizard.FindFirst(Object t, Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.FindFirstObjectString">
            <summary>Sets the shim of TreeWizard.FindFirst(Object t, String pattern)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.FindObjectInt32">
            <summary>Sets the shim of TreeWizard.Find(Object t, Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.FindObjectString">
            <summary>Sets the shim of TreeWizard.Find(Object t, String pattern)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.GetTokenTypeString">
            <summary>Sets the shim of TreeWizard.GetTokenType(String tokenName)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.IndexCoreObjectIDictionaryOfInt32IList">
            <summary>Sets the shim of TreeWizard.IndexCore(Object t, IDictionary`2&lt;Int32,IList&gt; m)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.IndexObject">
            <summary>Sets the shim of TreeWizard.Index(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ParseCoreObjectTreeWizardTreePatternIDictionaryOfStringObject">
            <summary>Sets the shim of TreeWizard.ParseCore(Object t1, TreePattern tpattern, IDictionary`2&lt;String,Object&gt; labels)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ParseObjectString">
            <summary>Sets the shim of TreeWizard.Parse(Object t, String pattern)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ParseObjectStringIDictionaryOfStringObject">
            <summary>Sets the shim of TreeWizard.Parse(Object t, String pattern, IDictionary`2&lt;String,Object&gt; labels)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.VisitCoreObjectObjectInt32Int32TreeWizardIContextVisitor">
            <summary>Sets the shim of TreeWizard.VisitCore(Object t, Object parent, Int32 childIndex, Int32 ttype, IContextVisitor visitor)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.VisitObjectInt32ActionOfObject">
            <summary>Sets the shim of TreeWizard.Visit(Object t, Int32 ttype, Action`1&lt;Object&gt; action)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.VisitObjectInt32TreeWizardIContextVisitor">
            <summary>Sets the shim of TreeWizard.Visit(Object t, Int32 ttype, IContextVisitor visitor)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.VisitObjectStringTreeWizardIContextVisitor">
            <summary>Sets the shim of TreeWizard.Visit(Object t, String pattern, IContextVisitor visitor)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.ComputeTokenTypesStringArray">
            <summary>Sets the shim of TreeWizard.ComputeTokenTypes(String[] tokenNames)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.CreateString">
            <summary>Sets the shim of TreeWizard.Create(String pattern)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.EqualsObjectObject">
            <summary>Sets the shim of TreeWizard.Equals(Object t1, Object t2)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.FindFirstObjectInt32">
            <summary>Sets the shim of TreeWizard.FindFirst(Object t, Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.FindFirstObjectString">
            <summary>Sets the shim of TreeWizard.FindFirst(Object t, String pattern)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.FindObjectInt32">
            <summary>Sets the shim of TreeWizard.Find(Object t, Int32 ttype)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.FindObjectString">
            <summary>Sets the shim of TreeWizard.Find(Object t, String pattern)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.GetTokenTypeString">
            <summary>Sets the shim of TreeWizard.GetTokenType(String tokenName)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.IndexCoreObjectIDictionaryOfInt32IList">
            <summary>Sets the shim of TreeWizard.IndexCore(Object t, IDictionary`2&lt;Int32,IList&gt; m)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.IndexObject">
            <summary>Sets the shim of TreeWizard.Index(Object t)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.ParseCoreObjectTreeWizardTreePatternIDictionaryOfStringObject">
            <summary>Sets the shim of TreeWizard.ParseCore(Object t1, TreePattern tpattern, IDictionary`2&lt;String,Object&gt; labels)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.ParseObjectString">
            <summary>Sets the shim of TreeWizard.Parse(Object t, String pattern)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.ParseObjectStringIDictionaryOfStringObject">
            <summary>Sets the shim of TreeWizard.Parse(Object t, String pattern, IDictionary`2&lt;String,Object&gt; labels)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.VisitCoreObjectObjectInt32Int32TreeWizardIContextVisitor">
            <summary>Sets the shim of TreeWizard.VisitCore(Object t, Object parent, Int32 childIndex, Int32 ttype, IContextVisitor visitor)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.VisitObjectInt32ActionOfObject">
            <summary>Sets the shim of TreeWizard.Visit(Object t, Int32 ttype, Action`1&lt;Object&gt; action)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.VisitObjectInt32TreeWizardIContextVisitor">
            <summary>Sets the shim of TreeWizard.Visit(Object t, Int32 ttype, IContextVisitor visitor)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.AllInstances.VisitObjectStringTreeWizardIContextVisitor">
            <summary>Sets the shim of TreeWizard.Visit(Object t, String pattern, IContextVisitor visitor)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePattern">
            <summary>Shim type of Antlr.Runtime.Tree.TreeWizard+TreePattern</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePattern.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePattern.#ctor(Antlr.Runtime.Tree.TreeWizard.TreePattern)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePattern.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePattern.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePattern.Bind(Antlr.Runtime.Tree.ITree)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePattern.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePattern.ConstructorIToken">
            <summary>Sets the shim of TreePattern.TreePattern(IToken payload)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePattern.ToString">
            <summary>Sets the shim of TreePattern.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePattern.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePattern.AllInstances.ToString01">
            <summary>Sets the shim of TreePattern.ToString()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePatternTreeAdaptor">
            <summary>Shim type of Antlr.Runtime.Tree.TreeWizard+TreePatternTreeAdaptor</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePatternTreeAdaptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePatternTreeAdaptor.#ctor(Antlr.Runtime.Tree.TreeWizard.TreePatternTreeAdaptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePatternTreeAdaptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePatternTreeAdaptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePatternTreeAdaptor.Bind(Antlr.Runtime.Tree.ITreeAdaptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePatternTreeAdaptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePatternTreeAdaptor.Constructor">
            <summary>Sets the shim of TreePatternTreeAdaptor.TreePatternTreeAdaptor()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePatternTreeAdaptor.CreateIToken">
            <summary>Sets the shim of TreePatternTreeAdaptor.Create(IToken payload)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePatternTreeAdaptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimTreePatternTreeAdaptor.AllInstances.CreateIToken">
            <summary>Sets the shim of TreePatternTreeAdaptor.Create(IToken payload)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimVisitor">
            <summary>Shim type of Antlr.Runtime.Tree.TreeWizard+Visitor</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimVisitor.#ctor(Antlr.Runtime.Tree.TreeWizard.Visitor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimVisitor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimVisitor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimVisitor.Bind(Antlr.Runtime.Tree.TreeWizard.IContextVisitor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimVisitor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimVisitor.Constructor">
            <summary>Sets the shim of Visitor.Visitor()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimVisitor.VisitObjectObjectInt32IDictionaryOfStringObject">
            <summary>Sets the shim of Visitor.Visit(Object t, Object parent, Int32 childIndex, IDictionary`2&lt;String,Object&gt; labels)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimVisitor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimVisitor.AllInstances.VisitObjectObjectInt32IDictionaryOfStringObject">
            <summary>Sets the shim of Visitor.Visit(Object t, Object parent, Int32 childIndex, IDictionary`2&lt;String,Object&gt; labels)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimWildcardTreePattern">
            <summary>Shim type of Antlr.Runtime.Tree.TreeWizard+WildcardTreePattern</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimWildcardTreePattern.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimWildcardTreePattern.#ctor(Antlr.Runtime.Tree.TreeWizard.WildcardTreePattern)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimWildcardTreePattern.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimWildcardTreePattern.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimWildcardTreePattern.Bind(Antlr.Runtime.Tree.ITree)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimWildcardTreePattern.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimWildcardTreePattern.ConstructorIToken">
            <summary>Sets the shim of WildcardTreePattern.WildcardTreePattern(IToken payload)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.ShimTreeWizard.ShimWildcardTreePattern.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubBaseTree">
            <summary>Stub type of Antlr.Runtime.Tree.BaseTree</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.#ctor(Antlr.Runtime.Tree.ITree)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.AddChild(Antlr.Runtime.Tree.ITree)">
            <summary>Sets the stub of BaseTree.AddChild(ITree t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.AddChildITree">
            <summary>Sets the stub of BaseTree.AddChild(ITree t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.AddChildren(System.Collections.Generic.IEnumerable{Antlr.Runtime.Tree.ITree})">
            <summary>Sets the stub of BaseTree.AddChildren(IEnumerable`1&lt;ITree&gt; kids)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.AddChildrenIEnumerableOfITree">
            <summary>Sets the stub of BaseTree.AddChildren(IEnumerable`1&lt;ITree&gt; kids)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.AttachBackingFieldToCharPositionInLine">
            <summary>Attaches delegates to emulate StubBaseTree.CharPositionInLine as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.AttachBackingFieldToChildIndex">
            <summary>Attaches delegates to emulate StubBaseTree.ChildIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.AttachBackingFieldToLine">
            <summary>Attaches delegates to emulate StubBaseTree.Line as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.AttachBackingFieldToParent">
            <summary>Attaches delegates to emulate StubBaseTree.Parent as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubBaseTree.Text as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.AttachBackingFieldToTokenStartIndex">
            <summary>Attaches delegates to emulate StubBaseTree.TokenStartIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.AttachBackingFieldToTokenStopIndex">
            <summary>Attaches delegates to emulate StubBaseTree.TokenStopIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.AttachBackingFieldToType">
            <summary>Attaches delegates to emulate StubBaseTree.Type as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.CharPositionInLineGet">
            <summary>Sets the stub of BaseTree.get_CharPositionInLine()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.CharPositionInLineSetInt32">
            <summary>Sets the stub of BaseTree.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.ChildCountGet">
            <summary>Sets the stub of BaseTree.get_ChildCount()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.ChildIndexGet">
            <summary>Sets the stub of BaseTree.get_ChildIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.ChildIndexSetInt32">
            <summary>Sets the stub of BaseTree.set_ChildIndex(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.CreateChildrenList">
            <summary>Sets the stub of BaseTree.CreateChildrenList()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.CreateChildrenList01">
            <summary>Sets the stub of BaseTree.CreateChildrenList()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.DeleteChild(System.Int32)">
            <summary>Sets the stub of BaseTree.DeleteChild(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.DeleteChildInt32">
            <summary>Sets the stub of BaseTree.DeleteChild(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.DupNode">
            <summary>Sets the stub of BaseTree.DupNode()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.DupNode01">
            <summary>Sets the stub of BaseTree.DupNode()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.FreshenParentAndChildIndexes">
            <summary>Sets the stub of BaseTree.FreshenParentAndChildIndexes()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.FreshenParentAndChildIndexes(System.Int32)">
            <summary>Sets the stub of BaseTree.FreshenParentAndChildIndexes(Int32 offset)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.FreshenParentAndChildIndexes01">
            <summary>Sets the stub of BaseTree.FreshenParentAndChildIndexes()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.FreshenParentAndChildIndexesInt32">
            <summary>Sets the stub of BaseTree.FreshenParentAndChildIndexes(Int32 offset)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.GetAncestor(System.Int32)">
            <summary>Sets the stub of BaseTree.GetAncestor(Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.GetAncestorInt32">
            <summary>Sets the stub of BaseTree.GetAncestor(Int32 ttype)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.GetAncestors">
            <summary>Sets the stub of BaseTree.GetAncestors()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.GetAncestors01">
            <summary>Sets the stub of BaseTree.GetAncestors()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.GetChild(System.Int32)">
            <summary>Sets the stub of BaseTree.GetChild(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.GetChildInt32">
            <summary>Sets the stub of BaseTree.GetChild(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.GetFirstChildWithType(System.Int32)">
            <summary>Sets the stub of BaseTree.GetFirstChildWithType(Int32 type)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.GetFirstChildWithTypeInt32">
            <summary>Sets the stub of BaseTree.GetFirstChildWithType(Int32 type)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.HasAncestor(System.Int32)">
            <summary>Sets the stub of BaseTree.HasAncestor(Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.HasAncestorInt32">
            <summary>Sets the stub of BaseTree.HasAncestor(Int32 ttype)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.InitializeStub">
            <summary>Initializes a new instance of type StubBaseTree</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.IsNilGet">
            <summary>Sets the stub of BaseTree.get_IsNil()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.LineGet">
            <summary>Sets the stub of BaseTree.get_Line()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.LineSetInt32">
            <summary>Sets the stub of BaseTree.set_Line(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.ParentGet">
            <summary>Sets the stub of BaseTree.get_Parent()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.ParentSetITree">
            <summary>Sets the stub of BaseTree.set_Parent(ITree value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.ReplaceChildren(System.Int32,System.Int32,System.Object)">
            <summary>Sets the stub of BaseTree.ReplaceChildren(Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.ReplaceChildrenInt32Int32Object">
            <summary>Sets the stub of BaseTree.ReplaceChildren(Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.SanityCheckParentAndChildIndexes">
            <summary>Sets the stub of BaseTree.SanityCheckParentAndChildIndexes()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.SanityCheckParentAndChildIndexes(Antlr.Runtime.Tree.ITree,System.Int32)">
            <summary>Sets the stub of BaseTree.SanityCheckParentAndChildIndexes(ITree parent, Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.SanityCheckParentAndChildIndexes01">
            <summary>Sets the stub of BaseTree.SanityCheckParentAndChildIndexes()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.SanityCheckParentAndChildIndexesITreeInt32">
            <summary>Sets the stub of BaseTree.SanityCheckParentAndChildIndexes(ITree parent, Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.SetChild(System.Int32,Antlr.Runtime.Tree.ITree)">
            <summary>Sets the stub of BaseTree.SetChild(Int32 i, ITree t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.SetChildInt32ITree">
            <summary>Sets the stub of BaseTree.SetChild(Int32 i, ITree t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.TextGet">
            <summary>Sets the stub of BaseTree.get_Text()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.TextSetString">
            <summary>Sets the stub of BaseTree.set_Text(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.ToString">
            <summary>Sets the stub of BaseTree.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.ToString01">
            <summary>Sets the stub of BaseTree.ToString()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTree.ToStringTree">
            <summary>Sets the stub of BaseTree.ToStringTree()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.ToStringTree01">
            <summary>Sets the stub of BaseTree.ToStringTree()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.TokenStartIndexGet">
            <summary>Sets the stub of BaseTree.get_TokenStartIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.TokenStartIndexSetInt32">
            <summary>Sets the stub of BaseTree.set_TokenStartIndex(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.TokenStopIndexGet">
            <summary>Sets the stub of BaseTree.get_TokenStopIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.TokenStopIndexSetInt32">
            <summary>Sets the stub of BaseTree.set_TokenStopIndex(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.TypeGet">
            <summary>Sets the stub of BaseTree.get_Type()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTree.TypeSetInt32">
            <summary>Sets the stub of BaseTree.set_Type(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBaseTree.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBaseTree.CharPositionInLine">
            <summary>Sets the stub of BaseTree.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBaseTree.ChildCount">
            <summary>Sets the stub of BaseTree.get_ChildCount()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBaseTree.ChildIndex">
            <summary>Sets the stub of BaseTree.get_ChildIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBaseTree.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBaseTree.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBaseTree.IsNil">
            <summary>Sets the stub of BaseTree.get_IsNil()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBaseTree.Line">
            <summary>Sets the stub of BaseTree.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBaseTree.Parent">
            <summary>Sets the stub of BaseTree.get_Parent()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBaseTree.Text">
            <summary>Sets the stub of BaseTree.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBaseTree.TokenStartIndex">
            <summary>Sets the stub of BaseTree.get_TokenStartIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBaseTree.TokenStopIndex">
            <summary>Sets the stub of BaseTree.get_TokenStopIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBaseTree.Type">
            <summary>Sets the stub of BaseTree.get_Type()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor">
            <summary>Stub type of Antlr.Runtime.Tree.BaseTreeAdaptor</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.AddChild(System.Object,System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.AddChild(Object t, Object child)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.AddChildObjectObject">
            <summary>Sets the stub of BaseTreeAdaptor.AddChild(Object t, Object child)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.BecomeRoot(Antlr.Runtime.IToken,System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.BecomeRoot(IToken newRoot, Object oldRoot)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.BecomeRoot(System.Object,System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.BecomeRoot(Object newRoot, Object oldRoot)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.BecomeRootITokenObject">
            <summary>Sets the stub of BaseTreeAdaptor.BecomeRoot(IToken newRoot, Object oldRoot)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.BecomeRootObjectObject">
            <summary>Sets the stub of BaseTreeAdaptor.BecomeRoot(Object newRoot, Object oldRoot)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.Create(Antlr.Runtime.IToken)">
            <summary>Sets the stub of BaseTreeAdaptor.Create(IToken payload)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.Create(System.Int32,Antlr.Runtime.IToken)">
            <summary>Sets the stub of BaseTreeAdaptor.Create(Int32 tokenType, IToken fromToken)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.Create(Antlr.Runtime.IToken,System.String)">
            <summary>Sets the stub of BaseTreeAdaptor.Create(IToken fromToken, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.Create(System.Int32,System.String)">
            <summary>Sets the stub of BaseTreeAdaptor.Create(Int32 tokenType, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.Create(System.Int32,Antlr.Runtime.IToken,System.String)">
            <summary>Sets the stub of BaseTreeAdaptor.Create(Int32 tokenType, IToken fromToken, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.CreateIToken">
            <summary>Sets the stub of BaseTreeAdaptor.Create(IToken payload)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.CreateITokenString">
            <summary>Sets the stub of BaseTreeAdaptor.Create(IToken fromToken, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.CreateInt32IToken">
            <summary>Sets the stub of BaseTreeAdaptor.Create(Int32 tokenType, IToken fromToken)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.CreateInt32ITokenString">
            <summary>Sets the stub of BaseTreeAdaptor.Create(Int32 tokenType, IToken fromToken, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.CreateInt32String">
            <summary>Sets the stub of BaseTreeAdaptor.Create(Int32 tokenType, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.CreateToken(Antlr.Runtime.IToken)">
            <summary>Sets the stub of BaseTreeAdaptor.CreateToken(IToken fromToken)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.CreateToken(System.Int32,System.String)">
            <summary>Sets the stub of BaseTreeAdaptor.CreateToken(Int32 tokenType, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.CreateTokenIToken">
            <summary>Sets the stub of BaseTreeAdaptor.CreateToken(IToken fromToken)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.CreateTokenInt32String">
            <summary>Sets the stub of BaseTreeAdaptor.CreateToken(Int32 tokenType, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.DeleteChild(System.Object,System.Int32)">
            <summary>Sets the stub of BaseTreeAdaptor.DeleteChild(Object t, Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.DeleteChildObjectInt32">
            <summary>Sets the stub of BaseTreeAdaptor.DeleteChild(Object t, Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.DupNode(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.DupNode(Object treeNode)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.DupNode(System.Int32,System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.DupNode(Int32 type, Object treeNode)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.DupNode(System.Object,System.String)">
            <summary>Sets the stub of BaseTreeAdaptor.DupNode(Object treeNode, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.DupNode(System.Int32,System.Object,System.String)">
            <summary>Sets the stub of BaseTreeAdaptor.DupNode(Int32 type, Object treeNode, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.DupNodeInt32Object">
            <summary>Sets the stub of BaseTreeAdaptor.DupNode(Int32 type, Object treeNode)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.DupNodeInt32ObjectString">
            <summary>Sets the stub of BaseTreeAdaptor.DupNode(Int32 type, Object treeNode, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.DupNodeObject">
            <summary>Sets the stub of BaseTreeAdaptor.DupNode(Object treeNode)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.DupNodeObjectString">
            <summary>Sets the stub of BaseTreeAdaptor.DupNode(Object treeNode, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.DupTree(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.DupTree(Object tree)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.DupTree(System.Object,System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.DupTree(Object t, Object parent)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.DupTreeObject">
            <summary>Sets the stub of BaseTreeAdaptor.DupTree(Object tree)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.DupTreeObjectObject">
            <summary>Sets the stub of BaseTreeAdaptor.DupTree(Object t, Object parent)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.ErrorNode(Antlr.Runtime.ITokenStream,Antlr.Runtime.IToken,Antlr.Runtime.IToken,Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseTreeAdaptor.ErrorNode(ITokenStream input, IToken start, IToken stop, RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.ErrorNodeITokenStreamITokenITokenRecognitionException">
            <summary>Sets the stub of BaseTreeAdaptor.ErrorNode(ITokenStream input, IToken start, IToken stop, RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetChild(System.Object,System.Int32)">
            <summary>Sets the stub of BaseTreeAdaptor.GetChild(Object t, Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetChildCount(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetChildCount(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetChildCountObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetChildCount(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetChildIndex(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetChildIndex(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetChildIndexObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetChildIndex(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetChildObjectInt32">
            <summary>Sets the stub of BaseTreeAdaptor.GetChild(Object t, Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetParent(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetParent(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetParentObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetParent(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetText(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetText(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetTextObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetText(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetToken(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetToken(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetTokenObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetToken(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetTokenStartIndex(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetTokenStartIndex(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetTokenStartIndexObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetTokenStartIndex(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetTokenStopIndex(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetTokenStopIndex(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetTokenStopIndexObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetTokenStopIndex(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetTree(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetTree(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetTreeObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetTree(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetType(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetType(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetTypeObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetType(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetUniqueID(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetUniqueID(Object node)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.GetUniqueIDObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetUniqueID(Object node)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.InitializeStub">
            <summary>Initializes a new instance of type StubBaseTreeAdaptor</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.IsNil(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.IsNil(Object tree)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.IsNilObject">
            <summary>Sets the stub of BaseTreeAdaptor.IsNil(Object tree)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.Nil">
            <summary>Sets the stub of BaseTreeAdaptor.Nil()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.Nil01">
            <summary>Sets the stub of BaseTreeAdaptor.Nil()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.ReplaceChildren(System.Object,System.Int32,System.Int32,System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.ReplaceChildrenObjectInt32Int32Object">
            <summary>Sets the stub of BaseTreeAdaptor.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.RulePostProcessing(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.RulePostProcessing(Object root)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.RulePostProcessingObject">
            <summary>Sets the stub of BaseTreeAdaptor.RulePostProcessing(Object root)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.SetChild(System.Object,System.Int32,System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.SetChild(Object t, Int32 i, Object child)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.SetChildIndex(System.Object,System.Int32)">
            <summary>Sets the stub of BaseTreeAdaptor.SetChildIndex(Object t, Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.SetChildIndexObjectInt32">
            <summary>Sets the stub of BaseTreeAdaptor.SetChildIndex(Object t, Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.SetChildObjectInt32Object">
            <summary>Sets the stub of BaseTreeAdaptor.SetChild(Object t, Int32 i, Object child)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.SetParent(System.Object,System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.SetParent(Object t, Object parent)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.SetParentObjectObject">
            <summary>Sets the stub of BaseTreeAdaptor.SetParent(Object t, Object parent)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.SetText(System.Object,System.String)">
            <summary>Sets the stub of BaseTreeAdaptor.SetText(Object t, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.SetTextObjectString">
            <summary>Sets the stub of BaseTreeAdaptor.SetText(Object t, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.SetTokenBoundaries(System.Object,Antlr.Runtime.IToken,Antlr.Runtime.IToken)">
            <summary>Sets the stub of BaseTreeAdaptor.SetTokenBoundaries(Object t, IToken startToken, IToken stopToken)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.SetTokenBoundariesObjectITokenIToken">
            <summary>Sets the stub of BaseTreeAdaptor.SetTokenBoundaries(Object t, IToken startToken, IToken stopToken)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.SetType(System.Object,System.Int32)">
            <summary>Sets the stub of BaseTreeAdaptor.SetType(Object t, Int32 type)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.SetTypeObjectInt32">
            <summary>Sets the stub of BaseTreeAdaptor.SetType(Object t, Int32 type)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBaseTreeAdaptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream">
            <summary>Stub type of Antlr.Runtime.Tree.BufferedTreeNodeStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.Object,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.AddNavigationNode(System.Int32)">
            <summary>Sets the stub of BufferedTreeNodeStream.AddNavigationNode(Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.AddNavigationNodeInt32">
            <summary>Sets the stub of BufferedTreeNodeStream.AddNavigationNode(Int32 ttype)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.AttachBackingFieldToTokenStream">
            <summary>Attaches delegates to emulate StubBufferedTreeNodeStream.TokenStream as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.AttachBackingFieldToTreeAdaptor">
            <summary>Attaches delegates to emulate StubBufferedTreeNodeStream.TreeAdaptor as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.AttachBackingFieldToUniqueNavigationNodes">
            <summary>Attaches delegates to emulate StubBufferedTreeNodeStream.UniqueNavigationNodes as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Consume">
            <summary>Sets the stub of BufferedTreeNodeStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Consume01">
            <summary>Sets the stub of BufferedTreeNodeStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.CountGet">
            <summary>Sets the stub of BufferedTreeNodeStream.get_Count()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.FillBuffer">
            <summary>Sets the stub of BufferedTreeNodeStream.FillBuffer()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.FillBuffer(System.Object)">
            <summary>Sets the stub of BufferedTreeNodeStream.FillBuffer(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.FillBuffer01">
            <summary>Sets the stub of BufferedTreeNodeStream.FillBuffer()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.FillBufferObject">
            <summary>Sets the stub of BufferedTreeNodeStream.FillBuffer(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.GetCurrentSymbol">
            <summary>Sets the stub of BufferedTreeNodeStream.GetCurrentSymbol()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.GetCurrentSymbol01">
            <summary>Sets the stub of BufferedTreeNodeStream.GetCurrentSymbol()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.GetNodeIndex(System.Object)">
            <summary>Sets the stub of BufferedTreeNodeStream.GetNodeIndex(Object node)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.GetNodeIndexObject">
            <summary>Sets the stub of BufferedTreeNodeStream.GetNodeIndex(Object node)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.IndexGet">
            <summary>Sets the stub of BufferedTreeNodeStream.get_Index()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.InitializeStub">
            <summary>Initializes a new instance of type StubBufferedTreeNodeStream</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.ItemGetInt32">
            <summary>Sets the stub of BufferedTreeNodeStream.get_Item(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Iterator">
            <summary>Sets the stub of BufferedTreeNodeStream.Iterator()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Iterator01">
            <summary>Sets the stub of BufferedTreeNodeStream.Iterator()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.LA(System.Int32)">
            <summary>Sets the stub of BufferedTreeNodeStream.LA(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.LAInt32">
            <summary>Sets the stub of BufferedTreeNodeStream.LA(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.LB(System.Int32)">
            <summary>Sets the stub of BufferedTreeNodeStream.LB(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.LBInt32">
            <summary>Sets the stub of BufferedTreeNodeStream.LB(Int32 k)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.LT(System.Int32)">
            <summary>Sets the stub of BufferedTreeNodeStream.LT(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.LTInt32">
            <summary>Sets the stub of BufferedTreeNodeStream.LT(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.LastRealTokenGet">
            <summary>Sets the stub of BufferedTreeNodeStream.get_LastRealToken()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.LastTokenGet">
            <summary>Sets the stub of BufferedTreeNodeStream.get_LastToken()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Mark">
            <summary>Sets the stub of BufferedTreeNodeStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Mark01">
            <summary>Sets the stub of BufferedTreeNodeStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.MaxLookBehindGet">
            <summary>Sets the stub of BufferedTreeNodeStream.get_MaxLookBehind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Pop">
            <summary>Sets the stub of BufferedTreeNodeStream.Pop()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Pop01">
            <summary>Sets the stub of BufferedTreeNodeStream.Pop()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Push(System.Int32)">
            <summary>Sets the stub of BufferedTreeNodeStream.Push(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.PushInt32">
            <summary>Sets the stub of BufferedTreeNodeStream.Push(Int32 index)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Release(System.Int32)">
            <summary>Sets the stub of BufferedTreeNodeStream.Release(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.ReleaseInt32">
            <summary>Sets the stub of BufferedTreeNodeStream.Release(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.ReplaceChildren(System.Object,System.Int32,System.Int32,System.Object)">
            <summary>Sets the stub of BufferedTreeNodeStream.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.ReplaceChildrenObjectInt32Int32Object">
            <summary>Sets the stub of BufferedTreeNodeStream.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Reset">
            <summary>Sets the stub of BufferedTreeNodeStream.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Reset01">
            <summary>Sets the stub of BufferedTreeNodeStream.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Rewind">
            <summary>Sets the stub of BufferedTreeNodeStream.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Rewind(System.Int32)">
            <summary>Sets the stub of BufferedTreeNodeStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Rewind01">
            <summary>Sets the stub of BufferedTreeNodeStream.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.RewindInt32">
            <summary>Sets the stub of BufferedTreeNodeStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Seek(System.Int32)">
            <summary>Sets the stub of BufferedTreeNodeStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.SeekInt32">
            <summary>Sets the stub of BufferedTreeNodeStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.SourceNameGet">
            <summary>Sets the stub of BufferedTreeNodeStream.get_SourceName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.ToString(System.Object,System.Object)">
            <summary>Sets the stub of BufferedTreeNodeStream.ToString(Object start, Object stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.ToStringObjectObject">
            <summary>Sets the stub of BufferedTreeNodeStream.ToString(Object start, Object stop)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.ToTokenString(System.Int32,System.Int32)">
            <summary>Sets the stub of BufferedTreeNodeStream.ToTokenString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.ToTokenStringInt32Int32">
            <summary>Sets the stub of BufferedTreeNodeStream.ToTokenString(Int32 start, Int32 stop)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.ToTokenTypeString">
            <summary>Sets the stub of BufferedTreeNodeStream.ToTokenTypeString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.ToTokenTypeString01">
            <summary>Sets the stub of BufferedTreeNodeStream.ToTokenTypeString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.TokenStreamGet">
            <summary>Sets the stub of BufferedTreeNodeStream.get_TokenStream()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.TokenStreamSetITokenStream">
            <summary>Sets the stub of BufferedTreeNodeStream.set_TokenStream(ITokenStream value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.TreeAdaptorGet">
            <summary>Sets the stub of BufferedTreeNodeStream.get_TreeAdaptor()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.TreeAdaptorSetITreeAdaptor">
            <summary>Sets the stub of BufferedTreeNodeStream.set_TreeAdaptor(ITreeAdaptor value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.TreeSourceGet">
            <summary>Sets the stub of BufferedTreeNodeStream.get_TreeSource()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.UniqueNavigationNodesGet">
            <summary>Sets the stub of BufferedTreeNodeStream.get_UniqueNavigationNodes()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.UniqueNavigationNodesSetBoolean">
            <summary>Sets the stub of BufferedTreeNodeStream.set_UniqueNavigationNodes(Boolean value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Count">
            <summary>Sets the stub of BufferedTreeNodeStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Index">
            <summary>Sets the stub of BufferedTreeNodeStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.Item(System.Int32)">
            <summary>Sets the stub of BufferedTreeNodeStream.get_Item(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.LastRealToken">
            <summary>Sets the stub of BufferedTreeNodeStream.get_LastRealToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.LastToken">
            <summary>Sets the stub of BufferedTreeNodeStream.get_LastToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.MaxLookBehind">
            <summary>Sets the stub of BufferedTreeNodeStream.get_MaxLookBehind()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.SourceName">
            <summary>Sets the stub of BufferedTreeNodeStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.TokenStream">
            <summary>Sets the stub of BufferedTreeNodeStream.get_TokenStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.TreeAdaptor">
            <summary>Sets the stub of BufferedTreeNodeStream.get_TreeAdaptor()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.TreeSource">
            <summary>Sets the stub of BufferedTreeNodeStream.get_TreeSource()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubBufferedTreeNodeStream.UniqueNavigationNodes">
            <summary>Sets the stub of BufferedTreeNodeStream.get_UniqueNavigationNodes()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode">
            <summary>Stub type of Antlr.Runtime.Tree.CommonErrorNode</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.#ctor(Antlr.Runtime.ITokenStream,Antlr.Runtime.IToken,Antlr.Runtime.IToken,Antlr.Runtime.RecognitionException)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.AddChild(Antlr.Runtime.Tree.ITree)">
            <summary>Sets the stub of BaseTree.AddChild(ITree t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.AddChildITree">
            <summary>Sets the stub of BaseTree.AddChild(ITree t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.AddChildren(System.Collections.Generic.IEnumerable{Antlr.Runtime.Tree.ITree})">
            <summary>Sets the stub of BaseTree.AddChildren(IEnumerable`1&lt;ITree&gt; kids)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.AddChildrenIEnumerableOfITree">
            <summary>Sets the stub of BaseTree.AddChildren(IEnumerable`1&lt;ITree&gt; kids)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.AttachBackingFieldToCharPositionInLine">
            <summary>Attaches delegates to emulate StubCommonErrorNode.CharPositionInLine as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.AttachBackingFieldToChildIndex">
            <summary>Attaches delegates to emulate StubCommonErrorNode.ChildIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.AttachBackingFieldToLine">
            <summary>Attaches delegates to emulate StubCommonErrorNode.Line as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.AttachBackingFieldToParent">
            <summary>Attaches delegates to emulate StubCommonErrorNode.Parent as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubCommonErrorNode.Text as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.AttachBackingFieldToToken">
            <summary>Attaches delegates to emulate StubCommonErrorNode.Token as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.AttachBackingFieldToTokenStartIndex">
            <summary>Attaches delegates to emulate StubCommonErrorNode.TokenStartIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.AttachBackingFieldToTokenStopIndex">
            <summary>Attaches delegates to emulate StubCommonErrorNode.TokenStopIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.AttachBackingFieldToType">
            <summary>Attaches delegates to emulate StubCommonErrorNode.Type as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.CharPositionInLineGet">
            <summary>Sets the stub of CommonTree.get_CharPositionInLine()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.CharPositionInLineSetInt32">
            <summary>Sets the stub of CommonTree.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.ChildCountGet">
            <summary>Sets the stub of BaseTree.get_ChildCount()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.ChildIndexGet">
            <summary>Sets the stub of CommonTree.get_ChildIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.ChildIndexSetInt32">
            <summary>Sets the stub of CommonTree.set_ChildIndex(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.CreateChildrenList">
            <summary>Sets the stub of BaseTree.CreateChildrenList()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.CreateChildrenList01">
            <summary>Sets the stub of BaseTree.CreateChildrenList()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.DeleteChild(System.Int32)">
            <summary>Sets the stub of BaseTree.DeleteChild(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.DeleteChildInt32">
            <summary>Sets the stub of BaseTree.DeleteChild(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.DupNode">
            <summary>Sets the stub of CommonTree.DupNode()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.DupNode01">
            <summary>Sets the stub of CommonTree.DupNode()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.FreshenParentAndChildIndexes">
            <summary>Sets the stub of BaseTree.FreshenParentAndChildIndexes()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.FreshenParentAndChildIndexes(System.Int32)">
            <summary>Sets the stub of BaseTree.FreshenParentAndChildIndexes(Int32 offset)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.FreshenParentAndChildIndexes01">
            <summary>Sets the stub of BaseTree.FreshenParentAndChildIndexes()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.FreshenParentAndChildIndexesInt32">
            <summary>Sets the stub of BaseTree.FreshenParentAndChildIndexes(Int32 offset)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.GetAncestor(System.Int32)">
            <summary>Sets the stub of BaseTree.GetAncestor(Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.GetAncestorInt32">
            <summary>Sets the stub of BaseTree.GetAncestor(Int32 ttype)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.GetAncestors">
            <summary>Sets the stub of BaseTree.GetAncestors()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.GetAncestors01">
            <summary>Sets the stub of BaseTree.GetAncestors()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.GetChild(System.Int32)">
            <summary>Sets the stub of BaseTree.GetChild(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.GetChildInt32">
            <summary>Sets the stub of BaseTree.GetChild(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.GetFirstChildWithType(System.Int32)">
            <summary>Sets the stub of BaseTree.GetFirstChildWithType(Int32 type)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.GetFirstChildWithTypeInt32">
            <summary>Sets the stub of BaseTree.GetFirstChildWithType(Int32 type)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.HasAncestor(System.Int32)">
            <summary>Sets the stub of BaseTree.HasAncestor(Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.HasAncestorInt32">
            <summary>Sets the stub of BaseTree.HasAncestor(Int32 ttype)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.InitializeStub">
            <summary>Initializes a new instance of type StubCommonErrorNode</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.IsNilGet">
            <summary>Sets the stub of CommonErrorNode.get_IsNil()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.LineGet">
            <summary>Sets the stub of CommonTree.get_Line()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.LineSetInt32">
            <summary>Sets the stub of CommonTree.set_Line(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.ParentGet">
            <summary>Sets the stub of CommonTree.get_Parent()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.ParentSetITree">
            <summary>Sets the stub of CommonTree.set_Parent(ITree value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.ReplaceChildren(System.Int32,System.Int32,System.Object)">
            <summary>Sets the stub of BaseTree.ReplaceChildren(Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.ReplaceChildrenInt32Int32Object">
            <summary>Sets the stub of BaseTree.ReplaceChildren(Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.SanityCheckParentAndChildIndexes">
            <summary>Sets the stub of BaseTree.SanityCheckParentAndChildIndexes()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.SanityCheckParentAndChildIndexes(Antlr.Runtime.Tree.ITree,System.Int32)">
            <summary>Sets the stub of BaseTree.SanityCheckParentAndChildIndexes(ITree parent, Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.SanityCheckParentAndChildIndexes01">
            <summary>Sets the stub of BaseTree.SanityCheckParentAndChildIndexes()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.SanityCheckParentAndChildIndexesITreeInt32">
            <summary>Sets the stub of BaseTree.SanityCheckParentAndChildIndexes(ITree parent, Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.SetChild(System.Int32,Antlr.Runtime.Tree.ITree)">
            <summary>Sets the stub of BaseTree.SetChild(Int32 i, ITree t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.SetChildInt32ITree">
            <summary>Sets the stub of BaseTree.SetChild(Int32 i, ITree t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.SetUnknownTokenBoundaries">
            <summary>Sets the stub of CommonTree.SetUnknownTokenBoundaries()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.SetUnknownTokenBoundaries01">
            <summary>Sets the stub of CommonTree.SetUnknownTokenBoundaries()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.TextGet">
            <summary>Sets the stub of CommonErrorNode.get_Text()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.TextSetString">
            <summary>Sets the stub of CommonErrorNode.set_Text(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.ToString">
            <summary>Sets the stub of CommonErrorNode.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.ToString01">
            <summary>Sets the stub of CommonErrorNode.ToString()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.ToStringTree">
            <summary>Sets the stub of BaseTree.ToStringTree()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.ToStringTree01">
            <summary>Sets the stub of BaseTree.ToStringTree()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.TokenGet">
            <summary>Sets the stub of CommonTree.get_Token()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.TokenSetIToken">
            <summary>Sets the stub of CommonTree.set_Token(IToken value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.TokenStartIndexGet">
            <summary>Sets the stub of CommonTree.get_TokenStartIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.TokenStartIndexSetInt32">
            <summary>Sets the stub of CommonTree.set_TokenStartIndex(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.TokenStopIndexGet">
            <summary>Sets the stub of CommonTree.get_TokenStopIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.TokenStopIndexSetInt32">
            <summary>Sets the stub of CommonTree.set_TokenStopIndex(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.TypeGet">
            <summary>Sets the stub of CommonErrorNode.get_Type()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.TypeSetInt32">
            <summary>Sets the stub of CommonErrorNode.set_Type(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.CharPositionInLine">
            <summary>Sets the stub of CommonTree.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.ChildCount">
            <summary>Sets the stub of BaseTree.get_ChildCount()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.ChildIndex">
            <summary>Sets the stub of CommonTree.get_ChildIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.IsNil">
            <summary>Sets the stub of CommonErrorNode.get_IsNil()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.Line">
            <summary>Sets the stub of CommonTree.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.Parent">
            <summary>Sets the stub of CommonTree.get_Parent()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.Text">
            <summary>Sets the stub of CommonErrorNode.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.Token">
            <summary>Sets the stub of CommonTree.get_Token()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.TokenStartIndex">
            <summary>Sets the stub of CommonTree.get_TokenStartIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.TokenStopIndex">
            <summary>Sets the stub of CommonTree.get_TokenStopIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonErrorNode.Type">
            <summary>Sets the stub of CommonErrorNode.get_Type()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubCommonTree">
            <summary>Stub type of Antlr.Runtime.Tree.CommonTree</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.#ctor(Antlr.Runtime.IToken)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.#ctor(Antlr.Runtime.Tree.CommonTree)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.AddChild(Antlr.Runtime.Tree.ITree)">
            <summary>Sets the stub of BaseTree.AddChild(ITree t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.AddChildITree">
            <summary>Sets the stub of BaseTree.AddChild(ITree t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.AddChildren(System.Collections.Generic.IEnumerable{Antlr.Runtime.Tree.ITree})">
            <summary>Sets the stub of BaseTree.AddChildren(IEnumerable`1&lt;ITree&gt; kids)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.AddChildrenIEnumerableOfITree">
            <summary>Sets the stub of BaseTree.AddChildren(IEnumerable`1&lt;ITree&gt; kids)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.AttachBackingFieldToCharPositionInLine">
            <summary>Attaches delegates to emulate StubCommonTree.CharPositionInLine as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.AttachBackingFieldToChildIndex">
            <summary>Attaches delegates to emulate StubCommonTree.ChildIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.AttachBackingFieldToLine">
            <summary>Attaches delegates to emulate StubCommonTree.Line as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.AttachBackingFieldToParent">
            <summary>Attaches delegates to emulate StubCommonTree.Parent as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubCommonTree.Text as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.AttachBackingFieldToToken">
            <summary>Attaches delegates to emulate StubCommonTree.Token as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.AttachBackingFieldToTokenStartIndex">
            <summary>Attaches delegates to emulate StubCommonTree.TokenStartIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.AttachBackingFieldToTokenStopIndex">
            <summary>Attaches delegates to emulate StubCommonTree.TokenStopIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.AttachBackingFieldToType">
            <summary>Attaches delegates to emulate StubCommonTree.Type as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.CharPositionInLineGet">
            <summary>Sets the stub of CommonTree.get_CharPositionInLine()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.CharPositionInLineSetInt32">
            <summary>Sets the stub of CommonTree.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.ChildCountGet">
            <summary>Sets the stub of BaseTree.get_ChildCount()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.ChildIndexGet">
            <summary>Sets the stub of CommonTree.get_ChildIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.ChildIndexSetInt32">
            <summary>Sets the stub of CommonTree.set_ChildIndex(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.CreateChildrenList">
            <summary>Sets the stub of BaseTree.CreateChildrenList()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.CreateChildrenList01">
            <summary>Sets the stub of BaseTree.CreateChildrenList()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.DeleteChild(System.Int32)">
            <summary>Sets the stub of BaseTree.DeleteChild(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.DeleteChildInt32">
            <summary>Sets the stub of BaseTree.DeleteChild(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.DupNode">
            <summary>Sets the stub of CommonTree.DupNode()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.DupNode01">
            <summary>Sets the stub of CommonTree.DupNode()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.FreshenParentAndChildIndexes">
            <summary>Sets the stub of BaseTree.FreshenParentAndChildIndexes()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.FreshenParentAndChildIndexes(System.Int32)">
            <summary>Sets the stub of BaseTree.FreshenParentAndChildIndexes(Int32 offset)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.FreshenParentAndChildIndexes01">
            <summary>Sets the stub of BaseTree.FreshenParentAndChildIndexes()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.FreshenParentAndChildIndexesInt32">
            <summary>Sets the stub of BaseTree.FreshenParentAndChildIndexes(Int32 offset)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.GetAncestor(System.Int32)">
            <summary>Sets the stub of BaseTree.GetAncestor(Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.GetAncestorInt32">
            <summary>Sets the stub of BaseTree.GetAncestor(Int32 ttype)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.GetAncestors">
            <summary>Sets the stub of BaseTree.GetAncestors()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.GetAncestors01">
            <summary>Sets the stub of BaseTree.GetAncestors()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.GetChild(System.Int32)">
            <summary>Sets the stub of BaseTree.GetChild(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.GetChildInt32">
            <summary>Sets the stub of BaseTree.GetChild(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.GetFirstChildWithType(System.Int32)">
            <summary>Sets the stub of BaseTree.GetFirstChildWithType(Int32 type)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.GetFirstChildWithTypeInt32">
            <summary>Sets the stub of BaseTree.GetFirstChildWithType(Int32 type)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.HasAncestor(System.Int32)">
            <summary>Sets the stub of BaseTree.HasAncestor(Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.HasAncestorInt32">
            <summary>Sets the stub of BaseTree.HasAncestor(Int32 ttype)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.InitializeStub">
            <summary>Initializes a new instance of type StubCommonTree</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.IsNilGet">
            <summary>Sets the stub of CommonTree.get_IsNil()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.LineGet">
            <summary>Sets the stub of CommonTree.get_Line()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.LineSetInt32">
            <summary>Sets the stub of CommonTree.set_Line(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.ParentGet">
            <summary>Sets the stub of CommonTree.get_Parent()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.ParentSetITree">
            <summary>Sets the stub of CommonTree.set_Parent(ITree value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.ReplaceChildren(System.Int32,System.Int32,System.Object)">
            <summary>Sets the stub of BaseTree.ReplaceChildren(Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.ReplaceChildrenInt32Int32Object">
            <summary>Sets the stub of BaseTree.ReplaceChildren(Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.SanityCheckParentAndChildIndexes">
            <summary>Sets the stub of BaseTree.SanityCheckParentAndChildIndexes()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.SanityCheckParentAndChildIndexes(Antlr.Runtime.Tree.ITree,System.Int32)">
            <summary>Sets the stub of BaseTree.SanityCheckParentAndChildIndexes(ITree parent, Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.SanityCheckParentAndChildIndexes01">
            <summary>Sets the stub of BaseTree.SanityCheckParentAndChildIndexes()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.SanityCheckParentAndChildIndexesITreeInt32">
            <summary>Sets the stub of BaseTree.SanityCheckParentAndChildIndexes(ITree parent, Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.SetChild(System.Int32,Antlr.Runtime.Tree.ITree)">
            <summary>Sets the stub of BaseTree.SetChild(Int32 i, ITree t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.SetChildInt32ITree">
            <summary>Sets the stub of BaseTree.SetChild(Int32 i, ITree t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.SetUnknownTokenBoundaries">
            <summary>Sets the stub of CommonTree.SetUnknownTokenBoundaries()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.SetUnknownTokenBoundaries01">
            <summary>Sets the stub of CommonTree.SetUnknownTokenBoundaries()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.TextGet">
            <summary>Sets the stub of CommonTree.get_Text()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.TextSetString">
            <summary>Sets the stub of CommonTree.set_Text(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.ToString">
            <summary>Sets the stub of CommonTree.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.ToString01">
            <summary>Sets the stub of CommonTree.ToString()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTree.ToStringTree">
            <summary>Sets the stub of BaseTree.ToStringTree()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.ToStringTree01">
            <summary>Sets the stub of BaseTree.ToStringTree()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.TokenGet">
            <summary>Sets the stub of CommonTree.get_Token()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.TokenSetIToken">
            <summary>Sets the stub of CommonTree.set_Token(IToken value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.TokenStartIndexGet">
            <summary>Sets the stub of CommonTree.get_TokenStartIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.TokenStartIndexSetInt32">
            <summary>Sets the stub of CommonTree.set_TokenStartIndex(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.TokenStopIndexGet">
            <summary>Sets the stub of CommonTree.get_TokenStopIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.TokenStopIndexSetInt32">
            <summary>Sets the stub of CommonTree.set_TokenStopIndex(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.TypeGet">
            <summary>Sets the stub of CommonTree.get_Type()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTree.TypeSetInt32">
            <summary>Sets the stub of CommonTree.set_Type(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTree.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTree.CharPositionInLine">
            <summary>Sets the stub of CommonTree.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTree.ChildCount">
            <summary>Sets the stub of BaseTree.get_ChildCount()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTree.ChildIndex">
            <summary>Sets the stub of CommonTree.get_ChildIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTree.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTree.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTree.IsNil">
            <summary>Sets the stub of CommonTree.get_IsNil()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTree.Line">
            <summary>Sets the stub of CommonTree.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTree.Parent">
            <summary>Sets the stub of CommonTree.get_Parent()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTree.Text">
            <summary>Sets the stub of CommonTree.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTree.Token">
            <summary>Sets the stub of CommonTree.get_Token()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTree.TokenStartIndex">
            <summary>Sets the stub of CommonTree.get_TokenStartIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTree.TokenStopIndex">
            <summary>Sets the stub of CommonTree.get_TokenStopIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTree.Type">
            <summary>Sets the stub of CommonTree.get_Type()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor">
            <summary>Stub type of Antlr.Runtime.Tree.CommonTreeAdaptor</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.AddChild(System.Object,System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.AddChild(Object t, Object child)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.AddChildObjectObject">
            <summary>Sets the stub of BaseTreeAdaptor.AddChild(Object t, Object child)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.BecomeRoot(Antlr.Runtime.IToken,System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.BecomeRoot(IToken newRoot, Object oldRoot)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.BecomeRoot(System.Object,System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.BecomeRoot(Object newRoot, Object oldRoot)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.BecomeRootITokenObject">
            <summary>Sets the stub of BaseTreeAdaptor.BecomeRoot(IToken newRoot, Object oldRoot)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.BecomeRootObjectObject">
            <summary>Sets the stub of BaseTreeAdaptor.BecomeRoot(Object newRoot, Object oldRoot)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.Create(Antlr.Runtime.IToken)">
            <summary>Sets the stub of CommonTreeAdaptor.Create(IToken payload)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.Create(System.Int32,Antlr.Runtime.IToken)">
            <summary>Sets the stub of BaseTreeAdaptor.Create(Int32 tokenType, IToken fromToken)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.Create(Antlr.Runtime.IToken,System.String)">
            <summary>Sets the stub of BaseTreeAdaptor.Create(IToken fromToken, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.Create(System.Int32,System.String)">
            <summary>Sets the stub of BaseTreeAdaptor.Create(Int32 tokenType, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.Create(System.Int32,Antlr.Runtime.IToken,System.String)">
            <summary>Sets the stub of BaseTreeAdaptor.Create(Int32 tokenType, IToken fromToken, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.CreateIToken">
            <summary>Sets the stub of CommonTreeAdaptor.Create(IToken payload)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.CreateITokenString">
            <summary>Sets the stub of BaseTreeAdaptor.Create(IToken fromToken, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.CreateInt32IToken">
            <summary>Sets the stub of BaseTreeAdaptor.Create(Int32 tokenType, IToken fromToken)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.CreateInt32ITokenString">
            <summary>Sets the stub of BaseTreeAdaptor.Create(Int32 tokenType, IToken fromToken, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.CreateInt32String">
            <summary>Sets the stub of BaseTreeAdaptor.Create(Int32 tokenType, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.CreateToken(Antlr.Runtime.IToken)">
            <summary>Sets the stub of CommonTreeAdaptor.CreateToken(IToken fromToken)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.CreateToken(System.Int32,System.String)">
            <summary>Sets the stub of CommonTreeAdaptor.CreateToken(Int32 tokenType, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.CreateTokenIToken">
            <summary>Sets the stub of CommonTreeAdaptor.CreateToken(IToken fromToken)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.CreateTokenInt32String">
            <summary>Sets the stub of CommonTreeAdaptor.CreateToken(Int32 tokenType, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.DeleteChild(System.Object,System.Int32)">
            <summary>Sets the stub of BaseTreeAdaptor.DeleteChild(Object t, Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.DeleteChildObjectInt32">
            <summary>Sets the stub of BaseTreeAdaptor.DeleteChild(Object t, Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.DupNode(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.DupNode(Object treeNode)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.DupNode(System.Int32,System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.DupNode(Int32 type, Object treeNode)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.DupNode(System.Object,System.String)">
            <summary>Sets the stub of BaseTreeAdaptor.DupNode(Object treeNode, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.DupNode(System.Int32,System.Object,System.String)">
            <summary>Sets the stub of BaseTreeAdaptor.DupNode(Int32 type, Object treeNode, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.DupNodeInt32Object">
            <summary>Sets the stub of BaseTreeAdaptor.DupNode(Int32 type, Object treeNode)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.DupNodeInt32ObjectString">
            <summary>Sets the stub of BaseTreeAdaptor.DupNode(Int32 type, Object treeNode, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.DupNodeObject">
            <summary>Sets the stub of BaseTreeAdaptor.DupNode(Object treeNode)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.DupNodeObjectString">
            <summary>Sets the stub of BaseTreeAdaptor.DupNode(Object treeNode, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.DupTree(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.DupTree(Object tree)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.DupTree(System.Object,System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.DupTree(Object t, Object parent)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.DupTreeObject">
            <summary>Sets the stub of BaseTreeAdaptor.DupTree(Object tree)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.DupTreeObjectObject">
            <summary>Sets the stub of BaseTreeAdaptor.DupTree(Object t, Object parent)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.ErrorNode(Antlr.Runtime.ITokenStream,Antlr.Runtime.IToken,Antlr.Runtime.IToken,Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseTreeAdaptor.ErrorNode(ITokenStream input, IToken start, IToken stop, RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.ErrorNodeITokenStreamITokenITokenRecognitionException">
            <summary>Sets the stub of BaseTreeAdaptor.ErrorNode(ITokenStream input, IToken start, IToken stop, RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetChild(System.Object,System.Int32)">
            <summary>Sets the stub of BaseTreeAdaptor.GetChild(Object t, Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetChildCount(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetChildCount(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetChildCountObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetChildCount(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetChildIndex(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetChildIndex(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetChildIndexObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetChildIndex(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetChildObjectInt32">
            <summary>Sets the stub of BaseTreeAdaptor.GetChild(Object t, Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetParent(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetParent(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetParentObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetParent(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetText(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetText(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetTextObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetText(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetToken(System.Object)">
            <summary>Sets the stub of CommonTreeAdaptor.GetToken(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetTokenObject">
            <summary>Sets the stub of CommonTreeAdaptor.GetToken(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetTokenStartIndex(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetTokenStartIndex(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetTokenStartIndexObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetTokenStartIndex(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetTokenStopIndex(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetTokenStopIndex(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetTokenStopIndexObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetTokenStopIndex(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetTree(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetTree(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetTreeObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetTree(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetType(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetType(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetTypeObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetType(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetUniqueID(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.GetUniqueID(Object node)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.GetUniqueIDObject">
            <summary>Sets the stub of BaseTreeAdaptor.GetUniqueID(Object node)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.InitializeStub">
            <summary>Initializes a new instance of type StubCommonTreeAdaptor</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.IsNil(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.IsNil(Object tree)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.IsNilObject">
            <summary>Sets the stub of BaseTreeAdaptor.IsNil(Object tree)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.Nil">
            <summary>Sets the stub of BaseTreeAdaptor.Nil()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.Nil01">
            <summary>Sets the stub of BaseTreeAdaptor.Nil()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.ReplaceChildren(System.Object,System.Int32,System.Int32,System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.ReplaceChildrenObjectInt32Int32Object">
            <summary>Sets the stub of BaseTreeAdaptor.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.RulePostProcessing(System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.RulePostProcessing(Object root)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.RulePostProcessingObject">
            <summary>Sets the stub of BaseTreeAdaptor.RulePostProcessing(Object root)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.SetChild(System.Object,System.Int32,System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.SetChild(Object t, Int32 i, Object child)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.SetChildIndex(System.Object,System.Int32)">
            <summary>Sets the stub of BaseTreeAdaptor.SetChildIndex(Object t, Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.SetChildIndexObjectInt32">
            <summary>Sets the stub of BaseTreeAdaptor.SetChildIndex(Object t, Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.SetChildObjectInt32Object">
            <summary>Sets the stub of BaseTreeAdaptor.SetChild(Object t, Int32 i, Object child)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.SetParent(System.Object,System.Object)">
            <summary>Sets the stub of BaseTreeAdaptor.SetParent(Object t, Object parent)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.SetParentObjectObject">
            <summary>Sets the stub of BaseTreeAdaptor.SetParent(Object t, Object parent)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.SetText(System.Object,System.String)">
            <summary>Sets the stub of BaseTreeAdaptor.SetText(Object t, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.SetTextObjectString">
            <summary>Sets the stub of BaseTreeAdaptor.SetText(Object t, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.SetTokenBoundaries(System.Object,Antlr.Runtime.IToken,Antlr.Runtime.IToken)">
            <summary>Sets the stub of BaseTreeAdaptor.SetTokenBoundaries(Object t, IToken startToken, IToken stopToken)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.SetTokenBoundariesObjectITokenIToken">
            <summary>Sets the stub of BaseTreeAdaptor.SetTokenBoundaries(Object t, IToken startToken, IToken stopToken)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.SetType(System.Object,System.Int32)">
            <summary>Sets the stub of BaseTreeAdaptor.SetType(Object t, Int32 type)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.SetTypeObjectInt32">
            <summary>Sets the stub of BaseTreeAdaptor.SetType(Object t, Int32 type)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTreeAdaptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream">
            <summary>Stub type of Antlr.Runtime.Tree.CommonTreeNodeStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.AttachBackingFieldToRange">
            <summary>Attaches delegates to emulate StubCommonTreeNodeStream.Range as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.AttachBackingFieldToTokenStream">
            <summary>Attaches delegates to emulate StubCommonTreeNodeStream.TokenStream as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.AttachBackingFieldToTreeAdaptor">
            <summary>Attaches delegates to emulate StubCommonTreeNodeStream.TreeAdaptor as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.AttachBackingFieldToUniqueNavigationNodes">
            <summary>Attaches delegates to emulate StubCommonTreeNodeStream.UniqueNavigationNodes as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Clear">
            <summary>Sets the stub of LookaheadStream`1.Clear()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Clear01">
            <summary>Sets the stub of LookaheadStream`1.Clear()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Consume">
            <summary>Sets the stub of LookaheadStream`1.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Consume01">
            <summary>Sets the stub of LookaheadStream`1.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.CountGet">
            <summary>Sets the stub of LookaheadStream`1.get_Count()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Dequeue">
            <summary>Sets the stub of LookaheadStream`1.Dequeue()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Dequeue01">
            <summary>Sets the stub of LookaheadStream`1.Dequeue()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Enqueue(System.Object)">
            <summary>Sets the stub of FastQueue`1.Enqueue(!0 o)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.EnqueueObject">
            <summary>Sets the stub of FastQueue`1.Enqueue(!0 o)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Fill(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.Fill(Int32 n)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.FillInt32">
            <summary>Sets the stub of LookaheadStream`1.Fill(Int32 n)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.IndexGet">
            <summary>Sets the stub of LookaheadStream`1.get_Index()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.InitializeStub">
            <summary>Initializes a new instance of type StubCommonTreeNodeStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.IsEndOfFile(System.Object)">
            <summary>Sets the stub of CommonTreeNodeStream.IsEndOfFile(Object o)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.IsEndOfFileObject">
            <summary>Sets the stub of CommonTreeNodeStream.IsEndOfFile(Object o)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.ItemGetInt32">
            <summary>Sets the stub of FastQueue`1.get_Item(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.LA(System.Int32)">
            <summary>Sets the stub of CommonTreeNodeStream.LA(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.LAInt32">
            <summary>Sets the stub of CommonTreeNodeStream.LA(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.LB(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.LB(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.LBInt32">
            <summary>Sets the stub of LookaheadStream`1.LB(Int32 k)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.LT(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.LT(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.LTInt32">
            <summary>Sets the stub of LookaheadStream`1.LT(Int32 k)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Mark">
            <summary>Sets the stub of LookaheadStream`1.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Mark01">
            <summary>Sets the stub of LookaheadStream`1.Mark()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.NextElement">
            <summary>Sets the stub of CommonTreeNodeStream.NextElement()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.NextElement01">
            <summary>Sets the stub of CommonTreeNodeStream.NextElement()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Peek">
            <summary>Sets the stub of FastQueue`1.Peek()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Peek01">
            <summary>Sets the stub of FastQueue`1.Peek()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Pop">
            <summary>Sets the stub of CommonTreeNodeStream.Pop()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Pop01">
            <summary>Sets the stub of CommonTreeNodeStream.Pop()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Push(System.Int32)">
            <summary>Sets the stub of CommonTreeNodeStream.Push(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.PushInt32">
            <summary>Sets the stub of CommonTreeNodeStream.Push(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.RangeGet">
            <summary>Sets the stub of FastQueue`1.get_Range()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.RangeSetInt32">
            <summary>Sets the stub of FastQueue`1.set_Range(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Release(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.Release(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.ReleaseInt32">
            <summary>Sets the stub of LookaheadStream`1.Release(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.ReplaceChildren(System.Object,System.Int32,System.Int32,System.Object)">
            <summary>Sets the stub of CommonTreeNodeStream.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.ReplaceChildrenObjectInt32Int32Object">
            <summary>Sets the stub of CommonTreeNodeStream.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Reset">
            <summary>Sets the stub of CommonTreeNodeStream.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Reset01">
            <summary>Sets the stub of CommonTreeNodeStream.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Rewind">
            <summary>Sets the stub of LookaheadStream`1.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Rewind(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.Rewind(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Rewind01">
            <summary>Sets the stub of LookaheadStream`1.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.RewindInt32">
            <summary>Sets the stub of LookaheadStream`1.Rewind(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Seek(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.SeekInt32">
            <summary>Sets the stub of LookaheadStream`1.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.SourceNameGet">
            <summary>Sets the stub of CommonTreeNodeStream.get_SourceName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.SyncAhead(System.Int32)">
            <summary>Sets the stub of LookaheadStream`1.SyncAhead(Int32 need)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.SyncAheadInt32">
            <summary>Sets the stub of LookaheadStream`1.SyncAhead(Int32 need)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.ToString">
            <summary>Sets the stub of FastQueue`1.ToString()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.ToString(System.Object,System.Object)">
            <summary>Sets the stub of CommonTreeNodeStream.ToString(Object start, Object stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.ToString01">
            <summary>Sets the stub of FastQueue`1.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.ToStringObjectObject">
            <summary>Sets the stub of CommonTreeNodeStream.ToString(Object start, Object stop)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.ToTokenTypeString">
            <summary>Sets the stub of CommonTreeNodeStream.ToTokenTypeString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.ToTokenTypeString01">
            <summary>Sets the stub of CommonTreeNodeStream.ToTokenTypeString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.TokenStreamGet">
            <summary>Sets the stub of CommonTreeNodeStream.get_TokenStream()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.TokenStreamSetITokenStream">
            <summary>Sets the stub of CommonTreeNodeStream.set_TokenStream(ITokenStream value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.TreeAdaptorGet">
            <summary>Sets the stub of CommonTreeNodeStream.get_TreeAdaptor()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.TreeAdaptorSetITreeAdaptor">
            <summary>Sets the stub of CommonTreeNodeStream.set_TreeAdaptor(ITreeAdaptor value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.TreeSourceGet">
            <summary>Sets the stub of CommonTreeNodeStream.get_TreeSource()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.UniqueNavigationNodesGet">
            <summary>Sets the stub of CommonTreeNodeStream.get_UniqueNavigationNodes()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.UniqueNavigationNodesSetBoolean">
            <summary>Sets the stub of CommonTreeNodeStream.set_UniqueNavigationNodes(Boolean value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Count">
            <summary>Sets the stub of LookaheadStream`1.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Index">
            <summary>Sets the stub of LookaheadStream`1.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Item(System.Int32)">
            <summary>Sets the stub of FastQueue`1.get_Item(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.Range">
            <summary>Sets the stub of FastQueue`1.get_Range()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.SourceName">
            <summary>Sets the stub of CommonTreeNodeStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.TokenStream">
            <summary>Sets the stub of CommonTreeNodeStream.get_TokenStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.TreeAdaptor">
            <summary>Sets the stub of CommonTreeNodeStream.get_TreeAdaptor()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.TreeSource">
            <summary>Sets the stub of CommonTreeNodeStream.get_TreeSource()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubCommonTreeNodeStream.UniqueNavigationNodes">
            <summary>Sets the stub of CommonTreeNodeStream.get_UniqueNavigationNodes()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator">
            <summary>Stub type of Antlr.Runtime.Tree.DotTreeGenerator</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.DefineEdges(System.Object,Antlr.Runtime.Tree.ITreeAdaptor)">
            <summary>Sets the stub of DotTreeGenerator.DefineEdges(Object tree, ITreeAdaptor adaptor)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.DefineEdgesObjectITreeAdaptor">
            <summary>Sets the stub of DotTreeGenerator.DefineEdges(Object tree, ITreeAdaptor adaptor)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.DefineNodes(System.Object,Antlr.Runtime.Tree.ITreeAdaptor)">
            <summary>Sets the stub of DotTreeGenerator.DefineNodes(Object tree, ITreeAdaptor adaptor)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.DefineNodesObjectITreeAdaptor">
            <summary>Sets the stub of DotTreeGenerator.DefineNodes(Object tree, ITreeAdaptor adaptor)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.FixString(System.String)">
            <summary>Sets the stub of DotTreeGenerator.FixString(String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.FixStringString">
            <summary>Sets the stub of DotTreeGenerator.FixString(String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.GetNodeNumber(System.Object)">
            <summary>Sets the stub of DotTreeGenerator.GetNodeNumber(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.GetNodeNumberObject">
            <summary>Sets the stub of DotTreeGenerator.GetNodeNumber(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.GetNodeText(Antlr.Runtime.Tree.ITreeAdaptor,System.Object)">
            <summary>Sets the stub of DotTreeGenerator.GetNodeText(ITreeAdaptor adaptor, Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.GetNodeTextITreeAdaptorObject">
            <summary>Sets the stub of DotTreeGenerator.GetNodeText(ITreeAdaptor adaptor, Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubDotTreeGenerator</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.ToDot(Antlr.Runtime.Tree.ITree)">
            <summary>Sets the stub of DotTreeGenerator.ToDot(ITree tree)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.ToDot(System.Object,Antlr.Runtime.Tree.ITreeAdaptor)">
            <summary>Sets the stub of DotTreeGenerator.ToDot(Object tree, ITreeAdaptor adaptor)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.ToDotITree">
            <summary>Sets the stub of DotTreeGenerator.ToDot(ITree tree)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.ToDotObjectITreeAdaptor">
            <summary>Sets the stub of DotTreeGenerator.ToDot(Object tree, ITreeAdaptor adaptor)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubDotTreeGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubITree">
            <summary>Stub type of Antlr.Runtime.Tree.ITree</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.#ctor">
            <summary>Initializes a new instance of type StubITree</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.AddChildITree">
            <summary>Sets the stub of ITree.AddChild(ITree t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#AddChild(Antlr.Runtime.Tree.ITree)">
            <summary>Sets the stub of ITree.AddChild(ITree t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#DeleteChild(System.Int32)">
            <summary>Sets the stub of ITree.DeleteChild(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#DupNode">
            <summary>Sets the stub of ITree.DupNode()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#FreshenParentAndChildIndexes">
            <summary>Sets the stub of ITree.FreshenParentAndChildIndexes()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#GetAncestor(System.Int32)">
            <summary>Sets the stub of ITree.GetAncestor(Int32 ttype)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#GetAncestors">
            <summary>Sets the stub of ITree.GetAncestors()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#GetChild(System.Int32)">
            <summary>Sets the stub of ITree.GetChild(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#HasAncestor(System.Int32)">
            <summary>Sets the stub of ITree.HasAncestor(Int32 ttype)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#ReplaceChildren(System.Int32,System.Int32,System.Object)">
            <summary>Sets the stub of ITree.ReplaceChildren(Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#SetChild(System.Int32,Antlr.Runtime.Tree.ITree)">
            <summary>Sets the stub of ITree.SetChild(Int32 i, ITree t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#ToString">
            <summary>Sets the stub of ITree.ToString()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#ToStringTree">
            <summary>Sets the stub of ITree.ToStringTree()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.AttachBackingFieldToChildIndex">
            <summary>Attaches delegates to emulate StubITree.ChildIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.AttachBackingFieldToParent">
            <summary>Attaches delegates to emulate StubITree.Parent as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.AttachBackingFieldToTokenStartIndex">
            <summary>Attaches delegates to emulate StubITree.TokenStartIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITree.AttachBackingFieldToTokenStopIndex">
            <summary>Attaches delegates to emulate StubITree.TokenStopIndex as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.CharPositionInLineGet">
            <summary>Sets the stub of ITree.get_CharPositionInLine()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.ChildCountGet">
            <summary>Sets the stub of ITree.get_ChildCount()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.ChildIndexGet">
            <summary>Sets the stub of ITree.get_ChildIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.ChildIndexSetInt32">
            <summary>Sets the stub of ITree.set_ChildIndex(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.DeleteChildInt32">
            <summary>Sets the stub of ITree.DeleteChild(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.DupNode">
            <summary>Sets the stub of ITree.DupNode()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.FreshenParentAndChildIndexes">
            <summary>Sets the stub of ITree.FreshenParentAndChildIndexes()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.GetAncestorInt32">
            <summary>Sets the stub of ITree.GetAncestor(Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.GetAncestors">
            <summary>Sets the stub of ITree.GetAncestors()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.GetChildInt32">
            <summary>Sets the stub of ITree.GetChild(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.HasAncestorInt32">
            <summary>Sets the stub of ITree.HasAncestor(Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.IsNilGet">
            <summary>Sets the stub of ITree.get_IsNil()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.LineGet">
            <summary>Sets the stub of ITree.get_Line()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.ParentGet">
            <summary>Sets the stub of ITree.get_Parent()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.ParentSetITree">
            <summary>Sets the stub of ITree.set_Parent(ITree value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.ReplaceChildrenInt32Int32Object">
            <summary>Sets the stub of ITree.ReplaceChildren(Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.SetChildInt32ITree">
            <summary>Sets the stub of ITree.SetChild(Int32 i, ITree t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.TextGet">
            <summary>Sets the stub of ITree.get_Text()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.ToString">
            <summary>Sets the stub of ITree.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.ToStringTree">
            <summary>Sets the stub of ITree.ToStringTree()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.TokenStartIndexGet">
            <summary>Sets the stub of ITree.get_TokenStartIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.TokenStartIndexSetInt32">
            <summary>Sets the stub of ITree.set_TokenStartIndex(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.TokenStopIndexGet">
            <summary>Sets the stub of ITree.get_TokenStopIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.TokenStopIndexSetInt32">
            <summary>Sets the stub of ITree.set_TokenStopIndex(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITree.TypeGet">
            <summary>Sets the stub of ITree.get_Type()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#CharPositionInLine">
            <summary>Sets the stub of ITree.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#ChildCount">
            <summary>Sets the stub of ITree.get_ChildCount()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#ChildIndex">
            <summary>Sets the stub of ITree.get_ChildIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#IsNil">
            <summary>Sets the stub of ITree.get_IsNil()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#Line">
            <summary>Sets the stub of ITree.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#Parent">
            <summary>Sets the stub of ITree.get_Parent()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#Text">
            <summary>Sets the stub of ITree.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#TokenStartIndex">
            <summary>Sets the stub of ITree.get_TokenStartIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#TokenStopIndex">
            <summary>Sets the stub of ITree.get_TokenStopIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITree.a3r::Antlr#Runtime#Tree#ITree#Type">
            <summary>Sets the stub of ITree.get_Type()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor">
            <summary>Stub type of Antlr.Runtime.Tree.ITreeAdaptor</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.#ctor">
            <summary>Initializes a new instance of type StubITreeAdaptor</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.AddChildObjectObject">
            <summary>Sets the stub of ITreeAdaptor.AddChild(Object t, Object child)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#AddChild(System.Object,System.Object)">
            <summary>Sets the stub of ITreeAdaptor.AddChild(Object t, Object child)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#BecomeRoot(Antlr.Runtime.IToken,System.Object)">
            <summary>Sets the stub of ITreeAdaptor.BecomeRoot(IToken newRoot, Object oldRoot)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#BecomeRoot(System.Object,System.Object)">
            <summary>Sets the stub of ITreeAdaptor.BecomeRoot(Object newRoot, Object oldRoot)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#Create(Antlr.Runtime.IToken)">
            <summary>Sets the stub of ITreeAdaptor.Create(IToken payload)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#Create(Antlr.Runtime.IToken,System.String)">
            <summary>Sets the stub of ITreeAdaptor.Create(IToken fromToken, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#Create(System.Int32,Antlr.Runtime.IToken)">
            <summary>Sets the stub of ITreeAdaptor.Create(Int32 tokenType, IToken fromToken)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#Create(System.Int32,System.String)">
            <summary>Sets the stub of ITreeAdaptor.Create(Int32 tokenType, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#Create(System.Int32,Antlr.Runtime.IToken,System.String)">
            <summary>Sets the stub of ITreeAdaptor.Create(Int32 tokenType, IToken fromToken, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#DeleteChild(System.Object,System.Int32)">
            <summary>Sets the stub of ITreeAdaptor.DeleteChild(Object t, Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#DupNode(System.Object)">
            <summary>Sets the stub of ITreeAdaptor.DupNode(Object treeNode)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#DupNode(System.Int32,System.Object)">
            <summary>Sets the stub of ITreeAdaptor.DupNode(Int32 type, Object treeNode)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#DupNode(System.Object,System.String)">
            <summary>Sets the stub of ITreeAdaptor.DupNode(Object treeNode, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#DupNode(System.Int32,System.Object,System.String)">
            <summary>Sets the stub of ITreeAdaptor.DupNode(Int32 type, Object treeNode, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#DupTree(System.Object)">
            <summary>Sets the stub of ITreeAdaptor.DupTree(Object tree)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#ErrorNode(Antlr.Runtime.ITokenStream,Antlr.Runtime.IToken,Antlr.Runtime.IToken,Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of ITreeAdaptor.ErrorNode(ITokenStream input, IToken start, IToken stop, RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#GetChild(System.Object,System.Int32)">
            <summary>Sets the stub of ITreeAdaptor.GetChild(Object t, Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#GetChildCount(System.Object)">
            <summary>Sets the stub of ITreeAdaptor.GetChildCount(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#GetChildIndex(System.Object)">
            <summary>Sets the stub of ITreeAdaptor.GetChildIndex(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#GetParent(System.Object)">
            <summary>Sets the stub of ITreeAdaptor.GetParent(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#GetText(System.Object)">
            <summary>Sets the stub of ITreeAdaptor.GetText(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#GetToken(System.Object)">
            <summary>Sets the stub of ITreeAdaptor.GetToken(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#GetTokenStartIndex(System.Object)">
            <summary>Sets the stub of ITreeAdaptor.GetTokenStartIndex(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#GetTokenStopIndex(System.Object)">
            <summary>Sets the stub of ITreeAdaptor.GetTokenStopIndex(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#GetType(System.Object)">
            <summary>Sets the stub of ITreeAdaptor.GetType(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#GetUniqueID(System.Object)">
            <summary>Sets the stub of ITreeAdaptor.GetUniqueID(Object node)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#IsNil(System.Object)">
            <summary>Sets the stub of ITreeAdaptor.IsNil(Object tree)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#Nil">
            <summary>Sets the stub of ITreeAdaptor.Nil()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#ReplaceChildren(System.Object,System.Int32,System.Int32,System.Object)">
            <summary>Sets the stub of ITreeAdaptor.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#RulePostProcessing(System.Object)">
            <summary>Sets the stub of ITreeAdaptor.RulePostProcessing(Object root)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#SetChild(System.Object,System.Int32,System.Object)">
            <summary>Sets the stub of ITreeAdaptor.SetChild(Object t, Int32 i, Object child)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#SetChildIndex(System.Object,System.Int32)">
            <summary>Sets the stub of ITreeAdaptor.SetChildIndex(Object t, Int32 index)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#SetParent(System.Object,System.Object)">
            <summary>Sets the stub of ITreeAdaptor.SetParent(Object t, Object parent)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#SetText(System.Object,System.String)">
            <summary>Sets the stub of ITreeAdaptor.SetText(Object t, String text)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#SetTokenBoundaries(System.Object,Antlr.Runtime.IToken,Antlr.Runtime.IToken)">
            <summary>Sets the stub of ITreeAdaptor.SetTokenBoundaries(Object t, IToken startToken, IToken stopToken)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.a3r::Antlr#Runtime#Tree#ITreeAdaptor#SetType(System.Object,System.Int32)">
            <summary>Sets the stub of ITreeAdaptor.SetType(Object t, Int32 type)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.BecomeRootITokenObject">
            <summary>Sets the stub of ITreeAdaptor.BecomeRoot(IToken newRoot, Object oldRoot)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.BecomeRootObjectObject">
            <summary>Sets the stub of ITreeAdaptor.BecomeRoot(Object newRoot, Object oldRoot)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.CreateIToken">
            <summary>Sets the stub of ITreeAdaptor.Create(IToken payload)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.CreateITokenString">
            <summary>Sets the stub of ITreeAdaptor.Create(IToken fromToken, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.CreateInt32IToken">
            <summary>Sets the stub of ITreeAdaptor.Create(Int32 tokenType, IToken fromToken)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.CreateInt32ITokenString">
            <summary>Sets the stub of ITreeAdaptor.Create(Int32 tokenType, IToken fromToken, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.CreateInt32String">
            <summary>Sets the stub of ITreeAdaptor.Create(Int32 tokenType, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.DeleteChildObjectInt32">
            <summary>Sets the stub of ITreeAdaptor.DeleteChild(Object t, Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.DupNodeInt32Object">
            <summary>Sets the stub of ITreeAdaptor.DupNode(Int32 type, Object treeNode)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.DupNodeInt32ObjectString">
            <summary>Sets the stub of ITreeAdaptor.DupNode(Int32 type, Object treeNode, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.DupNodeObject">
            <summary>Sets the stub of ITreeAdaptor.DupNode(Object treeNode)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.DupNodeObjectString">
            <summary>Sets the stub of ITreeAdaptor.DupNode(Object treeNode, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.DupTreeObject">
            <summary>Sets the stub of ITreeAdaptor.DupTree(Object tree)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.ErrorNodeITokenStreamITokenITokenRecognitionException">
            <summary>Sets the stub of ITreeAdaptor.ErrorNode(ITokenStream input, IToken start, IToken stop, RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.GetChildCountObject">
            <summary>Sets the stub of ITreeAdaptor.GetChildCount(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.GetChildIndexObject">
            <summary>Sets the stub of ITreeAdaptor.GetChildIndex(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.GetChildObjectInt32">
            <summary>Sets the stub of ITreeAdaptor.GetChild(Object t, Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.GetParentObject">
            <summary>Sets the stub of ITreeAdaptor.GetParent(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.GetTextObject">
            <summary>Sets the stub of ITreeAdaptor.GetText(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.GetTokenObject">
            <summary>Sets the stub of ITreeAdaptor.GetToken(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.GetTokenStartIndexObject">
            <summary>Sets the stub of ITreeAdaptor.GetTokenStartIndex(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.GetTokenStopIndexObject">
            <summary>Sets the stub of ITreeAdaptor.GetTokenStopIndex(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.GetTypeObject">
            <summary>Sets the stub of ITreeAdaptor.GetType(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.GetUniqueIDObject">
            <summary>Sets the stub of ITreeAdaptor.GetUniqueID(Object node)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.IsNilObject">
            <summary>Sets the stub of ITreeAdaptor.IsNil(Object tree)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.Nil">
            <summary>Sets the stub of ITreeAdaptor.Nil()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.ReplaceChildrenObjectInt32Int32Object">
            <summary>Sets the stub of ITreeAdaptor.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.RulePostProcessingObject">
            <summary>Sets the stub of ITreeAdaptor.RulePostProcessing(Object root)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.SetChildIndexObjectInt32">
            <summary>Sets the stub of ITreeAdaptor.SetChildIndex(Object t, Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.SetChildObjectInt32Object">
            <summary>Sets the stub of ITreeAdaptor.SetChild(Object t, Int32 i, Object child)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.SetParentObjectObject">
            <summary>Sets the stub of ITreeAdaptor.SetParent(Object t, Object parent)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.SetTextObjectString">
            <summary>Sets the stub of ITreeAdaptor.SetText(Object t, String text)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.SetTokenBoundariesObjectITokenIToken">
            <summary>Sets the stub of ITreeAdaptor.SetTokenBoundaries(Object t, IToken startToken, IToken stopToken)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeAdaptor.SetTypeObjectInt32">
            <summary>Sets the stub of ITreeAdaptor.SetType(Object t, Int32 type)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream">
            <summary>Stub type of Antlr.Runtime.Tree.ITreeNodeStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.#ctor">
            <summary>Initializes a new instance of type StubITreeNodeStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#IIntStream#Consume">
            <summary>Sets the stub of IIntStream.Consume()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#IIntStream#LA(System.Int32)">
            <summary>Sets the stub of IIntStream.LA(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#IIntStream#Mark">
            <summary>Sets the stub of IIntStream.Mark()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#IIntStream#Release(System.Int32)">
            <summary>Sets the stub of IIntStream.Release(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#IIntStream#Rewind">
            <summary>Sets the stub of IIntStream.Rewind()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#IIntStream#Rewind(System.Int32)">
            <summary>Sets the stub of IIntStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#IIntStream#Seek(System.Int32)">
            <summary>Sets the stub of IIntStream.Seek(Int32 index)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#Tree#ITreeNodeStream#LT(System.Int32)">
            <summary>Sets the stub of ITreeNodeStream.LT(Int32 k)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#Tree#ITreeNodeStream#ReplaceChildren(System.Object,System.Int32,System.Int32,System.Object)">
            <summary>Sets the stub of ITreeNodeStream.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#Tree#ITreeNodeStream#ToString(System.Object,System.Object)">
            <summary>Sets the stub of ITreeNodeStream.ToString(Object start, Object stop)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.AttachBackingFieldToUniqueNavigationNodes">
            <summary>Attaches delegates to emulate StubITreeNodeStream.UniqueNavigationNodes as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.Consume">
            <summary>Sets the stub of IIntStream.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.CountGet">
            <summary>Sets the stub of IIntStream.get_Count()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.IndexGet">
            <summary>Sets the stub of IIntStream.get_Index()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.ItemGetInt32">
            <summary>Sets the stub of ITreeNodeStream.get_Item(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.LAInt32">
            <summary>Sets the stub of IIntStream.LA(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.LTInt32">
            <summary>Sets the stub of ITreeNodeStream.LT(Int32 k)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.Mark">
            <summary>Sets the stub of IIntStream.Mark()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.ReleaseInt32">
            <summary>Sets the stub of IIntStream.Release(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.ReplaceChildrenObjectInt32Int32Object">
            <summary>Sets the stub of ITreeNodeStream.ReplaceChildren(Object parent, Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.Rewind">
            <summary>Sets the stub of IIntStream.Rewind()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.RewindInt32">
            <summary>Sets the stub of IIntStream.Rewind(Int32 marker)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.SeekInt32">
            <summary>Sets the stub of IIntStream.Seek(Int32 index)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.SourceNameGet">
            <summary>Sets the stub of IIntStream.get_SourceName()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.ToStringObjectObject">
            <summary>Sets the stub of ITreeNodeStream.ToString(Object start, Object stop)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.TokenStreamGet">
            <summary>Sets the stub of ITreeNodeStream.get_TokenStream()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.TreeAdaptorGet">
            <summary>Sets the stub of ITreeNodeStream.get_TreeAdaptor()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.TreeSourceGet">
            <summary>Sets the stub of ITreeNodeStream.get_TreeSource()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.UniqueNavigationNodesGet">
            <summary>Sets the stub of ITreeNodeStream.get_UniqueNavigationNodes()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.UniqueNavigationNodesSetBoolean">
            <summary>Sets the stub of ITreeNodeStream.set_UniqueNavigationNodes(Boolean value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#IIntStream#Count">
            <summary>Sets the stub of IIntStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#IIntStream#Index">
            <summary>Sets the stub of IIntStream.get_Index()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.Antlr#Runtime#Tree#ITreeNodeStream#Item(System.Int32)">
            <summary>Sets the stub of ITreeNodeStream.get_Item(Int32 i)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#IIntStream#SourceName">
            <summary>Sets the stub of IIntStream.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#Tree#ITreeNodeStream#TokenStream">
            <summary>Sets the stub of ITreeNodeStream.get_TokenStream()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#Tree#ITreeNodeStream#TreeAdaptor">
            <summary>Sets the stub of ITreeNodeStream.get_TreeAdaptor()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#Tree#ITreeNodeStream#TreeSource">
            <summary>Sets the stub of ITreeNodeStream.get_TreeSource()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubITreeNodeStream.a3r::Antlr#Runtime#Tree#ITreeNodeStream#UniqueNavigationNodes">
            <summary>Sets the stub of ITreeNodeStream.get_UniqueNavigationNodes()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubITreeVisitorAction">
            <summary>Stub type of Antlr.Runtime.Tree.ITreeVisitorAction</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeVisitorAction.#ctor">
            <summary>Initializes a new instance of type StubITreeVisitorAction</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeVisitorAction.a3r::Antlr#Runtime#Tree#ITreeVisitorAction#Post(System.Object)">
            <summary>Sets the stub of ITreeVisitorAction.Post(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubITreeVisitorAction.a3r::Antlr#Runtime#Tree#ITreeVisitorAction#Pre(System.Object)">
            <summary>Sets the stub of ITreeVisitorAction.Pre(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeVisitorAction.PostObject">
            <summary>Sets the stub of ITreeVisitorAction.Post(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubITreeVisitorAction.PreObject">
            <summary>Sets the stub of ITreeVisitorAction.Pre(Object t)</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubParseTree">
            <summary>Stub type of Antlr.Runtime.Tree.ParseTree</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.AddChild(Antlr.Runtime.Tree.ITree)">
            <summary>Sets the stub of BaseTree.AddChild(ITree t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.AddChildITree">
            <summary>Sets the stub of BaseTree.AddChild(ITree t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.AddChildren(System.Collections.Generic.IEnumerable{Antlr.Runtime.Tree.ITree})">
            <summary>Sets the stub of BaseTree.AddChildren(IEnumerable`1&lt;ITree&gt; kids)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.AddChildrenIEnumerableOfITree">
            <summary>Sets the stub of BaseTree.AddChildren(IEnumerable`1&lt;ITree&gt; kids)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.AttachBackingFieldToCharPositionInLine">
            <summary>Attaches delegates to emulate StubParseTree.CharPositionInLine as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.AttachBackingFieldToChildIndex">
            <summary>Attaches delegates to emulate StubParseTree.ChildIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.AttachBackingFieldToLine">
            <summary>Attaches delegates to emulate StubParseTree.Line as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.AttachBackingFieldToParent">
            <summary>Attaches delegates to emulate StubParseTree.Parent as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.AttachBackingFieldToText">
            <summary>Attaches delegates to emulate StubParseTree.Text as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.AttachBackingFieldToTokenStartIndex">
            <summary>Attaches delegates to emulate StubParseTree.TokenStartIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.AttachBackingFieldToTokenStopIndex">
            <summary>Attaches delegates to emulate StubParseTree.TokenStopIndex as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.AttachBackingFieldToType">
            <summary>Attaches delegates to emulate StubParseTree.Type as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.CharPositionInLineGet">
            <summary>Sets the stub of BaseTree.get_CharPositionInLine()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.CharPositionInLineSetInt32">
            <summary>Sets the stub of BaseTree.set_CharPositionInLine(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.ChildCountGet">
            <summary>Sets the stub of BaseTree.get_ChildCount()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.ChildIndexGet">
            <summary>Sets the stub of BaseTree.get_ChildIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.ChildIndexSetInt32">
            <summary>Sets the stub of BaseTree.set_ChildIndex(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.CreateChildrenList">
            <summary>Sets the stub of BaseTree.CreateChildrenList()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.CreateChildrenList01">
            <summary>Sets the stub of BaseTree.CreateChildrenList()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.DeleteChild(System.Int32)">
            <summary>Sets the stub of BaseTree.DeleteChild(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.DeleteChildInt32">
            <summary>Sets the stub of BaseTree.DeleteChild(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.DupNode">
            <summary>Sets the stub of ParseTree.DupNode()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.DupNode01">
            <summary>Sets the stub of ParseTree.DupNode()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.FreshenParentAndChildIndexes">
            <summary>Sets the stub of BaseTree.FreshenParentAndChildIndexes()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.FreshenParentAndChildIndexes(System.Int32)">
            <summary>Sets the stub of BaseTree.FreshenParentAndChildIndexes(Int32 offset)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.FreshenParentAndChildIndexes01">
            <summary>Sets the stub of BaseTree.FreshenParentAndChildIndexes()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.FreshenParentAndChildIndexesInt32">
            <summary>Sets the stub of BaseTree.FreshenParentAndChildIndexes(Int32 offset)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.GetAncestor(System.Int32)">
            <summary>Sets the stub of BaseTree.GetAncestor(Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.GetAncestorInt32">
            <summary>Sets the stub of BaseTree.GetAncestor(Int32 ttype)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.GetAncestors">
            <summary>Sets the stub of BaseTree.GetAncestors()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.GetAncestors01">
            <summary>Sets the stub of BaseTree.GetAncestors()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.GetChild(System.Int32)">
            <summary>Sets the stub of BaseTree.GetChild(Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.GetChildInt32">
            <summary>Sets the stub of BaseTree.GetChild(Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.GetFirstChildWithType(System.Int32)">
            <summary>Sets the stub of BaseTree.GetFirstChildWithType(Int32 type)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.GetFirstChildWithTypeInt32">
            <summary>Sets the stub of BaseTree.GetFirstChildWithType(Int32 type)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.HasAncestor(System.Int32)">
            <summary>Sets the stub of BaseTree.HasAncestor(Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.HasAncestorInt32">
            <summary>Sets the stub of BaseTree.HasAncestor(Int32 ttype)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.InitializeStub">
            <summary>Initializes a new instance of type StubParseTree</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.IsNilGet">
            <summary>Sets the stub of BaseTree.get_IsNil()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.LineGet">
            <summary>Sets the stub of BaseTree.get_Line()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.LineSetInt32">
            <summary>Sets the stub of BaseTree.set_Line(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.ParentGet">
            <summary>Sets the stub of BaseTree.get_Parent()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.ParentSetITree">
            <summary>Sets the stub of BaseTree.set_Parent(ITree value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.ReplaceChildren(System.Int32,System.Int32,System.Object)">
            <summary>Sets the stub of BaseTree.ReplaceChildren(Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.ReplaceChildrenInt32Int32Object">
            <summary>Sets the stub of BaseTree.ReplaceChildren(Int32 startChildIndex, Int32 stopChildIndex, Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.SanityCheckParentAndChildIndexes">
            <summary>Sets the stub of BaseTree.SanityCheckParentAndChildIndexes()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.SanityCheckParentAndChildIndexes(Antlr.Runtime.Tree.ITree,System.Int32)">
            <summary>Sets the stub of BaseTree.SanityCheckParentAndChildIndexes(ITree parent, Int32 i)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.SanityCheckParentAndChildIndexes01">
            <summary>Sets the stub of BaseTree.SanityCheckParentAndChildIndexes()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.SanityCheckParentAndChildIndexesITreeInt32">
            <summary>Sets the stub of BaseTree.SanityCheckParentAndChildIndexes(ITree parent, Int32 i)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.SetChild(System.Int32,Antlr.Runtime.Tree.ITree)">
            <summary>Sets the stub of BaseTree.SetChild(Int32 i, ITree t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.SetChildInt32ITree">
            <summary>Sets the stub of BaseTree.SetChild(Int32 i, ITree t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.TextGet">
            <summary>Sets the stub of ParseTree.get_Text()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.TextSetString">
            <summary>Sets the stub of ParseTree.set_Text(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.ToInputString">
            <summary>Sets the stub of ParseTree.ToInputString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.ToInputString01">
            <summary>Sets the stub of ParseTree.ToInputString()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.ToString">
            <summary>Sets the stub of ParseTree.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.ToString01">
            <summary>Sets the stub of ParseTree.ToString()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.ToStringLeaves(System.Text.StringBuilder)">
            <summary>Sets the stub of ParseTree.ToStringLeaves(StringBuilder buf)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.ToStringLeavesStringBuilder">
            <summary>Sets the stub of ParseTree.ToStringLeaves(StringBuilder buf)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.ToStringTree">
            <summary>Sets the stub of BaseTree.ToStringTree()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.ToStringTree01">
            <summary>Sets the stub of BaseTree.ToStringTree()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubParseTree.ToStringWithHiddenTokens">
            <summary>Sets the stub of ParseTree.ToStringWithHiddenTokens()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.ToStringWithHiddenTokens01">
            <summary>Sets the stub of ParseTree.ToStringWithHiddenTokens()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.TokenStartIndexGet">
            <summary>Sets the stub of ParseTree.get_TokenStartIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.TokenStartIndexSetInt32">
            <summary>Sets the stub of ParseTree.set_TokenStartIndex(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.TokenStopIndexGet">
            <summary>Sets the stub of ParseTree.get_TokenStopIndex()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.TokenStopIndexSetInt32">
            <summary>Sets the stub of ParseTree.set_TokenStopIndex(Int32 value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.TypeGet">
            <summary>Sets the stub of ParseTree.get_Type()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubParseTree.TypeSetInt32">
            <summary>Sets the stub of ParseTree.set_Type(Int32 value)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubParseTree.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubParseTree.CharPositionInLine">
            <summary>Sets the stub of BaseTree.get_CharPositionInLine()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubParseTree.ChildCount">
            <summary>Sets the stub of BaseTree.get_ChildCount()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubParseTree.ChildIndex">
            <summary>Sets the stub of BaseTree.get_ChildIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubParseTree.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubParseTree.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubParseTree.IsNil">
            <summary>Sets the stub of BaseTree.get_IsNil()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubParseTree.Line">
            <summary>Sets the stub of BaseTree.get_Line()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubParseTree.Parent">
            <summary>Sets the stub of BaseTree.get_Parent()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubParseTree.Text">
            <summary>Sets the stub of ParseTree.get_Text()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubParseTree.TokenStartIndex">
            <summary>Sets the stub of ParseTree.get_TokenStartIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubParseTree.TokenStopIndex">
            <summary>Sets the stub of ParseTree.get_TokenStopIndex()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubParseTree.Type">
            <summary>Sets the stub of ParseTree.get_Type()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException">
            <summary>Stub type of Antlr.Runtime.Tree.RewriteCardinalityException</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.#ctor(System.String,System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubRewriteCardinalityException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubRewriteCardinalityException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.InitializeStub">
            <summary>Initializes a new instance of type StubRewriteCardinalityException</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteCardinalityException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException">
            <summary>Stub type of Antlr.Runtime.Tree.RewriteEarlyExitException</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.#ctor(System.String,System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubRewriteEarlyExitException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubRewriteEarlyExitException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.InitializeStub">
            <summary>Initializes a new instance of type StubRewriteEarlyExitException</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteEarlyExitException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException">
            <summary>Stub type of Antlr.Runtime.Tree.RewriteEmptyStreamException</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.#ctor(System.String,System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubRewriteEmptyStreamException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubRewriteEmptyStreamException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.InitializeStub">
            <summary>Initializes a new instance of type StubRewriteEmptyStreamException</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteEmptyStreamException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream">
            <summary>Stub type of Antlr.Runtime.Tree.RewriteRuleElementStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.String,System.Collections.IList)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.Add(System.Object)">
            <summary>Sets the stub of RewriteRuleElementStream.Add(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.AddObject">
            <summary>Sets the stub of RewriteRuleElementStream.Add(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.CountGet">
            <summary>Sets the stub of RewriteRuleElementStream.get_Count()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.DescriptionGet">
            <summary>Sets the stub of RewriteRuleElementStream.get_Description()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.Dup(System.Object)">
            <summary>Sets the stub of RewriteRuleElementStream.Dup(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.DupObject">
            <summary>Sets the stub of RewriteRuleElementStream.Dup(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.HasNextGet">
            <summary>Sets the stub of RewriteRuleElementStream.get_HasNext()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.InitializeStub">
            <summary>Initializes a new instance of type StubRewriteRuleElementStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.NextCore">
            <summary>Sets the stub of RewriteRuleElementStream.NextCore()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.NextCore01">
            <summary>Sets the stub of RewriteRuleElementStream.NextCore()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.NextTree">
            <summary>Sets the stub of RewriteRuleElementStream.NextTree()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.NextTree01">
            <summary>Sets the stub of RewriteRuleElementStream.NextTree()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.Reset">
            <summary>Sets the stub of RewriteRuleElementStream.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.Reset01">
            <summary>Sets the stub of RewriteRuleElementStream.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.ToTree(System.Object)">
            <summary>Sets the stub of RewriteRuleElementStream.ToTree(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.ToTreeObject">
            <summary>Sets the stub of RewriteRuleElementStream.ToTree(Object el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.Count">
            <summary>Sets the stub of RewriteRuleElementStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.Description">
            <summary>Sets the stub of RewriteRuleElementStream.get_Description()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.HasNext">
            <summary>Sets the stub of RewriteRuleElementStream.get_HasNext()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleElementStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream">
            <summary>Stub type of Antlr.Runtime.Tree.RewriteRuleNodeStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.String,System.Collections.IList)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.Add(System.Object)">
            <summary>Sets the stub of RewriteRuleElementStream.Add(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.AddObject">
            <summary>Sets the stub of RewriteRuleElementStream.Add(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.CountGet">
            <summary>Sets the stub of RewriteRuleElementStream.get_Count()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.DescriptionGet">
            <summary>Sets the stub of RewriteRuleElementStream.get_Description()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.Dup(System.Object)">
            <summary>Sets the stub of RewriteRuleNodeStream.Dup(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.DupObject">
            <summary>Sets the stub of RewriteRuleNodeStream.Dup(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.HasNextGet">
            <summary>Sets the stub of RewriteRuleElementStream.get_HasNext()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.InitializeStub">
            <summary>Initializes a new instance of type StubRewriteRuleNodeStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.NextCore">
            <summary>Sets the stub of RewriteRuleElementStream.NextCore()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.NextCore01">
            <summary>Sets the stub of RewriteRuleElementStream.NextCore()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.NextNode">
            <summary>Sets the stub of RewriteRuleNodeStream.NextNode()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.NextNode01">
            <summary>Sets the stub of RewriteRuleNodeStream.NextNode()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.NextTree">
            <summary>Sets the stub of RewriteRuleElementStream.NextTree()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.NextTree01">
            <summary>Sets the stub of RewriteRuleElementStream.NextTree()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.Reset">
            <summary>Sets the stub of RewriteRuleElementStream.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.Reset01">
            <summary>Sets the stub of RewriteRuleElementStream.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.ToTree(System.Object)">
            <summary>Sets the stub of RewriteRuleNodeStream.ToTree(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.ToTreeObject">
            <summary>Sets the stub of RewriteRuleNodeStream.ToTree(Object el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.Count">
            <summary>Sets the stub of RewriteRuleElementStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.Description">
            <summary>Sets the stub of RewriteRuleElementStream.get_Description()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.HasNext">
            <summary>Sets the stub of RewriteRuleElementStream.get_HasNext()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleNodeStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream">
            <summary>Stub type of Antlr.Runtime.Tree.RewriteRuleSubtreeStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.String,System.Collections.IList)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.Add(System.Object)">
            <summary>Sets the stub of RewriteRuleElementStream.Add(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.AddObject">
            <summary>Sets the stub of RewriteRuleElementStream.Add(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.CountGet">
            <summary>Sets the stub of RewriteRuleElementStream.get_Count()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.DescriptionGet">
            <summary>Sets the stub of RewriteRuleElementStream.get_Description()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.Dup(System.Object)">
            <summary>Sets the stub of RewriteRuleSubtreeStream.Dup(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.DupObject">
            <summary>Sets the stub of RewriteRuleSubtreeStream.Dup(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.HasNextGet">
            <summary>Sets the stub of RewriteRuleElementStream.get_HasNext()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.InitializeStub">
            <summary>Initializes a new instance of type StubRewriteRuleSubtreeStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.NextCore">
            <summary>Sets the stub of RewriteRuleElementStream.NextCore()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.NextCore01">
            <summary>Sets the stub of RewriteRuleElementStream.NextCore()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.NextNode">
            <summary>Sets the stub of RewriteRuleSubtreeStream.NextNode()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.NextNode01">
            <summary>Sets the stub of RewriteRuleSubtreeStream.NextNode()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.NextTree">
            <summary>Sets the stub of RewriteRuleElementStream.NextTree()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.NextTree01">
            <summary>Sets the stub of RewriteRuleElementStream.NextTree()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.Reset">
            <summary>Sets the stub of RewriteRuleElementStream.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.Reset01">
            <summary>Sets the stub of RewriteRuleElementStream.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.ToTree(System.Object)">
            <summary>Sets the stub of RewriteRuleElementStream.ToTree(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.ToTreeObject">
            <summary>Sets the stub of RewriteRuleElementStream.ToTree(Object el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.Count">
            <summary>Sets the stub of RewriteRuleElementStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.Description">
            <summary>Sets the stub of RewriteRuleElementStream.get_Description()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.HasNext">
            <summary>Sets the stub of RewriteRuleElementStream.get_HasNext()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleSubtreeStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream">
            <summary>Stub type of Antlr.Runtime.Tree.RewriteRuleTokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.String,System.Collections.IList)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.Add(System.Object)">
            <summary>Sets the stub of RewriteRuleElementStream.Add(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.AddObject">
            <summary>Sets the stub of RewriteRuleElementStream.Add(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.CountGet">
            <summary>Sets the stub of RewriteRuleElementStream.get_Count()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.DescriptionGet">
            <summary>Sets the stub of RewriteRuleElementStream.get_Description()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.Dup(System.Object)">
            <summary>Sets the stub of RewriteRuleTokenStream.Dup(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.DupObject">
            <summary>Sets the stub of RewriteRuleTokenStream.Dup(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.HasNextGet">
            <summary>Sets the stub of RewriteRuleElementStream.get_HasNext()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.InitializeStub">
            <summary>Initializes a new instance of type StubRewriteRuleTokenStream</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.NextCore">
            <summary>Sets the stub of RewriteRuleElementStream.NextCore()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.NextCore01">
            <summary>Sets the stub of RewriteRuleElementStream.NextCore()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.NextNode">
            <summary>Sets the stub of RewriteRuleTokenStream.NextNode()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.NextNode01">
            <summary>Sets the stub of RewriteRuleTokenStream.NextNode()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.NextToken">
            <summary>Sets the stub of RewriteRuleTokenStream.NextToken()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.NextToken01">
            <summary>Sets the stub of RewriteRuleTokenStream.NextToken()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.NextTree">
            <summary>Sets the stub of RewriteRuleElementStream.NextTree()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.NextTree01">
            <summary>Sets the stub of RewriteRuleElementStream.NextTree()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.Reset">
            <summary>Sets the stub of RewriteRuleElementStream.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.Reset01">
            <summary>Sets the stub of RewriteRuleElementStream.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.ToTree(System.Object)">
            <summary>Sets the stub of RewriteRuleTokenStream.ToTree(Object el)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.ToTreeObject">
            <summary>Sets the stub of RewriteRuleTokenStream.ToTree(Object el)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.Count">
            <summary>Sets the stub of RewriteRuleElementStream.get_Count()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.Description">
            <summary>Sets the stub of RewriteRuleElementStream.get_Description()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.HasNext">
            <summary>Sets the stub of RewriteRuleElementStream.get_HasNext()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubRewriteRuleTokenStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubTreeFilter">
            <summary>Stub type of Antlr.Runtime.Tree.TreeFilter</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.#ctor(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.#ctor(Antlr.Runtime.Tree.ITreeNodeStream,Antlr.Runtime.RecognizerSharedState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.AlreadyParsedRule(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.AlreadyParsedRuleIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.ApplyOnce(System.Object,System.Action)">
            <summary>Sets the stub of TreeFilter.ApplyOnce(Object t, Action whichRule)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.ApplyOnceObjectAction">
            <summary>Sets the stub of TreeFilter.ApplyOnce(Object t, Action whichRule)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.AttachBackingFieldToBacktrackingLevel">
            <summary>Attaches delegates to emulate StubTreeFilter.BacktrackingLevel as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.BacktrackingLevelGet">
            <summary>Sets the stub of BaseRecognizer.get_BacktrackingLevel()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.BacktrackingLevelSetInt32">
            <summary>Sets the stub of BaseRecognizer.set_BacktrackingLevel(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.BeginResync">
            <summary>Sets the stub of BaseRecognizer.BeginResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.BeginResync01">
            <summary>Sets the stub of BaseRecognizer.BeginResync()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.Bottomup">
            <summary>Sets the stub of TreeFilter.Bottomup()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.Bottomup01">
            <summary>Sets the stub of TreeFilter.Bottomup()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.CombineFollows(System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.CombineFollows(Boolean exact)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.CombineFollowsBoolean">
            <summary>Sets the stub of BaseRecognizer.CombineFollows(Boolean exact)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.ComputeContextSensitiveRuleFOLLOW">
            <summary>Sets the stub of BaseRecognizer.ComputeContextSensitiveRuleFOLLOW()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.ComputeContextSensitiveRuleFOLLOW01">
            <summary>Sets the stub of BaseRecognizer.ComputeContextSensitiveRuleFOLLOW()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.ComputeErrorRecoverySet">
            <summary>Sets the stub of BaseRecognizer.ComputeErrorRecoverySet()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.ComputeErrorRecoverySet01">
            <summary>Sets the stub of BaseRecognizer.ComputeErrorRecoverySet()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.ConsumeUntil(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.ConsumeUntil(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.ConsumeUntilIIntStreamBitSet">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.ConsumeUntilIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugBeginBacktrack(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugBeginBacktrack(Int32 level)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugBeginBacktrackInt32">
            <summary>Sets the stub of BaseRecognizer.DebugBeginBacktrack(Int32 level)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugEndBacktrack(System.Int32,System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugEndBacktrackInt32Boolean">
            <summary>Sets the stub of BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugEnterAlt(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterAlt(Int32 alt)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugEnterAltInt32">
            <summary>Sets the stub of BaseRecognizer.DebugEnterAlt(Int32 alt)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugEnterDecision(System.Int32,System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugEnterDecisionInt32Boolean">
            <summary>Sets the stub of BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugEnterRule(System.String,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugEnterRuleStringString">
            <summary>Sets the stub of BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugEnterSubRule(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugEnterSubRuleInt32">
            <summary>Sets the stub of BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugExitDecision(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugExitDecision(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugExitDecisionInt32">
            <summary>Sets the stub of BaseRecognizer.DebugExitDecision(Int32 decisionNumber)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugExitRule(System.String,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugExitRuleStringString">
            <summary>Sets the stub of BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugExitSubRule(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugExitSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugExitSubRuleInt32">
            <summary>Sets the stub of BaseRecognizer.DebugExitSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugListenerGet">
            <summary>Sets the stub of BaseRecognizer.get_DebugListener()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugLocation(System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugLocationInt32Int32">
            <summary>Sets the stub of BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugRecognitionException(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugRecognitionExceptionRecognitionException">
            <summary>Sets the stub of BaseRecognizer.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugSemanticPredicate(System.Boolean,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugSemanticPredicateBooleanString">
            <summary>Sets the stub of BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DisplayRecognitionError(System.String[],Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DisplayRecognitionErrorStringArrayRecognitionException">
            <summary>Sets the stub of BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.Downup(System.Object)">
            <summary>Sets the stub of TreeFilter.Downup(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DownupObject">
            <summary>Sets the stub of TreeFilter.Downup(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.EmitErrorMessage(System.String)">
            <summary>Sets the stub of BaseRecognizer.EmitErrorMessage(String msg)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.EmitErrorMessageString">
            <summary>Sets the stub of BaseRecognizer.EmitErrorMessage(String msg)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.EndResync">
            <summary>Sets the stub of BaseRecognizer.EndResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.EndResync01">
            <summary>Sets the stub of BaseRecognizer.EndResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.FailedGet">
            <summary>Sets the stub of BaseRecognizer.get_Failed()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GetCurrentInputSymbol(Antlr.Runtime.IIntStream)">
            <summary>Sets the stub of TreeParser.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GetCurrentInputSymbolIIntStream">
            <summary>Sets the stub of TreeParser.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GetErrorHeader(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of TreeParser.GetErrorHeader(RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GetErrorHeaderRecognitionException">
            <summary>Sets the stub of TreeParser.GetErrorHeader(RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GetErrorMessage(Antlr.Runtime.RecognitionException,System.String[])">
            <summary>Sets the stub of TreeParser.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GetErrorMessageRecognitionExceptionStringArray">
            <summary>Sets the stub of TreeParser.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GetMissingSymbol(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of TreeParser.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GetMissingSymbolIIntStreamRecognitionExceptionInt32BitSet">
            <summary>Sets the stub of TreeParser.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GetRuleMemoization(System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GetRuleMemoizationCacheSize">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoizationCacheSize()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GetRuleMemoizationCacheSize01">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoizationCacheSize()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GetRuleMemoizationInt32Int32">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GetTokenErrorDisplay(Antlr.Runtime.IToken)">
            <summary>Sets the stub of BaseRecognizer.GetTokenErrorDisplay(IToken t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GetTokenErrorDisplayIToken">
            <summary>Sets the stub of BaseRecognizer.GetTokenErrorDisplay(IToken t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GetTreeNodeStream">
            <summary>Sets the stub of TreeParser.GetTreeNodeStream()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GetTreeNodeStream01">
            <summary>Sets the stub of TreeParser.GetTreeNodeStream()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GrammarFileNameGet">
            <summary>Sets the stub of BaseRecognizer.get_GrammarFileName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.InitDFAs">
            <summary>Sets the stub of BaseRecognizer.InitDFAs()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.InitDFAs01">
            <summary>Sets the stub of BaseRecognizer.InitDFAs()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.InitializeStub">
            <summary>Initializes a new instance of type StubTreeFilter</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.Match(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.MatchAny(Antlr.Runtime.IIntStream)">
            <summary>Sets the stub of TreeParser.MatchAny(IIntStream ignore)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.MatchAnyIIntStream">
            <summary>Sets the stub of TreeParser.MatchAny(IIntStream ignore)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.MatchIIntStreamInt32BitSet">
            <summary>Sets the stub of BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.Memoize(Antlr.Runtime.IIntStream,System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.MemoizeIIntStreamInt32Int32">
            <summary>Sets the stub of BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.MismatchIsMissingToken(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.MismatchIsMissingTokenIIntStreamBitSet">
            <summary>Sets the stub of BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.MismatchIsUnwantedToken(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.MismatchIsUnwantedTokenIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.NumberOfSyntaxErrorsGet">
            <summary>Sets the stub of BaseRecognizer.get_NumberOfSyntaxErrors()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.Recover(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.Recover(IIntStream input, RecognitionException re)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.RecoverFromMismatchedSet(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.RecoverFromMismatchedSetIIntStreamRecognitionExceptionBitSet">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.RecoverFromMismatchedToken(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of TreeParser.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.RecoverFromMismatchedTokenIIntStreamInt32BitSet">
            <summary>Sets the stub of TreeParser.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.RecoverIIntStreamRecognitionException">
            <summary>Sets the stub of BaseRecognizer.Recover(IIntStream input, RecognitionException re)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.ReportError(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.ReportError(RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.ReportErrorRecognitionException">
            <summary>Sets the stub of BaseRecognizer.ReportError(RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.Reset">
            <summary>Sets the stub of TreeParser.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.Reset01">
            <summary>Sets the stub of TreeParser.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.SetTreeNodeStream(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Sets the stub of TreeParser.SetTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.SetTreeNodeStreamITreeNodeStream">
            <summary>Sets the stub of TreeParser.SetTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.SourceNameGet">
            <summary>Sets the stub of TreeParser.get_SourceName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.ToStrings(System.Collections.Generic.ICollection{Antlr.Runtime.IToken})">
            <summary>Sets the stub of BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.ToStringsICollectionOfIToken">
            <summary>Sets the stub of BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.TokenNamesGet">
            <summary>Sets the stub of BaseRecognizer.get_TokenNames()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.Topdown">
            <summary>Sets the stub of TreeFilter.Topdown()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.Topdown01">
            <summary>Sets the stub of TreeFilter.Topdown()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.TraceIn(System.String,System.Int32)">
            <summary>Sets the stub of TreeParser.TraceIn(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.TraceIn(System.String,System.Int32,System.Object)">
            <summary>Sets the stub of BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.TraceInStringInt32">
            <summary>Sets the stub of TreeParser.TraceIn(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.TraceInStringInt32Object">
            <summary>Sets the stub of BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.TraceOut(System.String,System.Int32)">
            <summary>Sets the stub of TreeParser.TraceOut(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeFilter.TraceOut(System.String,System.Int32,System.Object)">
            <summary>Sets the stub of BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.TraceOutStringInt32">
            <summary>Sets the stub of TreeParser.TraceOut(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeFilter.TraceOutStringInt32Object">
            <summary>Sets the stub of BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeFilter.BacktrackingLevel">
            <summary>Sets the stub of BaseRecognizer.get_BacktrackingLevel()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeFilter.DebugListener">
            <summary>Sets the stub of BaseRecognizer.get_DebugListener()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeFilter.Failed">
            <summary>Sets the stub of BaseRecognizer.get_Failed()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeFilter.GrammarFileName">
            <summary>Sets the stub of BaseRecognizer.get_GrammarFileName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeFilter.NumberOfSyntaxErrors">
            <summary>Sets the stub of BaseRecognizer.get_NumberOfSyntaxErrors()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeFilter.SourceName">
            <summary>Sets the stub of TreeParser.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeFilter.TokenNames">
            <summary>Sets the stub of BaseRecognizer.get_TokenNames()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubTreeIterator">
            <summary>Stub type of Antlr.Runtime.Tree.TreeIterator</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeIterator.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeIterator.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeIterator.InitializeStub">
            <summary>Initializes a new instance of type StubTreeIterator</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeIterator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeIterator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeIterator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubTreeParser">
            <summary>Stub type of Antlr.Runtime.Tree.TreeParser</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.#ctor(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.#ctor(Antlr.Runtime.Tree.ITreeNodeStream,Antlr.Runtime.RecognizerSharedState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.AlreadyParsedRule(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.AlreadyParsedRuleIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.AttachBackingFieldToBacktrackingLevel">
            <summary>Attaches delegates to emulate StubTreeParser.BacktrackingLevel as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.BacktrackingLevelGet">
            <summary>Sets the stub of BaseRecognizer.get_BacktrackingLevel()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.BacktrackingLevelSetInt32">
            <summary>Sets the stub of BaseRecognizer.set_BacktrackingLevel(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.BeginResync">
            <summary>Sets the stub of BaseRecognizer.BeginResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.BeginResync01">
            <summary>Sets the stub of BaseRecognizer.BeginResync()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.CombineFollows(System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.CombineFollows(Boolean exact)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.CombineFollowsBoolean">
            <summary>Sets the stub of BaseRecognizer.CombineFollows(Boolean exact)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.ComputeContextSensitiveRuleFOLLOW">
            <summary>Sets the stub of BaseRecognizer.ComputeContextSensitiveRuleFOLLOW()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.ComputeContextSensitiveRuleFOLLOW01">
            <summary>Sets the stub of BaseRecognizer.ComputeContextSensitiveRuleFOLLOW()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.ComputeErrorRecoverySet">
            <summary>Sets the stub of BaseRecognizer.ComputeErrorRecoverySet()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.ComputeErrorRecoverySet01">
            <summary>Sets the stub of BaseRecognizer.ComputeErrorRecoverySet()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.ConsumeUntil(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.ConsumeUntil(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.ConsumeUntilIIntStreamBitSet">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.ConsumeUntilIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugBeginBacktrack(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugBeginBacktrack(Int32 level)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugBeginBacktrackInt32">
            <summary>Sets the stub of BaseRecognizer.DebugBeginBacktrack(Int32 level)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugEndBacktrack(System.Int32,System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugEndBacktrackInt32Boolean">
            <summary>Sets the stub of BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugEnterAlt(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterAlt(Int32 alt)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugEnterAltInt32">
            <summary>Sets the stub of BaseRecognizer.DebugEnterAlt(Int32 alt)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugEnterDecision(System.Int32,System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugEnterDecisionInt32Boolean">
            <summary>Sets the stub of BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugEnterRule(System.String,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugEnterRuleStringString">
            <summary>Sets the stub of BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugEnterSubRule(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugEnterSubRuleInt32">
            <summary>Sets the stub of BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugExitDecision(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugExitDecision(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugExitDecisionInt32">
            <summary>Sets the stub of BaseRecognizer.DebugExitDecision(Int32 decisionNumber)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugExitRule(System.String,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugExitRuleStringString">
            <summary>Sets the stub of BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugExitSubRule(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugExitSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugExitSubRuleInt32">
            <summary>Sets the stub of BaseRecognizer.DebugExitSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugListenerGet">
            <summary>Sets the stub of BaseRecognizer.get_DebugListener()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugLocation(System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugLocationInt32Int32">
            <summary>Sets the stub of BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugRecognitionException(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugRecognitionExceptionRecognitionException">
            <summary>Sets the stub of BaseRecognizer.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugSemanticPredicate(System.Boolean,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugSemanticPredicateBooleanString">
            <summary>Sets the stub of BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.DisplayRecognitionError(System.String[],Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.DisplayRecognitionErrorStringArrayRecognitionException">
            <summary>Sets the stub of BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.EmitErrorMessage(System.String)">
            <summary>Sets the stub of BaseRecognizer.EmitErrorMessage(String msg)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.EmitErrorMessageString">
            <summary>Sets the stub of BaseRecognizer.EmitErrorMessage(String msg)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.EndResync">
            <summary>Sets the stub of BaseRecognizer.EndResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.EndResync01">
            <summary>Sets the stub of BaseRecognizer.EndResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.FailedGet">
            <summary>Sets the stub of BaseRecognizer.get_Failed()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.GetCurrentInputSymbol(Antlr.Runtime.IIntStream)">
            <summary>Sets the stub of TreeParser.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.GetCurrentInputSymbolIIntStream">
            <summary>Sets the stub of TreeParser.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.GetErrorHeader(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of TreeParser.GetErrorHeader(RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.GetErrorHeaderRecognitionException">
            <summary>Sets the stub of TreeParser.GetErrorHeader(RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.GetErrorMessage(Antlr.Runtime.RecognitionException,System.String[])">
            <summary>Sets the stub of TreeParser.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.GetErrorMessageRecognitionExceptionStringArray">
            <summary>Sets the stub of TreeParser.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.GetMissingSymbol(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of TreeParser.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.GetMissingSymbolIIntStreamRecognitionExceptionInt32BitSet">
            <summary>Sets the stub of TreeParser.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.GetRuleMemoization(System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.GetRuleMemoizationCacheSize">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoizationCacheSize()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.GetRuleMemoizationCacheSize01">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoizationCacheSize()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.GetRuleMemoizationInt32Int32">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.GetTokenErrorDisplay(Antlr.Runtime.IToken)">
            <summary>Sets the stub of BaseRecognizer.GetTokenErrorDisplay(IToken t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.GetTokenErrorDisplayIToken">
            <summary>Sets the stub of BaseRecognizer.GetTokenErrorDisplay(IToken t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.GetTreeNodeStream">
            <summary>Sets the stub of TreeParser.GetTreeNodeStream()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.GetTreeNodeStream01">
            <summary>Sets the stub of TreeParser.GetTreeNodeStream()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.GrammarFileNameGet">
            <summary>Sets the stub of BaseRecognizer.get_GrammarFileName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.InitDFAs">
            <summary>Sets the stub of BaseRecognizer.InitDFAs()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.InitDFAs01">
            <summary>Sets the stub of BaseRecognizer.InitDFAs()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.InitializeStub">
            <summary>Initializes a new instance of type StubTreeParser</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.Match(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.MatchAny(Antlr.Runtime.IIntStream)">
            <summary>Sets the stub of TreeParser.MatchAny(IIntStream ignore)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.MatchAnyIIntStream">
            <summary>Sets the stub of TreeParser.MatchAny(IIntStream ignore)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.MatchIIntStreamInt32BitSet">
            <summary>Sets the stub of BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.Memoize(Antlr.Runtime.IIntStream,System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.MemoizeIIntStreamInt32Int32">
            <summary>Sets the stub of BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.MismatchIsMissingToken(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.MismatchIsMissingTokenIIntStreamBitSet">
            <summary>Sets the stub of BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.MismatchIsUnwantedToken(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.MismatchIsUnwantedTokenIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.NumberOfSyntaxErrorsGet">
            <summary>Sets the stub of BaseRecognizer.get_NumberOfSyntaxErrors()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.Recover(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.Recover(IIntStream input, RecognitionException re)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.RecoverFromMismatchedSet(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.RecoverFromMismatchedSetIIntStreamRecognitionExceptionBitSet">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.RecoverFromMismatchedToken(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of TreeParser.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.RecoverFromMismatchedTokenIIntStreamInt32BitSet">
            <summary>Sets the stub of TreeParser.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.RecoverIIntStreamRecognitionException">
            <summary>Sets the stub of BaseRecognizer.Recover(IIntStream input, RecognitionException re)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.ReportError(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.ReportError(RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.ReportErrorRecognitionException">
            <summary>Sets the stub of BaseRecognizer.ReportError(RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.Reset">
            <summary>Sets the stub of TreeParser.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.Reset01">
            <summary>Sets the stub of TreeParser.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.SetTreeNodeStream(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Sets the stub of TreeParser.SetTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.SetTreeNodeStreamITreeNodeStream">
            <summary>Sets the stub of TreeParser.SetTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.SourceNameGet">
            <summary>Sets the stub of TreeParser.get_SourceName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.ToStrings(System.Collections.Generic.ICollection{Antlr.Runtime.IToken})">
            <summary>Sets the stub of BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.ToStringsICollectionOfIToken">
            <summary>Sets the stub of BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.TokenNamesGet">
            <summary>Sets the stub of BaseRecognizer.get_TokenNames()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.TraceIn(System.String,System.Int32)">
            <summary>Sets the stub of TreeParser.TraceIn(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.TraceIn(System.String,System.Int32,System.Object)">
            <summary>Sets the stub of BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.TraceInStringInt32">
            <summary>Sets the stub of TreeParser.TraceIn(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.TraceInStringInt32Object">
            <summary>Sets the stub of BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.TraceOut(System.String,System.Int32)">
            <summary>Sets the stub of TreeParser.TraceOut(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeParser.TraceOut(System.String,System.Int32,System.Object)">
            <summary>Sets the stub of BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.TraceOutStringInt32">
            <summary>Sets the stub of TreeParser.TraceOut(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeParser.TraceOutStringInt32Object">
            <summary>Sets the stub of BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeParser.BacktrackingLevel">
            <summary>Sets the stub of BaseRecognizer.get_BacktrackingLevel()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeParser.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeParser.DebugListener">
            <summary>Sets the stub of BaseRecognizer.get_DebugListener()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeParser.Failed">
            <summary>Sets the stub of BaseRecognizer.get_Failed()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeParser.GrammarFileName">
            <summary>Sets the stub of BaseRecognizer.get_GrammarFileName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeParser.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeParser.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeParser.NumberOfSyntaxErrors">
            <summary>Sets the stub of BaseRecognizer.get_NumberOfSyntaxErrors()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeParser.SourceName">
            <summary>Sets the stub of TreeParser.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeParser.TokenNames">
            <summary>Sets the stub of BaseRecognizer.get_TokenNames()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubTreePatternLexer">
            <summary>Stub type of Antlr.Runtime.Tree.TreePatternLexer</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreePatternLexer.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreePatternLexer.Consume">
            <summary>Sets the stub of TreePatternLexer.Consume()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreePatternLexer.Consume01">
            <summary>Sets the stub of TreePatternLexer.Consume()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreePatternLexer.InitializeStub">
            <summary>Initializes a new instance of type StubTreePatternLexer</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreePatternLexer.NextToken">
            <summary>Sets the stub of TreePatternLexer.NextToken()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreePatternLexer.NextToken01">
            <summary>Sets the stub of TreePatternLexer.NextToken()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreePatternLexer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreePatternLexer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreePatternLexer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubTreePatternParser">
            <summary>Stub type of Antlr.Runtime.Tree.TreePatternParser</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreePatternParser.#ctor(Antlr.Runtime.Tree.TreePatternLexer,Antlr.Runtime.Tree.TreeWizard,Antlr.Runtime.Tree.ITreeAdaptor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreePatternParser.InitializeStub">
            <summary>Initializes a new instance of type StubTreePatternParser</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreePatternParser.ParseNode">
            <summary>Sets the stub of TreePatternParser.ParseNode()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreePatternParser.ParseNode01">
            <summary>Sets the stub of TreePatternParser.ParseNode()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreePatternParser.ParseTree">
            <summary>Sets the stub of TreePatternParser.ParseTree()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreePatternParser.ParseTree01">
            <summary>Sets the stub of TreePatternParser.ParseTree()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreePatternParser.Pattern">
            <summary>Sets the stub of TreePatternParser.Pattern()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreePatternParser.Pattern01">
            <summary>Sets the stub of TreePatternParser.Pattern()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreePatternParser.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreePatternParser.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreePatternParser.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubTreeRewriter">
            <summary>Stub type of Antlr.Runtime.Tree.TreeRewriter</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.#ctor(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.#ctor(Antlr.Runtime.Tree.ITreeNodeStream,Antlr.Runtime.RecognizerSharedState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.AlreadyParsedRule(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.AlreadyParsedRuleIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.AlreadyParsedRule(IIntStream input, Int32 ruleIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ApplyOnce(System.Object,System.Func{Antlr.Runtime.IAstRuleReturnScope})">
            <summary>Sets the stub of TreeRewriter.ApplyOnce(Object t, Func`1&lt;IAstRuleReturnScope&gt; whichRule)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ApplyOnceObjectFuncOfIAstRuleReturnScope">
            <summary>Sets the stub of TreeRewriter.ApplyOnce(Object t, Func`1&lt;IAstRuleReturnScope&gt; whichRule)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ApplyRepeatedly(System.Object,System.Func{Antlr.Runtime.IAstRuleReturnScope})">
            <summary>Sets the stub of TreeRewriter.ApplyRepeatedly(Object t, Func`1&lt;IAstRuleReturnScope&gt; whichRule)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ApplyRepeatedlyObjectFuncOfIAstRuleReturnScope">
            <summary>Sets the stub of TreeRewriter.ApplyRepeatedly(Object t, Func`1&lt;IAstRuleReturnScope&gt; whichRule)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.AttachBackingFieldToBacktrackingLevel">
            <summary>Attaches delegates to emulate StubTreeRewriter.BacktrackingLevel as a property with a backing field.</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.BacktrackingLevelGet">
            <summary>Sets the stub of BaseRecognizer.get_BacktrackingLevel()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.BacktrackingLevelSetInt32">
            <summary>Sets the stub of BaseRecognizer.set_BacktrackingLevel(Int32 value)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.BeginResync">
            <summary>Sets the stub of BaseRecognizer.BeginResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.BeginResync01">
            <summary>Sets the stub of BaseRecognizer.BeginResync()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.Bottomup">
            <summary>Sets the stub of TreeRewriter.Bottomup()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.Bottomup01">
            <summary>Sets the stub of TreeRewriter.Bottomup()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.CombineFollows(System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.CombineFollows(Boolean exact)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.CombineFollowsBoolean">
            <summary>Sets the stub of BaseRecognizer.CombineFollows(Boolean exact)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ComputeContextSensitiveRuleFOLLOW">
            <summary>Sets the stub of BaseRecognizer.ComputeContextSensitiveRuleFOLLOW()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ComputeContextSensitiveRuleFOLLOW01">
            <summary>Sets the stub of BaseRecognizer.ComputeContextSensitiveRuleFOLLOW()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ComputeErrorRecoverySet">
            <summary>Sets the stub of BaseRecognizer.ComputeErrorRecoverySet()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ComputeErrorRecoverySet01">
            <summary>Sets the stub of BaseRecognizer.ComputeErrorRecoverySet()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ConsumeUntil(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ConsumeUntil(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ConsumeUntilIIntStreamBitSet">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, BitSet set)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ConsumeUntilIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.ConsumeUntil(IIntStream input, Int32 tokenType)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugBeginBacktrack(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugBeginBacktrack(Int32 level)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugBeginBacktrackInt32">
            <summary>Sets the stub of BaseRecognizer.DebugBeginBacktrack(Int32 level)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugEndBacktrack(System.Int32,System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugEndBacktrackInt32Boolean">
            <summary>Sets the stub of BaseRecognizer.DebugEndBacktrack(Int32 level, Boolean successful)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugEnterAlt(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterAlt(Int32 alt)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugEnterAltInt32">
            <summary>Sets the stub of BaseRecognizer.DebugEnterAlt(Int32 alt)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugEnterDecision(System.Int32,System.Boolean)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugEnterDecisionInt32Boolean">
            <summary>Sets the stub of BaseRecognizer.DebugEnterDecision(Int32 decisionNumber, Boolean couldBacktrack)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugEnterRule(System.String,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugEnterRuleStringString">
            <summary>Sets the stub of BaseRecognizer.DebugEnterRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugEnterSubRule(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugEnterSubRuleInt32">
            <summary>Sets the stub of BaseRecognizer.DebugEnterSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugExitDecision(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugExitDecision(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugExitDecisionInt32">
            <summary>Sets the stub of BaseRecognizer.DebugExitDecision(Int32 decisionNumber)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugExitRule(System.String,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugExitRuleStringString">
            <summary>Sets the stub of BaseRecognizer.DebugExitRule(String grammarFileName, String ruleName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugExitSubRule(System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugExitSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugExitSubRuleInt32">
            <summary>Sets the stub of BaseRecognizer.DebugExitSubRule(Int32 decisionNumber)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugListenerGet">
            <summary>Sets the stub of BaseRecognizer.get_DebugListener()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugLocation(System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugLocationInt32Int32">
            <summary>Sets the stub of BaseRecognizer.DebugLocation(Int32 line, Int32 charPositionInLine)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugRecognitionException(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugRecognitionExceptionRecognitionException">
            <summary>Sets the stub of BaseRecognizer.DebugRecognitionException(RecognitionException ex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugSemanticPredicate(System.Boolean,System.String)">
            <summary>Sets the stub of BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugSemanticPredicateBooleanString">
            <summary>Sets the stub of BaseRecognizer.DebugSemanticPredicate(Boolean result, String predicate)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DisplayRecognitionError(System.String[],Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DisplayRecognitionErrorStringArrayRecognitionException">
            <summary>Sets the stub of BaseRecognizer.DisplayRecognitionError(String[] tokenNames, RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.Downup(System.Object)">
            <summary>Sets the stub of TreeRewriter.Downup(Object t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.Downup(System.Object,System.Boolean)">
            <summary>Sets the stub of TreeRewriter.Downup(Object t, Boolean showTransformations)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DownupObject">
            <summary>Sets the stub of TreeRewriter.Downup(Object t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DownupObjectBoolean">
            <summary>Sets the stub of TreeRewriter.Downup(Object t, Boolean showTransformations)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.EmitErrorMessage(System.String)">
            <summary>Sets the stub of BaseRecognizer.EmitErrorMessage(String msg)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.EmitErrorMessageString">
            <summary>Sets the stub of BaseRecognizer.EmitErrorMessage(String msg)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.EndResync">
            <summary>Sets the stub of BaseRecognizer.EndResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.EndResync01">
            <summary>Sets the stub of BaseRecognizer.EndResync()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.FailedGet">
            <summary>Sets the stub of BaseRecognizer.get_Failed()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GetCurrentInputSymbol(Antlr.Runtime.IIntStream)">
            <summary>Sets the stub of TreeParser.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GetCurrentInputSymbolIIntStream">
            <summary>Sets the stub of TreeParser.GetCurrentInputSymbol(IIntStream input)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GetErrorHeader(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of TreeParser.GetErrorHeader(RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GetErrorHeaderRecognitionException">
            <summary>Sets the stub of TreeParser.GetErrorHeader(RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GetErrorMessage(Antlr.Runtime.RecognitionException,System.String[])">
            <summary>Sets the stub of TreeParser.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GetErrorMessageRecognitionExceptionStringArray">
            <summary>Sets the stub of TreeParser.GetErrorMessage(RecognitionException e, String[] tokenNames)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GetMissingSymbol(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of TreeParser.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GetMissingSymbolIIntStreamRecognitionExceptionInt32BitSet">
            <summary>Sets the stub of TreeParser.GetMissingSymbol(IIntStream input, RecognitionException e, Int32 expectedTokenType, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GetRuleMemoization(System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GetRuleMemoizationCacheSize">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoizationCacheSize()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GetRuleMemoizationCacheSize01">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoizationCacheSize()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GetRuleMemoizationInt32Int32">
            <summary>Sets the stub of BaseRecognizer.GetRuleMemoization(Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GetTokenErrorDisplay(Antlr.Runtime.IToken)">
            <summary>Sets the stub of BaseRecognizer.GetTokenErrorDisplay(IToken t)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GetTokenErrorDisplayIToken">
            <summary>Sets the stub of BaseRecognizer.GetTokenErrorDisplay(IToken t)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GetTreeNodeStream">
            <summary>Sets the stub of TreeParser.GetTreeNodeStream()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GetTreeNodeStream01">
            <summary>Sets the stub of TreeParser.GetTreeNodeStream()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GrammarFileNameGet">
            <summary>Sets the stub of BaseRecognizer.get_GrammarFileName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.InitDFAs">
            <summary>Sets the stub of BaseRecognizer.InitDFAs()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.InitDFAs01">
            <summary>Sets the stub of BaseRecognizer.InitDFAs()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.InitializeStub">
            <summary>Initializes a new instance of type StubTreeRewriter</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.Match(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.MatchAny(Antlr.Runtime.IIntStream)">
            <summary>Sets the stub of TreeParser.MatchAny(IIntStream ignore)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.MatchAnyIIntStream">
            <summary>Sets the stub of TreeParser.MatchAny(IIntStream ignore)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.MatchIIntStreamInt32BitSet">
            <summary>Sets the stub of BaseRecognizer.Match(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.Memoize(Antlr.Runtime.IIntStream,System.Int32,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.MemoizeIIntStreamInt32Int32">
            <summary>Sets the stub of BaseRecognizer.Memoize(IIntStream input, Int32 ruleIndex, Int32 ruleStartIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.MismatchIsMissingToken(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.MismatchIsMissingTokenIIntStreamBitSet">
            <summary>Sets the stub of BaseRecognizer.MismatchIsMissingToken(IIntStream input, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.MismatchIsUnwantedToken(Antlr.Runtime.IIntStream,System.Int32)">
            <summary>Sets the stub of BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.MismatchIsUnwantedTokenIIntStreamInt32">
            <summary>Sets the stub of BaseRecognizer.MismatchIsUnwantedToken(IIntStream input, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.NumberOfSyntaxErrorsGet">
            <summary>Sets the stub of BaseRecognizer.get_NumberOfSyntaxErrors()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.Recover(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.Recover(IIntStream input, RecognitionException re)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.RecoverFromMismatchedSet(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.RecoverFromMismatchedSetIIntStreamRecognitionExceptionBitSet">
            <summary>Sets the stub of BaseRecognizer.RecoverFromMismatchedSet(IIntStream input, RecognitionException e, BitSet follow)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.RecoverFromMismatchedToken(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)">
            <summary>Sets the stub of TreeParser.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.RecoverFromMismatchedTokenIIntStreamInt32BitSet">
            <summary>Sets the stub of TreeParser.RecoverFromMismatchedToken(IIntStream input, Int32 ttype, BitSet follow)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.RecoverIIntStreamRecognitionException">
            <summary>Sets the stub of BaseRecognizer.Recover(IIntStream input, RecognitionException re)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ReportError(Antlr.Runtime.RecognitionException)">
            <summary>Sets the stub of BaseRecognizer.ReportError(RecognitionException e)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ReportErrorRecognitionException">
            <summary>Sets the stub of BaseRecognizer.ReportError(RecognitionException e)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ReportTransformation(System.Object,System.Object)">
            <summary>Sets the stub of TreeRewriter.ReportTransformation(Object oldTree, Object newTree)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ReportTransformationObjectObject">
            <summary>Sets the stub of TreeRewriter.ReportTransformation(Object oldTree, Object newTree)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.Reset">
            <summary>Sets the stub of TreeParser.Reset()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.Reset01">
            <summary>Sets the stub of TreeParser.Reset()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.SetTreeNodeStream(Antlr.Runtime.Tree.ITreeNodeStream)">
            <summary>Sets the stub of TreeParser.SetTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.SetTreeNodeStreamITreeNodeStream">
            <summary>Sets the stub of TreeParser.SetTreeNodeStream(ITreeNodeStream input)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.SourceNameGet">
            <summary>Sets the stub of TreeParser.get_SourceName()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ToStrings(System.Collections.Generic.ICollection{Antlr.Runtime.IToken})">
            <summary>Sets the stub of BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.ToStringsICollectionOfIToken">
            <summary>Sets the stub of BaseRecognizer.ToStrings(ICollection`1&lt;IToken&gt; tokens)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.TokenNamesGet">
            <summary>Sets the stub of BaseRecognizer.get_TokenNames()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.Topdown">
            <summary>Sets the stub of TreeRewriter.Topdown()</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.Topdown01">
            <summary>Sets the stub of TreeRewriter.Topdown()</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.TraceIn(System.String,System.Int32)">
            <summary>Sets the stub of TreeParser.TraceIn(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.TraceIn(System.String,System.Int32,System.Object)">
            <summary>Sets the stub of BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.TraceInStringInt32">
            <summary>Sets the stub of TreeParser.TraceIn(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.TraceInStringInt32Object">
            <summary>Sets the stub of BaseRecognizer.TraceIn(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.TraceOut(System.String,System.Int32)">
            <summary>Sets the stub of TreeParser.TraceOut(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.TraceOut(System.String,System.Int32,System.Object)">
            <summary>Sets the stub of BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.TraceOutStringInt32">
            <summary>Sets the stub of TreeParser.TraceOut(String ruleName, Int32 ruleIndex)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.TraceOutStringInt32Object">
            <summary>Sets the stub of BaseRecognizer.TraceOut(String ruleName, Int32 ruleIndex, Object inputSymbol)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.BacktrackingLevel">
            <summary>Sets the stub of BaseRecognizer.get_BacktrackingLevel()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.DebugListener">
            <summary>Sets the stub of BaseRecognizer.get_DebugListener()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.Failed">
            <summary>Sets the stub of BaseRecognizer.get_Failed()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.GrammarFileName">
            <summary>Sets the stub of BaseRecognizer.get_GrammarFileName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.NumberOfSyntaxErrors">
            <summary>Sets the stub of BaseRecognizer.get_NumberOfSyntaxErrors()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.SourceName">
            <summary>Sets the stub of TreeParser.get_SourceName()</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeRewriter.TokenNames">
            <summary>Sets the stub of BaseRecognizer.get_TokenNames()</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubTreeRuleReturnScope`1">
            <summary>Stub type of Antlr.Runtime.Tree.TreeRuleReturnScope`1</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRuleReturnScope`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeRuleReturnScope`1.InitializeStub">
            <summary>Initializes a new instance of type StubTreeRuleReturnScope</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeRuleReturnScope`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeRuleReturnScope`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeRuleReturnScope`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubTreeVisitor">
            <summary>Stub type of Antlr.Runtime.Tree.TreeVisitor</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeVisitor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeVisitor.#ctor(Antlr.Runtime.Tree.ITreeAdaptor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeVisitor.InitializeStub">
            <summary>Initializes a new instance of type StubTreeVisitor</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeVisitor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeVisitor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeVisitor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubTreeVisitorAction">
            <summary>Stub type of Antlr.Runtime.Tree.TreeVisitorAction</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeVisitorAction.#ctor(System.Func{System.Object,System.Object},System.Func{System.Object,System.Object})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeVisitorAction.InitializeStub">
            <summary>Initializes a new instance of type StubTreeVisitorAction</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeVisitorAction.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeVisitorAction.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeVisitorAction.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Antlr.Runtime.Tree.Fakes.StubTreeWizard">
            <summary>Stub type of Antlr.Runtime.Tree.TreeWizard</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeWizard.#ctor(System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeWizard.#ctor(Antlr.Runtime.Tree.ITreeAdaptor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeWizard.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeWizard.#ctor(Antlr.Runtime.Tree.ITreeAdaptor,System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeWizard.ComputeTokenTypes(System.String[])">
            <summary>Sets the stub of TreeWizard.ComputeTokenTypes(String[] tokenNames)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeWizard.ComputeTokenTypesStringArray">
            <summary>Sets the stub of TreeWizard.ComputeTokenTypes(String[] tokenNames)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeWizard.Create(System.String)">
            <summary>Sets the stub of TreeWizard.Create(String pattern)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeWizard.CreateString">
            <summary>Sets the stub of TreeWizard.Create(String pattern)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeWizard.Find(System.Object,System.Int32)">
            <summary>Sets the stub of TreeWizard.Find(Object t, Int32 ttype)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeWizard.Find(System.Object,System.String)">
            <summary>Sets the stub of TreeWizard.Find(Object t, String pattern)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeWizard.FindFirst(System.Object,System.String)">
            <summary>Sets the stub of TreeWizard.FindFirst(Object t, String pattern)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeWizard.FindFirst(System.Object,System.Int32)">
            <summary>Sets the stub of TreeWizard.FindFirst(Object t, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeWizard.FindFirstObjectInt32">
            <summary>Sets the stub of TreeWizard.FindFirst(Object t, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeWizard.FindFirstObjectString">
            <summary>Sets the stub of TreeWizard.FindFirst(Object t, String pattern)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeWizard.FindObjectInt32">
            <summary>Sets the stub of TreeWizard.Find(Object t, Int32 ttype)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeWizard.FindObjectString">
            <summary>Sets the stub of TreeWizard.Find(Object t, String pattern)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeWizard.GetTokenType(System.String)">
            <summary>Sets the stub of TreeWizard.GetTokenType(String tokenName)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeWizard.GetTokenTypeString">
            <summary>Sets the stub of TreeWizard.GetTokenType(String tokenName)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeWizard.IndexCore(System.Object,System.Collections.Generic.IDictionary{System.Int32,System.Collections.IList})">
            <summary>Sets the stub of TreeWizard.IndexCore(Object t, IDictionary`2&lt;Int32,IList&gt; m)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeWizard.IndexCoreObjectIDictionaryOfInt32IList">
            <summary>Sets the stub of TreeWizard.IndexCore(Object t, IDictionary`2&lt;Int32,IList&gt; m)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeWizard.InitializeStub">
            <summary>Initializes a new instance of type StubTreeWizard</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeWizard.ParseCore(System.Object,Antlr.Runtime.Tree.TreeWizard.TreePattern,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Sets the stub of TreeWizard.ParseCore(Object t1, TreePattern tpattern, IDictionary`2&lt;String,Object&gt; labels)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeWizard.ParseCoreObjectTreeWizardTreePatternIDictionaryOfStringObject">
            <summary>Sets the stub of TreeWizard.ParseCore(Object t1, TreePattern tpattern, IDictionary`2&lt;String,Object&gt; labels)</summary>
        </member>
        <member name="M:Antlr.Runtime.Tree.Fakes.StubTreeWizard.VisitCore(System.Object,System.Object,System.Int32,System.Int32,Antlr.Runtime.Tree.TreeWizard.IContextVisitor)">
            <summary>Sets the stub of TreeWizard.VisitCore(Object t, Object parent, Int32 childIndex, Int32 ttype, IContextVisitor visitor)</summary>
        </member>
        <member name="F:Antlr.Runtime.Tree.Fakes.StubTreeWizard.VisitCoreObjectObjectInt32Int32TreeWizardIContextVisitor">
            <summary>Sets the stub of TreeWizard.VisitCore(Object t, Object parent, Int32 childIndex, Int32 ttype, IContextVisitor visitor)</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeWizard.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeWizard.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Antlr.Runtime.Tree.Fakes.StubTreeWizard.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
